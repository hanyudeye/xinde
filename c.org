* Gcc
基于C/C++的预处理器和编译器
  -o：指定生成的输出文件,所以编译多个文件是,-o 没有意义；
  -E：仅执行编译预处理； .i
  -S：将C代码转换为汇编代码；.s
  -wall：显示警告信息；
  -c：仅执行编译操作，不进行连接操作。.o
** 2. 编译为汇编代码   gcc -S test.i -o test.s
   masm=intel	汇编代码 
   -std 指定使用的语言标准
** 3. gas  gcc -c test.s -o test.o
   :-Wa,option
   :-llibrary 连接名为library的库文件
   :-L 指定额外路径
   :-m32
** 4. ld  gcc test.o -o test
   :-lobjc 这个-l选项的特殊形式用于连接Objective C程序.
   :-nostartfiles 不连接系统标准启动文件,而标准库文件仍然正常使用.
   :-nostdlib 不连接系统标准启动文件和标准库文件.只把指定的文件传递给连接器.
   :-static 在支持动态连接(dynamic linking)的系统上,阻止连接共享库.该选项在其他系统上无效.
   :-shared 生成一个共享目标文件,他可以和其他目标文件连接产生可执行文件.只有部分系统支持该选项.
   :-symbolic 建立共享目标文件的时候,把引用绑定到全局符号上.对所有无法解析的引用作出警
   告(除非用连接编辑选项 `-Xlinker -z -Xlinker defs'取代).只有部分系统支持该选项.
   :-u symbol 使连接器认为取消了symbol的符号定义,从而连接库模块以取得定义.你可以使用多
   个 `-u'选项,各自跟上不同的符号,使得连接器调入附加的库模块.
   : [-e ENTRY]|[--entry=ENTRY]	 使用 ENTRY (入口)标识符作为程序执行的开始端,而不是缺省入口.   
   : -lAR	在连接文件列表中增加归档库文件AR.可以多次使用这个选项. 凡指定一项AR,ld 就会在路径列表中增加一项对libar.a的搜索.
   : -LSEARCHDIR   这个选项将路径SEARCHDIR添加到路径列表, ld在这个列表中搜索归档库.
   可以多次使用这个选项.缺省的搜索路径集(不使用-L时)取决于ld使用的
   模拟模式(emulation)及其配置.在连接脚本中,可以用SEARCH_DIR命令指定路径. 
   : -Tbss org
   : -Tdata org
   : -Ttext org
   把org作为输出文件的段起始地址 --- 特别是 --- bss,data,或text段.org必须是十六进制整数. 
   : -X    删除 全部 临时的 局部符号. 大多数 目的文件 中, 这些 局部符	    号 的 名字 用 `L' 做 开头.
   : -x    删除 全部 局部符号. 
   : -m 指定仿真环境,这里要与gcc 的选项 -m32一致; -V显示 支持的仿真：本机支持   elf_x86_64   
   elf32_x86_64   elf_i386   i386linux   elf_l1om   elf_k1om   i386pep   i386pe
   LDFLAGS="-L/usr/lib64 -L/lib64" 全局常量
   : 注意,如果连接器通过被编译器驱动来间接引用(比如gcc), 那所有的连接器命令行选项前必须加上前缀'-Wl'
   gcc -Wl,--startgroup foo.o bar.o -Wl,--endgroup 
   : `-b INPUT-FORMAT'
   `--format=INPUT-FORMAT' [binary]
   'ld'可以被配置为支持多于一种的目标文件.缺省的格式是从环境变量'GNUTARGET'中得到的.
   你也可以从一个脚本中定义输入格式,使用的命令是'TARGET'. 
   : `--oformat OUTPUT-FORMAT'	  指定输出目标文件的二进制格式.一般不需要指定,ld的缺省输出格式配置
   为/各个机器上最常用的/ 格式. output-format是一个 字符串,BFD库支持的格式名称:在操作系统一层了,如果是操作系统本身,加入此选项
   : [`-N']|[`--omagic']
   把text和data节设置为可读写.同时,取消数据节的页对齐,同时,取消对共享库的连接.如果输出格式
   支持Unix风格的magic number, 把输出标志为'OMAGIC'. 
** 5. 检错
   : -Wall 产生尽可能多的警告信息
   : -Werror GCC会在所有产生警告的地方停止编译
** 6. 库文件连接 .a .so
   : 包含文件 -I /usr/dirpath    
   : 库   -L /dirpath   -llibname  不要.a 或.so 后缀
   : 强制静态库 gcc –L /usr/dev/mysql/lib –static –lmysqlclient test.o –o test
   静态库链接时搜索路径顺序：
   1. ld会去找GCC命令中的参数-L
   2. 再找gcc的环境变量LIBRARY_PATH
   3. 再找内定目录 /lib /usr/lib /usr/local/lib 这是当初compile gcc时写在程序内的

   动态链接时、执行时搜索路径顺序:
   1. 编译目标代码时指定的动态库搜索路径
   2. 环境变量LD_LIBRARY_PATH指定的动态库搜索路径
   3. 配置文件/etc/ld.so.conf中指定的动态库搜索路径
   4. 默认的动态库搜索路径/lib
   5. 默认的动态库搜索路径/usr/lib
   有关环境变量：
   LIBRARY_PATH环境变量：指定程序静态链接库文件搜索路径
   LD_LIBRARY_PATH环境变量：指定程序动态链接库文件搜索路径
** 7. 调试
   -g:
   -gstabs:
   -gcoff:
   -gdwarf:
** 8. 优化
   -O0 不优化
   -fcaller-saves: 
** 9. 目标机选项(Target Option) 交叉编译
   -b machine 
   -V version 哪个版本的gcc
** 10.配置相关选项(Configuration Dependent Option)
   M680x0 选项
   i386选项
** 11.总体选项(Overall Option)
   -x language
   明确指出后面输入文件的语言为language (而不是从文件名后缀得到的默认选择).

** 12.目录选项(DIRECTORY OPTION)
   :-Idir 在头文件的搜索路径列表中添加dir 目录.
   :-Ldir 在`-l'选项的搜索路径列表中添加dir目录.
** 13.C 文件与 汇编文件编译
   以下涉及到不同编译器对符号的处理问题。比如我们写个汇编文件，汇编后，汇编文件中的符号未变，但是当我们写个C文件再生成目标文件后，源文件中的符号前可能加了下划线，当两者之间发生引用关系时可能无法连接，此时我们会用到下面的命令。
   : --change-leading-char
   : --remove-leading-char
   : --prefix-symbols=string
