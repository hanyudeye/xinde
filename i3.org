* i3 - an improved dynamic, tiling window manager
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+c layout toggle split

SYNOPSIS
       i3 [-a] [-c configfile] [-C] [-d all] [-v] [-V]

OPTIONS
       -a Disables autostart.
       -c Specifies an alternate configuration file path.
       -C Check the configuration file for validity and exit.
       -d all Enables debug logging. The all parameter is present for historical reasons.
       -v Display version number (and date of the last commit).
       -V Be verbose.
       --force-xinerama
           Use Xinerama instead of RandR. This option should only be used if you are stuck
           with the old nVidia closed source driver (older than 302.17) which does not
           support RandR.

       --get-socketpath
           Retrieve the i3 IPC socket path from X11, print it, then exit.

       --shmlog-size <limit>
           Limits the size of the i3 SHM log to <limit> bytes. Setting this to 0 disables
           SHM logging entirely. The default is 0 bytes.
DESCRIPTION
   INTRODUCTION
       i3 was created because wmii, our favorite window manager at the time, didn’t provide
       some features we wanted (multi-monitor done right, for example), had some bugs,
       didn’t progress since quite some time and wasn’t easy to hack at all (source code
       comments/documentation completely lacking). Still, we think the wmii developers and
       contributors did a great job. Thank you for inspiring us to create i3.

       Please be aware that i3 is primarily targeted at advanced users and developers.

   IMPORTANT NOTE TO nVidia BINARY DRIVER USERS
       If you are using the nVidia binary graphics driver (also known as blob) before
       version 302.17, you need to use the --force-xinerama flag (in your ~/.xsession) when
       starting i3, like so:

           exec i3 --force-xinerama -V >>~/.i3/i3log 2>&1

       See also docs/multi-monitor for the full explanation.

   TERMINOLOGY
       Tree
           i3 keeps your layout in a tree data structure.
       Window
           An X11 window, like the Firefox browser window or a terminal emulator.
       Floating Window
           A window which "floats" on top of other windows. This style is used by i3 to
           display X11 windows with type "dialog", such as the "Print" or "Open File" dialog
           boxes in many GUI applications. Use of floating windows can be fine-tuned with
           the for_window command (see HTML userguide).

       Split container
           A split container contains multiple other split containers or windows.

           Containers can be used in various layouts. The default mode is called "default"
           and just resizes each client equally so that it fits.

       Workspace
           A workspace is a set of containers. Other window managers call this "Virtual
           Desktops".

           In i3, each workspace is assigned to a specific virtual screen. By default,
           screen 1 has workspace 1, screen 2 has workspace 2 and so on... However, when you
           create a new workspace (by simply switching to it), it’ll be assigned the screen
           you are currently on.

       Output
           Using XRandR, you can have an X11 screen spanning multiple real monitors.
           Furthermore, you can set them up in cloning mode or with positions (monitor 1 is
           left of monitor 2).

           i3 uses the RandR API to query which outputs are available and which screens are
           connected to these outputs.

KEYBINDINGS(键盘绑定）
       Here is a short overview of the default keybindings:

       Mod1+Enter
           Open a new terminal emulator window.

       Mod1+d
           Open dmenu for starting any application by typing (part of) its name.

       j/k/l/;
           Direction keys (left, down, up, right). They are on your homerow (see the mark on
           your "j" key). Alternatively, you can use the cursor keys.

       Mod1+<direction>
           Focus window in <direction>.

       Mod1+Shift+<direction>
           Move window to <direction>.

       Mod1+<number>
           Switch to workspace <number>.

       Mod1+Shift+<number>
           Move window to workspace <number>.

       Mod1+f
           Toggle fullscreen mode.

       Mod1+s
           Enable stacking layout for the current container.

       Mod1+e
           Enable default layout for the current container.

       Mod1+w
           Enable tabbed layout for the current container.

       Mod1+Shift+Space
           Toggle tiling/floating for the current container.

       Mod1+Space
           Select the first tiling container if the current container is floating and
           vice-versa.

       Mod1+Shift+q
           Kills the current window. This is equivalent to "clicking on the close button",
           meaning a polite request to the application to close this window. For example,
           Firefox will save its session upon such a request. If the application does not
           support that, the window will be killed and it depends on the application what
           happens.

       Mod1+Shift+r
           Restarts i3 in place. Your layout will be preserved.

       Mod1+Shift+e
           Exits i3.

FILES
   ~/.i3/config (or ~/.config/i3/config)
       When starting, i3 looks for configuration files in the following order:

        1. ~/.i3/config

        2. ~/.config/i3/config (or $XDG_CONFIG_HOME/i3/config if set)

        3. /etc/i3/config

        4. /etc/xdg/i3/config (or $XDG_CONFIG_DIRS/i3/config if set)

       You can specify a custom path using the -c option.

       Sample configuration.

           # i3 config file (v4)

           # Font for window titles. Will also be used by the bar unless a different font
           # is used in the bar {} block below.
           # This font is widely installed, provides lots of unicode glyphs, right-to-left
           # text rendering and scalability on retina/hidpi displays (thanks to pango).
           font pango:DejaVu Sans Mono 8
           # Before i3 v4.8, we used to recommend this one as the default:
           # font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
           # The font above is very space-efficient, that is, it looks good, sharp and
           # clear in small sizes. However, its unicode glyph coverage is limited, the old
           # X core fonts rendering does not support right-to-left and this being a bitmap
           # font, it doesn’t scale on retina/hidpi displays.

           # use Mouse+Mod1 to drag floating windows to their wanted position
           floating_modifier Mod1

           # start a terminal
           bindsym Mod1+Return exec /usr/bin/urxvt

           # kill focused window
           bindsym Mod1+Shift+q kill

           # start dmenu (a program launcher)
           bindsym Mod1+d exec /usr/bin/dmenu_run

           # change focus
           bindsym Mod1+j focus left
           bindsym Mod1+k focus down
           bindsym Mod1+l focus up
           bindsym Mod1+semicolon focus right

           # alternatively, you can use the cursor keys:
           bindsym Mod1+Left focus left
           bindsym Mod1+Down focus down
           bindsym Mod1+Up focus up
           bindsym Mod1+Right focus right

           # move focused window
           bindsym Mod1+Shift+j move left
           bindsym Mod1+Shift+k move down
           bindsym Mod1+Shift+l move up
           bindsym Mod1+Shift+semicolon move right

           # alternatively, you can use the cursor keys:
           bindsym Mod1+Shift+Left move left
           bindsym Mod1+Shift+Down move down
           bindsym Mod1+Shift+Up move up
           bindsym Mod1+Shift+Right move right

           # split in horizontal orientation
           bindsym Mod1+h split h

           # split in vertical orientation
           bindsym Mod1+v split v

           # enter fullscreen mode for the focused container
           bindsym Mod1+f fullscreen toggle

           # change container layout (stacked, tabbed, default)
           bindsym Mod1+s layout stacking
           bindsym Mod1+w layout tabbed
           bindsym Mod1+e layout default

           # toggle tiling / floating
           bindsym Mod1+Shift+space floating toggle

           # change focus between tiling / floating windows
           bindsym Mod1+space focus mode_toggle

           # focus the parent container
           bindsym Mod1+a focus parent

           # focus the child container
           #bindsym Mod1+d focus child

           # switch to workspace
           bindsym Mod1+1 workspace 1
           bindsym Mod1+2 workspace 2
           # ..

           # move focused container to workspace
           bindsym Mod1+Shift+1 move workspace 1
           bindsym Mod1+Shift+2 move workspace 2
           # ...

           # reload the configuration file
           bindsym Mod1+Shift+c reload
           # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
           bindsym Mod1+Shift+r restart
           # exit i3 (logs you out of your X session)
           bindsym Mod1+Shift+e exit

           # display workspace buttons plus a statusline generated by i3status
           bar {
               status_command i3status
           }

   ~/.xsession
       This file is where you should configure your locales and start i3. It is run by your
       login manager (xdm, slim, gdm, ...) as soon as you login.

       Sample xsession.

           # Disable DPMS turning off the screen
           xset -dpms
           xset s off

           # Disable bell
           xset -b

           # Enable zapping (C-A-<Bksp> kills X)
           setxkbmap -option terminate:ctrl_alt_bksp

           # Enforce correct locales from the beginning:
           # LC_ALL is unset since it overwrites everything
           # LANG=de_DE.UTF-8 is used, except for:
           # LC_MESSAGES=C never translates program output
           # LC_TIME=en_DK leads to yyyy-mm-dd hh:mm date/time output
           unset LC_ALL
           export LANG=de_DE.UTF-8
           export LC_MESSAGES=C
           export LC_TIME=en_DK.UTF-8

           # Use XToolkit in java applications
           export AWT_TOOLKIT=XToolkit

           # Set background color
           xsetroot -solid "#333333"

           # Enable core dumps in case something goes wrong
           ulimit -c unlimited

           # Start i3 and log to ~/.i3/logfile
           echo "Starting at $(date)" >> ~/.i3/logfile
           exec /usr/bin/i3 -V -d all >> ~/.i3/logfile

ENVIRONMENT
   I3SOCK
       This variable overwrites the IPC socket path (placed in
       /tmp/i3-%u.XXXXXX/ipc-socket.%p by default, where %u is replaced with your UNIX
       username, %p is replaced with i3’s PID and XXXXXX is a string of random characters
       from the portable filename character set (see mkdtemp(3))). The IPC socket is used by
       external programs like i3-msg(1) or i3bar(1).

TODO
       There is still lot of work to do. Please check our bugtracker for up-to-date
       information about tasks which are still not finished.

SEE ALSO
       You should have a copy of the userguide (featuring nice screenshots/graphics which is
       why this is not integrated into this manpage), the debugging guide, and the "how to
       hack" guide. If you are building from source, run: make -C docs

       You can also access these documents online at https://i3wm.org/

       i3-input(1), i3-msg(1), i3bar(1), i3-nagbar(1), i3-config-wizard(1),
       i3-migrate-config-to-v4(1)
* i3wm在Arch Linux上的配置……
  如果你希望工作区内的所有窗口可以平铺开来1并能自由地在它们中进行切换和调整，也许可以尝试使用一个平铺式窗口管理器2来管理它们……
i3可以：

使用feh设置壁纸
使用i3bar和i3status实现面板
使用i3block锁屏
自由设置、调整、切换多工作区中的程序窗口以及自定义大多数按键组合，比如：
程序窗口要还是不要标题栏？多宽？
是否要对位于工作区里的程序调整窗口大小？位置？是否要最大化显示？
是否要窗口堆叠显示？标签化显示？要窗口浮动起来然后又平铺、堆叠？
是否要新运行的程序放到其它位置？是浮动打开还是平铺或者是堆叠？
是否要在多个工作区及位于多个工作区的程序间自由切换？
使用xcompmgr或者compton……让终端模拟器透明或者开启简单的窗口的动画和混合阴影什么的……
如果你需要这些功能，那么 First search and install i3……

And select install：

i3status
i3blocks
xcompmgr | compton
feh
lxappearance
gtk-engines
Then init and configure the i3 WM……

如果你还没有创建i3的用户级配置文件~/.config/i3/config的骨架文件，创建i3骨架文件和目录……

mkdir -pv ~/.config/i3
i3-config-wizard # `i3`的用户级配置文件也可以是`~/.i3/config`
1
2
Next，你便可以开始尝试配置~/.xinitrc并使用startx或者直接使用显示管理器（登录管理器）来启动i3并根据需要进行更新i3配置文件来调整i3的使用方式……

不过，如果你希望用好i3的话，还得好好熟悉熟悉i3的运作和i3配置文件里的组织和配置方式……

========== ~/.config/i3/config ==========

# i3 窗口调整与切换的主使用键：Mod1 <=> Meta(Alt) | Mod4 <=> (Windows键，Supper键)
set $mod Mod4

font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# 打开默认终端窗口的键绑定……
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec xfce4-terminal
#bindsym $mod+Return exec urxvt -sh 40

#
# 随 i3 一起启动的程序（这些程序在使用之前必须被安装到系统中），为了让调整的设置生效，你可能需要重启 X 或者 i3 会话……
# 为了设置 i3 壁纸（图片路径需要被正确设置）……
exec --no-startup-id feh --bg-scale "/home/user/Ljca/Pictures/391014106.jpg"

# 因为 i3 窗口合成器不支持对窗口合成一些混合效果（比如：窗口的打开/关闭动画（淡入淡出）、混合透明、窗口阴影），所以如果你希望窗口有这些效果的话，你可能需要安装`xcompmpr`或者其它类似的程序并在终端模拟器中添加适当的选项后台运行它，如果你不打算让它随 i3 一起启动的话……
exec --no-startup-id xcompmgr -FCf -nc -t -5 &

# 为了启动 i3bar 上的网络管理小程序……
#exec --no-startup-id nm-applet&

# 为了启动 fcitx 输入法……
#exec --no-startup-id LANG="zh_CN.UTF-8" fcitx &

# 为了设置电源管理……
exec --no-startup-id xset dpms 90 300

# 为了在 i3bar 上显示那种桌面环境面板上的托盘图标，你需要调整`xrandr`的输出（可以尝试运行`xrandr`获取）的……
#exec --no-starup-id xrandr --output eDP-1 --primary

# 如果你不想使用i3bar，可以使用其它桌面环境的面板来替代，比如 xfce4 的:
#exec --no-startup-id xfce4-panel --disable-wm-check
exec --no-startup-id xfce4-terminal&>/dev/null&

# 为了启用触摸板的轻触功能，不过在这里设置无效……
#synclient VertTwoFingerScroll = 1 HorizTwoFingerScroll = 1 TapButton1 = 1 TapButton2 = 3 TapButton3 = 2

# kill 窗口的键绑定……
#bindsym $mod+Shift+q kill
bindsym mod1+F4 kill


# Application Key Bind Start……
# 绑定截图程序到 Print 键……
#bindsym $mod+Print exec scrot
bindsym Print exec xfce4-screenshooter -m 2>/dev/null

# File Browser 1
bindsym Ctrl+mod1+F exec pcmanfm &>/dev/null&

# File Browser 2
#bindsym Ctrl+mod1+F exec thunar &>/dev/null&

# Pdf Browser
#bindsym Ctrl+mod1+D exec masterpdfeditor3 &>/dev/null&
bindsym Ctrl+mod1+D exec evince &>/dev/null&

# Web Browser
bindsym Ctrl+mod1+W exec firefox &>/dev/null&

# Music Player 
bindsym Ctrl+mod1+M exec RhythmCat &>/dev/null &

# Picture Browser
bindsym Ctrl+mod1+P exec ristretto &>/dev/null&

# Application Key Bind End……

# dmenu 非常类似于桌面环境的运行……
bindsym mod1+F2 exec dmenu_run

bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# 窗口焦点移动方式（默认跟随光标）键绑定……

focus_follows_mouse yes

bindsym $mod+j focus up
bindsym $mod+k focus down
bindsym $mod+h focus left
bindsym $mod+l focus right
#bindsym $mod+semicolon focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# 调整窗口在工作区的位置……
bindsym $mod+Shift+h move left
bindsym $mod+Shift+l move right
bindsym $mod+Shift+k move up
bindsym $mod+Shift+j move down
#bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# 这两个键绑定可以隐藏和显示焦点下的窗口……
# minus 对应 -，plus 对应 +
bindsym $mod+minus move scratchpad 
bindsym $mod+plus scratchpad show


# 调整窗口边框样式……
bindsym $mod+u border none
bindsym $mod+n border normal
bindsym $mod+o border 1pixel
bindsym $mod+b border toggle

# 新窗口打开后在工作区的放置方式，按下这组键绑定之后……
# 放到焦点窗口的右方……
bindsym Ctrl+$mod+h split h

# 放到焦点窗口的下方……
bindsym $mod+v split v

# 窗口最大化与正常窗口间切换的键绑定……
bindsym $mod+f fullscreen toggle

# 改变窗口的布局方式（平铺还是标签化？或者是堆叠？）……
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# 窗口浮动切换……
bindsym $mod+Shift+space floating toggle

# 在工作区中的浮动窗口和平铺窗口键切换焦点……
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# 工作区切换……
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# 移动焦点窗口到其它工作区……
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# 在工作区的窗口间切换……
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# 窗口大小调整键绑定配置……
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym h resize grow width 5 px or 5 ppt
  bindsym l resize shrink width 5 px or 5 ppt
  bindsym j resize grow height 5 px or 5 ppt
  bindsym k resize shrink height 5 px or 5 ppt
  #bindsym semicolon resize grow width 10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# i3bar 配置……
bar {
# 默认位置：底部……
  position top 
    status_command i3status
  colors {
    background #eeeeee
    statusline #000000
  }
}

# for_window 和 assign 配置对某些 Gtk3 程序无效……

# 新窗口打开时要不要浮动起来？

for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

#for_window [class="pop-up"] floating enable
#for_window [class="task_dialog"] floating enable


# 新窗口默认在哪个工作区中打开 →
# assign [class="(?i)osdlyrics"] 2
assign [class="(?i)vlc"]  3
assign [class="(?i)ristretto"] 2
assign [class="(?i)evince"]  2
assign [class="(?i)masterpdfeditor3"]  2
#assign [class="(?i)firefox"] 2

# 打开新窗口时的默认边框样式……
new_float none

new_window none

#mode "system" {
#  bindsym L exec ~/pm_mem.sh 
#}
#
#bindsym $mod+Pause mode "system"

# 重载 i3 配置文件……
bindsym $mod+Shift+c reload

# 重启 i3 窗口管理器……
bindsym $mod+Shift+r restart

# 退出 i3，也会杀死 X ……
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Exit i3?' -b 'Yes' 'i3-msg exit'"

如果你计划使用startx来启动i3，首先配置好~/.xinitrc……

======= ~/.xinitrc =======

#!/bin/sh
#export LC_ALL=POSIX
export LANG="zh_CN.UTF-8"
#export LANGUAGE="zh_CN:en_US"
export XIM=fcitx
export XIM_PROGRAM=fcitx
export GTK_IM_MODULE=fcitx
export XMODIFIERS="@im=fcitx"
export QT_IM_MODULE=fcitx

xrdb -merge ~/.Xresources

exec i3 
  如果你希望在i3中使用其它样式的光标，首先安装它或者直接放到正确的位置，然后尝试使用lxappearance进行调整或者直接在~/.Xresources中配置并在~/.xinitrc中使用xrab引入……

========= ~/.Xresources ========

# 字体的 dpi 大小……
#Xft.dpi: 98
Xft.autohint: 0
Xft.lcdfilter: lcddefault
Xft.hintstyle: hintfull
Xft.hinting: 1
Xft.antialias: 1
Xft.rgba: rgb

# 配置光标主题及光标的大小……
Xcursor.theme: whiteglass
Xcursor.size: 25

  如果你使用的是startx启动i3并希望在i3中调整默认Gtk2程序（比如pcmanfm、thunar……）、Gtk3程序(firefox，RhythmCat、xfce4-terminal……）的外观（比如图标，字体……），可以尝试手动更新Gtk+程序对应的用户级配置文件或者直接使用lxappearance进行调整……

Warning：

  lxappearance程序在调整gtk2程序外观时将会把Gtk2程序用户级配置文件之一的~/.gtkrc-2.0清空！

Note：
  不管你希望手动调整还是直接使用lxappearance调整，你都需要重启X和i3后才能见到效果！

======== Gtk2程序用户级配置文件：~/.gtkrc-2.0 =======

# Any customization should be done in ~/.gtkrc-2.0.mine instead.

include "/home/user/Ljca/.gtkrc-2.0.mine"
# gtk-theme-name="Adwaita"
gtk-icon-theme-name="Humanity"
gtk-font-name="DejaVu Sans Mono 9"
# gtk-cursor-theme-size=0
# gtk-toolbar-style=GTK_TOOLBAR_BOTH
# gtk-toolbar-icon-size=GTK_ICON_SIZE_LARGE_TOOLBAR
# gtk-button-images=1
# gtk-menu-images=1
# gtk-enable-event-sounds=0
# gtk-enable-input-feedback-sounds=0
gtk-xft-antialias=1
gtk-xft-hinting=1
gtk-xft-hintstyle="hintmedium"
#gtk-xft-rgba="rgb"

style "xfdesktop-icon-view" {
  XfdesktopIconView::label-alpha = 0
  base[NORMAL] = "#000000"
  base[SELECTED] = "#71B9FF"
  base[ACTIVE] = "#71B9FF"
  fg[NORMAL] = "#fcfcfc"
  fg[SELECTED] = "#ffffff"
  fg[ACTIVE] = "#ffffff"
}

widget_class "*XfdesktopIconView*" style "xfdesktop-icon-view"


#style "gtk-font-set" {
# #DejaVu Sans Mono for Powerline:style=Bold
#  font_name = "DejaVu Sans Mono 9"
#}
#
#class "GtkWidget" style "gtk-font-set"
========== Gtk3程序用户级配置文件：~/.config/gtk-3.0/settings.ini ==========

# `Gtk3`的用户级配置文件配置和`Gtk2`的相同……
1
如果你希望知道更多的Gtk程序配置，可以参考Arch Linux Wiki 的Gtk+条目……

关于锁屏，我用的是xtrlock；而亮度调节，系统挂起等，直接简单粗暴地用的底层接口；声音控制，则是用的alsamixer……

# 系统挂起，唤醒之后运行`xtrlock`……
sleep 1;echo mem | sudo tee /sys/power/state &>/dev/null;xtrlock &

# 调整屏幕亮度……
echo 35 | sudo tee /sys/class/backlight/intel_backlight/brightness&>/dev/null

