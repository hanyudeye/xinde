#+TITLE: php 简介
#+DESCRIPTION: php 简介
#+TAGS[]: php
#+CATEGORIES[]: 技术
#+DATE: 2020-02-13T19:01:28+08:00
#+draft: true

WEB 服务器脚本语言

# more
#+begin_quote
出来的早，命比较好，用到现在
#+end_quote

** 安装
   需要安装服务器，和 php 解析器，当然，光解析器也是可以的。数据库也可以选择装上

** 表单变量
   表单变量的传递方式不同
*** $_GET 
*** $_POST
*** $_COOKIE
    setcookie("user", "runoob", $expire);
*** $_SESSION
    session_start(); 需要在 html 之前设置
** Mysql    
   #+begin_src php
   <?php
$servername = "localhost";
$username = "username";
$password = "password";
 
// 创建连接
$conn = new mysqli($servername, $username, $password);
 
// 检测连接
if ($conn->connect_error) {
    die("连接失败: " . $conn->connect_error);
} 
echo "连接成功";
?>
   #+end_src
** 错误处理
*** 打开错误提示
    #+begin_src php
      ini_set("display_errors","On");
      error_reporting(E_ALL); 
    #+end_src

*** 捕捉错误
    #+begin_src php
      try {}
      catch (Throwable $t) {}
      catch(Error $e){}
    #+end_src
** 单元测试 phpunit
** 功能选项
   - 显示 PHP information and configuration (  -i )
   - 显示配置文件 (--ini)
   - 显示编译好的模块 (-m)
   - 打开自带服务器监听端口 (-S addr:port)
   - 显示一些信息 ( --rf 函数，--rc 类名 ,--re 扩展名)
** Apache2 选项
   - 对配置文件进行语法测试 (-t)
   - 测试后另外输出虚拟主机信息 (-t   -D DUMP_VHOSTS )
   - 测试后另外输出加载的模块 (-t   -D DUMP_MODULES)

   #+begin_src shell
     # 例子
     apachectl -t -D DUMP_MODULES
   #+end_src
** composer 
   php 的包管理器
   
   常用命令
    1. composer list：获取帮助信息；
    2. composer init：以交互方式填写 composer.json 文件信息；
    3. composer install：从当前目录读取 composer.json 文件，处理依赖关系，并安装到 vendor 目录下；
    4. composer update：获取依赖的最新版本，升级 composer.lock 文件；
    5. composer require：添加新的依赖包到 composer.json 文件中并执行更新；
    6. composer search：在当前项目中搜索依赖包；
    7. composer show：列举所有可用的资源包；
    8. composer validate：检测 composer.json 文件是否有效；
    9. composer self-update：将 composer 工具更新到最新版本；
    10. composer create-project：基于 composer 创建一个新的项目；
