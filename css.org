* CSS 
** 选择器,依赖DOM
*** 派生选择器
+ li strong {a:v;b:v}  
*** id选择器
+ #red {color:red;}
*** 类选择器
+ .center {text-align: center}
*** 属性选择器
+ input [title="value"] //也可以不要value修饰

** 样式
*** CSS 样式
**** CSS 背景(包含padding,和border) 不继承
background-color: 默认 transparent 透明
background-image:默认 none,url(path) 可以放两张背景
background-repeat:默认padding左上角开始 repeat-x repeat-y no-repeat(重复图像) 
background-position: top ,center,bottom,left,center,right(上中下,左中右) 100px 4com 2%,一个值得话,纵坐标默认居中
background-attachment:fixed/scroll/local 背景关联
fixed->元素范围大,背景范围小,元素动,背景不动
scroll->背景在元素的定位已经固定,元素动,背景也动
local->未知??
em是相对长度单位。相对于当前对象内文本的字体尺寸。如未被设定,则相对于浏览器默认字体尺寸.
background-size: 长宽 px 或 %,相对于父元素而不是图形
background-origin 背景图片相对于(content-box、padding-box 或 border-box )的定位
background-clip:content-box; 规定背景的绘制区域
**** CSS 文本(字操作)
text-indent: -5em 2% 2px 用于块元素,行元素可以用padding,可以继承
text-align: left,center,right 行内元素
word-spacing:定义为由空白符包围的一个字符串,中英文混合文本中。其默认值 normal 与设置值为 0 是一样的
letter-spacing:字间距离
text-transform:capitalize uppercase lowercase 
text-decoration:underline overline(上划线) line-through(穿透线) blink(闪烁)文本装饰
white-space:normal(空格和换行是不解释的)
| 值       | 空白符 | 换行符 | 自动换行 |
| pre-line | 合并   | 保留   | 允许     |
| normal   | 合并   | 忽略   | 允许     |
| nowrap   | 合并   | 忽略   | 不允许   |
| pre      | 保留   | 保留   | 不允许   |
| pre-wrap | 保留   | 保留   | 允许     |
direction：ltr 和 rtl 文本方向
text-shadow:5px 5px 5px #FF0000;
word-wrap: 长单词,(超过一行)允许截断到下一行 break-word /normal
text-outline: 文本轮廓
**** CSS 字体
font-family: 使用字体系列,字体名中有空格时 要用引号
font-style:字体风格 normal italic(normal版本的倾斜改动) oblique(字体的倾斜版本)
font-variant:字体变形 small-caps (另一种格式的大写英文)
font-weigth: bold 100~900 九级加粗度数字 400 等价于 normal，而 700 等价于 bold。浏览器分不出那么多级,就normal和bold
font-size:默认大小是 16 像素 (16px=1em(当前尺寸,当前是16px))
使用自己的字体,客户能够下载:“自己的”的字体是在 CSS3 @font-face 规则中定义的。
#+BEGIN_SRC 
使用您需要的字体
在新的 @font-face 规则中，您必须首先定义字体的名称（比如 myFirstFont），然后指向该字体文件。
如需为 HTML 元素使用字体，请通过 font-family 属性来引用字体的名称 (myFirstFont)：
实例

<style> 
@font-face
{
font-family: myFirstFont;
src: url('Sansation_Light.ttf'),
     url('Sansation_Light.eot'); /* IE9+ */
}

div
{
font-family:myFirstFont;
}
</style>

#+END_SRC
**** CSS 链接
链接的四种状态：
    a:link - 普通的、未被访问的链接
    a:visited - 用户已访问的链接
    a:hover - 鼠标指针位于链接的上方
    a:active - 链接被点击的时刻
text-decoration 属性大多用于去掉链接中的下划线
**** CSS 列表
从某种意义上讲，不是描述性的文本的任何内容都可以认为是列表。人口普查、太阳系、家谱、参观菜单，甚至你的所有朋友都可以表示为一个列表或者是列表的列表。
由于列表如此多样，这使得列表相当重要，所以说，CSS 中列表样式不太丰富确实是一大憾事。
list-style-type: squre(方块)circle,decimal
list-style-image: url(xxx.gif) 点,用图像替代
list-style-position
该属性用于声明列表标志相对于列表项内容的位置。外部 (outside)默认值。保持标记位于文本的左侧。
内部 (inside) 标志处理为好像它们是插入在列表项内容最前面的行内元素一样
**** CSS 表格
**** CSS 轮廓
轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。
CSS outline 属性规定元素轮廓的样式、颜色和宽度,!轮廓的宽度会占用margin的一部分
outline-color:
outline-style
outline-width
*** CSS 框模型(根据元素width来)
**** CSS 内边距
padding
**** CSS 边框
border-style
border-width
border-color:transparent 有宽度的不可见边框
border-radius: 边框圆角 四个角顺序是 top right bottom left
box-shadow:边框阴影 (灯光的照射形成的)
box-shadow: h-shadow v-shadow blur spread color inset;
h-shadow 	必需。水平阴影的位置。允许负值。 
v-shadow 	必需。垂直阴影的位置。允许负值。 
blur 	            可选。模糊距离。 
spread 	可选。阴影的尺寸。 
color 	可选。阴影的颜色。请参阅 CSS 颜色值。
inset 	可选。将外部阴影 (outset) 改为内部阴影。
--------
border-image-source 	用在边框的图片的路径。(特别要注意图片是框型的,跟border设定要一样,就是把图片套到边框上面) 	
border-image-slice 	图片边框向内偏移。 	
border-image-width 	图片边框的宽度。 	
border-image-outset 	边框图像区域超出边框的量。 	
border-image-repeat 	图像边框是否应平铺(repeated)、铺满(rounded)或拉伸(stretched)。
**** CSS 外边距
margin
**** CSS 外边距合并 当两个垂直外边距相遇时，它们将形成一个外边距。
*** CSS 定位
**** CSS 相对定位 (相对当前布局)
position:relative
left:-20px
top right bottom
**** CSS 绝对定位(
元素原先在正常文档流中所占的空间会关闭，就好像元素原来不存在一样
**** CSS 浮动 
**** 堆叠顺序,先要设定position属性
z-index 正数,接近用户,负数,远离用户
*** 2D转换
Internet Explorer 10、Firefox 以及 Opera 支持 transform 属性。
Chrome 和 Safari 需要前缀 -webkit-。
注释：Internet Explorer 9 需要前缀 -ms-。
transform:
translate()转化,平移 px em %
rotate()旋转,正时针 -30deg 角度,角(degree)
scale(2,4) 原始宽度的2 倍和高度的4倍 会变形的
skew(30deg,20deg)倾斜,歪斜 围绕 X 轴把元素翻转 30 度，围绕 Y 轴翻转 20 度
matrix() 方法需要六个参数，包含数学函数，允许您：旋转、缩放、移动以及倾斜元素。
transform-origin 	允许你改变被转换元素的位置
*** 3D转换 
rotateX() 元素围绕其 X 轴以给定的度数进行旋转。
rotateY() 
*** CSS3 过渡(是一种事件样的)挺好玩的
是元素从一种样式逐渐改变为另一种的效果
transition 转化,过度
!   规定您希望把效果添加到哪个 CSS 属性上,可以多个属性
!   规定效果的时长
#+BEGIN_SRC 
div{transition:width 2s;}
div:hover{width:300px;}
#+END_SRC
transition-property 	规定应用过渡的 CSS 属性的名称。 
transition-duration 	定义过渡效果花费的时间。默认是 0。
transition-timing-function 	规定过渡效果的时间曲线。默认是 "ease"。
transition-delay 	规定过渡效果何时开始。默认是 0。
*** CSS3动画
如需在 CSS3 中创建动画，您需要学习 @keyframes 规则。用户创建动画
#+BEGIN_SRC 
@keyframes myfirst
{
from {background: red;}
to {background: yellow;}
}

@-moz-keyframes myfirst /* Firefox */
{
from {background: red;}
to {background: yellow;}
}

@-webkit-keyframes myfirst /* Safari 和 Chrome */
{
from {background: red;}
to {background: yellow;}
}

@-o-keyframes myfirst /* Opera */
{
from {background: red;}
to {background: yellow;}
}
#+END_SRC
#+BEGIN_SRC 
通过规定至少以下两项 CSS3 动画属性，即可将动画绑定到选择器：

    规定动画的名称
    规定动画的时长

实例

把 "myfirst" 动画捆绑到 div 元素，时长：5 秒：

div
{
animation: myfirst 5s;
-moz-animation: myfirst 5s;	/* Firefox */
-webkit-animation: myfirst 5s;	/* Safari 和 Chrome */
-o-animation: myfirst 5s;	/* Opera */
}
#+END_SRC
*** CSS3 多列
*** CSS3 用户界面
* html 
 web-mode  编辑  css 和 html
 编辑 Sass/Scss 和 Less
** 编译 Less
 C-c C-c         less-css-compile
 C-M-q           prog-indent-sexp

 emmet-mode 自动生成 html css
evil-matchit 在 Tags 中导航 用 %
slim 和 pug 模板 用 slim-mode 和 pug-mode 编辑
急着看，用impatient-mode
