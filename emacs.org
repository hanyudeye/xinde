#+TITLE: EMACS
[[file:spacemacs.org][spacemacs]]
* emacs？ 
** 什么是emacs选项?
  +<行号>：启动emacs编辑器，并将光标移动到制定行号的行；
  -q：启动emacs编辑器，而不加载初始化文件；
  -u<用户>：启动emacs编辑器时，加载指定用户的初始化文件；
  -t<文件>：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；
  -f<函数>：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；
  -l<lisp代码文件>：加载指定的lisp代码文件；
  -batch：以批处理模式运行emacs编辑器。
  --DEBUG-init
** 什么是在emacs中调试任务?
   gdb –annotate=3 test
   无论上面的那种情况，都出现了一个现象：程序的输出不能显示，只有在程序退出的时候才显示出来。无论上面的那种情况，都出现了一个现象：程序的输出不能显示，
   只有在程序退出的时候才显示出来。无论上面的那种情况，都出现了一个现象：程序的输出不能显示，只有在程序退出的时候才显示出来。
   gdb-many-windows 切换单窗格/多窗格模式
   gdb-restore-windows 恢复窗格布局	
** 什么是emacs功能?
   screen menu bar/echo area/mode line
   text edit(许多文本，位置属性，单词，行数，列数，数组）transposed(交换)/upcase/lowercase/
   mode SGML/HTML/PICTURE/compilation/sql/java/perl/emacs-lisp/Lisp interaction/auto save/auto-fill/ISO accents(重音）
   copy/yank 堆栈结构 abc
   sort行 列
   search and replace (regular expression) vi中也是默认正则, 文件中搜索　grep
   spell-check ispell/flyspell-mode ispell-change-directory
   buffers read-only
   Word Abbreviation (global-abbrev-table)
   (text-mode-abbrev-table) (setq-default abbrev-mode t) (read-abbrev-file "~/.abbrev_defs") (setq save-abbrevs t)
   macro
   format
   comment
   frame
   latex
   window windmove-left /right /down/up
   markdown
   diff
   dired
   Comparing Files compare-windows(高亮不同）
   print lpr
   calendar diary
   holiday
   bookmark
   browse browse-url-of-buffer
   shell(setq shell-file-name "/bin/zsh") .emacs_shell-name (shell初始化文件）
   language etags etags *.[ch]
   debug next-error
   as work environment
   custom(tool-bar/menu-bar/
   模式属性　(add-hook 'text-mode-hook 'turn-on-auto-fill)
   按键属性　(define-key global-map "\C-x\C-u" 'undo)
   输入法切换 `c-\' (toggle-input-method')
  : lisp
  : package
  : version control(vc-next-action/vc-diff/vc-print-log/vc-cnacel-version)
  : Unicode coding-system
  (setq buffer-file-coding-system 'utf-8)  默认buffer编码是utf-8,(写文件)
  (prefer-coding-system 'utf-8)   指定文件编码,此时buffer新建和读取
  (setq read-quoted-char-radix 16) insert-quoted-char 
  : info
  : browser
  : help system/key/variable/mode
  : bug
  ^                Matches the beginning of a line.
  $                Matches the end of a line.
  .                Matches any single character (like ? in filenames).
  .*               Matches any group of zero or more characters 
  \<               Matches the beginning of a word.
  \>               Matches the end of a word.
  []               Matches any character specified within the brackets; for example, [a-z]
  \{n,m\}          表示它前面的单个字符重新的次数
  \s, \S           \S matches any character except whitespace.
  \d, \D           Matches any single digit, 0-9; \D matches any character but a digit.
  \w, \W           Matches any "word" character (upper- and lowercase letters, digits, and the
** 什么是emacs代码查看功能? etags
** 什么是文件比较? ediff
** 什么是计算器功能？　calc
** 什么是通讯录？　bbdb
** 什么是发送邮件和使用mailist？　 usenet
** 什么是十六进制查看和编辑二进制文件？　hexl-mode
* Meghanada? 可以方便处理java语言的任务
1.打开关闭 任务
2.语言内Navigation 
 | ~SPC m g b~ | Jump back to previous location |
 | ~SPC m g g~ | Jump to declaration            |
3.编译文件、工程
 | ~SPC m c b~ | Compile file (buffer) |
 | ~SPC m c c~ | Compile project       |
4.测试
 | ~SPC m t a~ | Run all tests |
5.附加功能
 | ~SPC m =~   | Beautify code                          |
 | ~SPC m r i~ | Optimize imports                       |
 | ~SPC m r I~ | Import all                             |
 | ~SPC m r n~ | Create a new class, interface, or enum |
6.执行
 | ~SPC m x :~ | Run task    |
* Meghanada的配置文件？
.meghanada.conf 必须在工程根目录 , 配置详情查看 git doc 文件
#+BEGIN_SRC conf
    # Set JAVA_HOME
    # Type: string
  java-home = "/usr/lib/jvm/default"

  # Set java version
  # Type: string
  #
  # It is same effect following code.
  # System.setProperty("java.specification.version", val);
  java-version = "1.8"

  # Set source compatibility
  # Type: string
  compile-source = "1.8"

  # Set target compatibility
  # Type: string
  compile-target = "1.8"

  # Set dependencies file list (jar filepath)
  # Type: string list
  dependencies = ["/home/user/.m2/repository/org/apache/maven/maven-model/3.3.9/maven-model-3.3.9.jar", "/home/user/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar", "/home/user/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar" ... ]

  # Set test dependencies file list (jar filepath)
  # Type: string list
  test-dependencies = ["/home/ma2/.m2/repository/junit/junit/4.12/junit-4.12.jar" ... ]

  # Set source directories
  # Type: string list
  #sources = ["src/main/java"]

  # Set resource directories
  # Type: string list
  #resources = ["src/main/resources"]

  # Set classes output directory
  # Type: string
  output = "."

  # Set test source directories
  # Type: string list
  #test-sources = ["src/test/java"]

  # Set testt resource directories
  # Type: string list
  #test-resources = ["src/test/resources"]

  # Set test classes output directory
  # Type: string
  #test-output = "build/test/classes"

  # Set include file filter
  # Type: string list
  #
  # Filter strings are must regex string.
  include-file = [".*Parser*." ... ]

  # Set exclude file filter
  # Type: string list
  #
  # Filter strings are must regex string.
  exclude-file = [".*TEST*." ... ]

#+END_SRC
* 键绑定？ 
  1.可以使用命令 (global-set-key (kbd "C-f") 'forward-word)
  2.模式下（define-key evil-insert-state-map（kbd“C-”））'forward-char）
* 切换透明度？ ~SPC TT~
* 什么是切换系统监视器? ~SPC tms~
* 什么是书签？ 看小说用的 ~SPC fb~ 
  | 键绑定| 说明|
| ------------- + ----------------------------------- ----------- |
| 〜Cd〜| 删除选中的书签|
| 〜Ce〜| 编辑所选书签|
| 〜Cf〜| 切换文件名位置|
| 〜Co〜| 在另一个窗口|中打开选定的书签
* 什么是搜索？ 
〜SPC sab〜将使用= ag =搜索所有打开的缓冲区。
* 什么是搜索工具的顺序？
dotspacemacs-search-tools =，默认的顺序是= rg =，= ag =，= pt =，
* 什么是在文件中搜索？ ~SPC sf~
* 什么是在当前目录中搜索? 
| 〜SPC /〜或〜SPC sd〜| 用第一个找到的工具搜索|
* 什么是在一个项目中搜索?
| 〜SPC /〜或〜SPC sp〜| 搜索第一个找到的工具|
* 什么是搜索网页?
| 〜SPC swg〜 | 在emacs中获取Google建议。在浏览器中打开Goog​​le搜索结果。 |
| 〜SPC sww〜| 在emacs中获取维基百科建议。在浏览器中打开维基百科页面。|
 也可以用duck-duck-go
* 什么是修改文本？
| 键绑定| 说明|
| --------------- + --------------------------------- ------------------------------ |
| 〜SPC xa＆〜| 在＆|对齐区域
| 〜| SPC xa（〜|对准区域在（|
| 〜SPC xa）〜| 对齐区域在）|
| 〜SPC xa [〜| 对齐区域在[|
| 〜SPC xa]〜| 对齐区域在]
| 〜SPC xa {〜| 对齐区域在{|
| 〜SPC xa}〜| 对齐区域在}
| 〜SPC xaâ€œ<〜| 对齐区域，|
| 〜SPC xa。〜| 对齐区域在。（用于数字表）|
| 〜SPC xa：〜| 将区域对齐：|
| 〜SPC xa;〜| 对齐区域; |
| 〜SPC xa =〜| 对齐区域at = |
| 〜SPC xaa〜| 对齐区域（或猜测部分）使用默认规则|
| 〜SPC xac〜| 使用默认规则|对齐当前缩进区域
| 〜SPC xal〜| 左对齐与邪恶的狮子|
| 〜SPC xa L〜| 与邪恶的狮子|右对齐
| 〜SPC xar〜| 使用用户指定的正则表达式|对齐区域
| 〜SPC xam〜| 在算术运算符（+  -  * /）|上对齐区域
| 〜SPC xaÂ|〜| 在| |对齐区域
| 〜SPC xc〜| 统计选择区域中的字符数/字数/行数
| 〜SPC xdw〜| 删除末尾的空格|
| 〜SPC xd SPC〜| 删除点的所有空格和制表符，留下一个空格|
| 〜SPC xgl〜| 设置translate命令|使用的语言
| 〜SPC xgt〜| 使用Google Translate |翻译当前字词
| 〜SPC xg T〜| 反向源语言和目标语言|
| 〜SPC xic〜| 将符号样式更改为= lowerCamelCase = |
| 〜SPC xi C〜| 将符号样式更改为= UpperCamelCase = |
| 〜SPC xii〜| 循环符号命名样式（〜我保持循环）|
| 〜SPC xi  - 〜| 将符号样式更改为= kebab-case = |
| 〜SPC xik〜| 将符号样式更改为= kebab-case = |
| 〜SPC xi _〜| 将符号样式更改为= under_score = |
| 〜SPC xiu〜| 将符号样式更改为= under_score = |
| 〜SPC xi U〜| 将符号样式更改为= UP_CASE = |
| 〜SPC xjc〜| 设置理由为中心|
| 〜SPC xjf〜| 将理由设置为full |
| 〜SPC xjl〜| 将理由设置为left |
| 〜SPC xjn〜| 将其设置为none |
| 〜SPC xjr〜| 将权限设置为| |
| 〜SPC x J〜| 向下移动一行文本（进入瞬态）|
| 〜SPC×K〜| 向上移动一行文本（进入瞬态）|
| 〜SPC xld〜| 重复的行或区域|
| 〜SPC xls〜| 排序行|
| 〜SPC xlu〜| uniquify行|
| 〜SPC xo〜| 使用avy选择框架中的链接并打开它
| 〜SPC x O〜| 使用avy选择框架中的多个链接并打开它们
| 〜SPC xtc〜| 交换（转置）当前字符与前一个|
| 〜SPC xtl〜| 用前一个|交换（转置）当前行
| 〜SPC xtp〜| 用前一个|交换（转置）当前段落
| 〜SPC xts〜| 用前一个|交换（转置）当前句子
| 〜SPC xtw〜| 用前一个|交换（转置）当前单词
| 〜SPC xu〜| 将所选文本设置为小写|
| 〜SPC x U〜| 将所选文本设置为大写|
| 〜SPC xwc〜| 计算选择区域中每个单词的出现次数
| 〜SPC xwd〜| 显示来自wordnik.com的字词条目
| 〜SPC x TAB〜| 缩进或缩进区域|
* 什么是文本插入?
  | 键绑定| 说明|
| ------------- + ----------------------------------- ------------------------------------ |
| 〜SPC ill〜| 插入lorem-ipsum列表|
| 〜SPC ilp〜| 插入lorem-ipsum段落|
| 〜SPC ils〜| 插入lorem-ipsum句子|
| 〜SPC ip 1〜| 插入简单的密码|
| 〜SPC ip 2〜| 插入更强的密码|
| 〜SPC ip 3〜| 为偏执狂|插入密码
| 〜SPC ipp〜| 插入发音简单的密码|
| 〜SPC ipn〜| 插入数字密码|
| 〜SPC iu〜| 搜索Unicode字符并将其插入到活动缓冲区中。|
| 〜SPC i U 1〜| 插入UUIDv1（使用通用参数来插入CID格式）|
| 〜SPC i U 4〜| 插入UUIDv4（使用通用参数来插入CID格式）|
| 〜SPC我UU〜| 插入UUIDv4（使用通用参数来插入CID格式）|

*提示：*您可以用数字改变插入的密码的长度
前缀参数，例如〜SPC U 24 SPC ipp〜将插入一个密码
24个字符。
* 什么是文本缩放?
  | 键绑定         | 说明                                     |
  | 〜SPC zx +〜   | 放大字体并启动字体缩放瞬态               |
  | 〜SPC zx =〜   | 放大字体并启动字体缩放瞬态               |
  | 〜SPC zx  - 〜 | 缩小字体并启动字体缩放瞬态               |
  | 〜SPC zx 0〜   | 重置字体大小（不缩放）并启动字体缩放瞬态 |
  | 〜+〜          | 增加字体大小                             |
  | 〜=〜          | 增加字体大小                             |
  | 〜 - 〜        | 减小字体大小                             |
  | 〜0〜          | 重置字体大小                             |
  | 任何其他键     | 保持字体缩放瞬态                         |

请注意，/只/当前缓冲区的文本被缩放，其他缓冲区，
* 什么是frame缩放？
  | 键绑定         | 说明                           |
  | 〜SPC zf +〜   | 放大帧内容并启动帧缩放瞬态     |
  | 〜SPC zf =〜   | 放大帧内容并启动帧缩放瞬态     |
  | 〜SPC zf  - 〜 | 缩小帧内容并启动帧缩放瞬态     |
  | 〜SPC zf 0〜   | 重置帧内容大小并启动​​帧缩放瞬态 |
  | 〜+〜          | 放大                           |
  | 〜=〜          | 放大                           |
  | 〜 - 〜        | 缩小                           |
  | 〜0〜          | 重置缩放                       |
  | 任何其他键     | 保留缩放框架的过渡状态         |
* 什么是对数字增加/减少？
  对于数字或小数 
| 〜SPC n +〜   | 增加指示点下的数量并启动暂态 |
| 〜SPC n  - 〜 | 减少指示点下的数量并启动暂态 |
参数（即〜10 SPC n +〜将点数加10）
* 什么是拼写检查？ 添加 spell层
* 什么是文本的缓冲区显示？ 可以集中显示选中的文本
  | 〜SPC nf〜 | 将缓冲区缩小到当前函数   |
  | 〜SPC np〜 | 将缓冲区缩小到可见页面   |
  | 〜SPC nr〜 | 将缓冲区缩小到选定的文本 |
  | 〜SPC nw〜 | 加宽，即显示整个缓冲区   |
* 什么是用iedit替换文本? 
| 键绑定     | 从            | 为    |
| 〜SPC se〜 | 正常或视觉    | iedit |
| 〜e〜      | expand-region | iedit |
| 〜ESC〜    | iedit         | 正常  |
| 〜Cg〜     | iedit         | 正常  |
| 〜fd〜     | iedit         | 正常  |
| 〜ESC〜    | iedit-insert  | iedit |
| 〜Cg〜     | iedit-insert  | 正常  |
| 〜fd〜     | iedit-insert  | 正常  |
总而言之，在= iedit插入状态=你必须按ESC两次返回到正常状态
* 什么是clang-format? 可以对c语言格式化的工具 需要apt安装 
* Yasnippet? 小片段snippet
  使用 keyname + M-/  有参数用TAB索引
  添加 最简单的地方是在~/.emacs.d/private/snippets目录中。
  在这个目录结构下，你应该创建一个以你的片段的相关模式命名的文件夹，例如markdown-mode。
  在这个模式文件夹中，创建名称基于您希望的代码段别名的文件。
  格式：　$0 是最后一个
#+BEGIN_SRC snappt
#contributor : Jimmy Wu <frozenthrone88@gmail.com>
#name :<form method="..." id="..." action="..."></form>
# --
<form method="$1" id="$2" action="$3">
  $0
</form>
#+END_SRC

现有文本创建　helm-yas-create-snippet-on-region
刷新 yas-load-snippet-buffer　
测试  yas-tryout-snippet
自动完成中显示　snippet 把变量设为：auto-completion-enable-snippets-in-popup为t。
* 换行 SPC-t-l 开关truncate line
* 什么是emacs python模式？
** 什么是自动完成？ anaconda-mode 蟒蛇, 绿蟒模式
** 什么是代码导航? anaconda-mode
** 什么是查找文档? 
   SPC mhd 使用helm-pydoc 查找文档
** 什么是块间跳转？ anaconda-mode-find-definitions
   SPC mgb 跳回
** 什么是抑制未使用的导入? 没使用的块，导入了也多余 autoflake(小薄片）
  pip install autoflake
** 什么是对输入进行排序? 要安装 isort , 通过 pip install isort
** 什么是运行python脚本？ SPC mcc
** 什么是
** 什么是
* 什么是给 region 添加 (, ], }? 可以用在visual 模式用surround,快捷键s, 然后添加)
* 什么是打开Message 缓冲区？ SPC w p m
* Error
下一个错误 SPC e n
* EditorConfig 保持不同编辑器编码风格一致
* emacs server 
  可以被其他程序调用，不用重开进程 server-start
  spacemacs 默认开启服务
* emacsclient
告诉正在运行的emacs 访问文件, 与emacs服务器一起使用
emacsclient [ 选项 ] 文件
-c，--create-frame 使用一个新框架而不是在现有框架
-d，--display = DISPLAY 告诉服务器在给定的显示器上显示文件。
-nw，-t，--tty  在当前终端上打开一个新的Emacs框架
最后 ，编辑完缓冲区后，输入“Cx＃”（“server-edit”）
* w3m推荐配置?
  #+BEGIN_SRC lisp
 (defun dotspacemacs/user-config ()
  (setq w3m-home-page "https://www.google.com")
  ;; W3M Home Page
  (setq w3m-default-display-inline-images t)
  (setq w3m-default-toggle-inline-images t)
  ;; W3M default display images
  (setq w3m-command-arguments '("-cookie" "-F"))
  (setq w3m-use-cookies t)
  ;; W3M use cookies
  (setq browse-url-browser-function 'w3m-browse-url)
  ;; Browse url function use w3m
  (setq w3m-view-this-url-new-session-in-background t)
  ;; W3M view url new session in background
) 
  #+END_SRC

