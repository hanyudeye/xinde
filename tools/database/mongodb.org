** 创建账号
   use admin
   db.createUser({ 
   user: 'mongoadmin', 
   pwd: 'secret', 
   roles: [ { role: "root", db: "admin" } ] });

   创建完成后验证是否可以登录；

   db.auth("mongoadmin","secret")

** 基本操作
*** 创建数据库：
语法：use database_name
示例：use DB_Demo
如果数据库不存在，则创建数据库，否则切换到指定数据库。
要显示刚创建的数据库需要向 数据库插入一些数据。

*** 删除数据库：

语法：db.dropDatabase()
示例：先切换到数据库 DB_Demo，再执行删除操作。（可以使用 db 命令查看当前数据库名，防止误操作）
use DB_Demo
db.dropDatabase()

*** 创建集合：
语法：db.createCollection(name, options)
示例：先切换到数据库 DB_Demo 并创建 users 集合
use DB_Demo
db.createCollection("users")

*** 删除集合：

语法：db.collection.drop()
示例：db.user.drop()

*** 插入文档：

语法：db.collection_name.insert(document)
示例：db.users.insert({name:'zhangsan',age:18})
语法：db.collection_name.save(document)
示例：db.users.save({name:'lisisi',age:16})

说明：insert 和 save 方法都可以插入数据，当默认的“_id”值已存在时，调用 insert 方法插入会报错；而 save 方法不会,会更新相同的_id 所在行数据的信息。

语法：db.collection_name.insertOne(document)
说明：向指定集合中插入一条文档数据
语法：db.collection_name.insertMany(document)
说明：向指定集合中插入多条文档数据(注意是数组）
示例：db.users.insertMany([{name:'wangsansan',age:'22'},{name:'zhanglili',age:21}])

*** 删除文档：

语法：db.collection_name.remove(条件)
示例： db.users.remove({'name':'zhangsan'})
语法：db.collection_name.deleteOne(条件)
说明： 删除 指定条件的一个文档
语法：db.collection_name.deleteMany(条件)
说明： 删除 指定条件的全部文档

*** 修改文档：

语法：db.collection_name.update({"条件字段名":"字段值"},{$set:{"要修改的字段名":"修改后的字段值"}})
说明： 只修改第一条发现的文档
示例：db.users.update({'name':'zhangsan'},{$set:{'name':'wanger'}})
语法：db.collection_name.update({"条件字段名":"字段值"},{$set:{"要修改的字段名":"修改后的字段值"}},{multi:true});
说明： 修改多条相同的文档，需要设置 multi 参数为 true。

*** 查询文档：

查询集合中所有数据：db.collection_name.find(); 例：db.users.find().pretty()
按条件查询（支持多条件）：db.collection_name.find(条件); 例：db.users.find({name:'zhangsan'});

限制数量：db.collection_name.find().limit(数量);
跳过指定数量：db.collection_name.find().skip(数量);
查询第一条（支持条件）：db.collection_name.findOne(条件);
查询数量：db.collection_name.find().count();
排序：db.collection_name.find().sort({"字段名":1}); 1：表示升序，-1：表示降序
指定字段返回： db.collection_name.find({},{"字段名":0}); 1：返回 0：不返回

** 常用命令：
- 使用 db 命令查看当前数据库名
- 查看所有数据库，可以使用 show dbs 命令
- 查看已有集合，可以使用 show collections 命令
- find() 方法以非结构化的方式来显示所有文档，语法：db.collection_name.find()
以易读的方式来读取数据使用 pretty() 方法，语法：db.collection_name.find().pretty()
use database_name 如果数据库不存在，则创建数据库，否则切换到指定数据库


** 四、其它注意事项
*** 1、数据库命名规则：
不能是空字符串
不能含有空格、.、$、/、\和\0(空字符)
应全部小写
最多 64 字节
*** 2、保留数据库
有一些数据库名是保留的，可以直接访问这些有特殊作用的数据库

admin:’root‘数据库，要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限，一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器
local:这个数据库永远不会被复制，可以用来存储于本地单台服务器的任意集合
config:当 mongoDB 用于分片设置时，config 数据库在内部使用，用于保存分片的相关信息

