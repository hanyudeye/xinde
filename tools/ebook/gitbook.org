* gitbook
** 安装 
   $ npm install gitbook -g
  
** 编写结构 
  - README.md
  - SUMMARY.md
 #+BEGIN_EXAMPLE
      *  [第1章](c1.md)  
       *  [第1节](c1s1.md)  
       *  [第2节](c1s2.md)  
     *  [第2章](c2.md)
 #+END_EXAMPLE

** 预览
   $ gitbook serve -p 8080 .
  
** 插件    
*** Disqus 评论
  #+BEGIN_QUOTE
    $ npm install gitbook-plugin-disqus
  #+END_QUOTE

  然后建立一个book.json文件，其格式如下：

  #+BEGIN_EXAMPLE
       {  "plugins":  ["disqus"],  "pluginsConfig":  {  "disqus":  {  "shortName":  "NAME-FROM-DISQUS"  }  }  }
  #+END_EXAMPLE

  把上面的 =NAME-FROM-DISQUS=修改为你在Disqus上的项目名即可。
  
** 使用Gitbook发布电子书


   上次说到 [[http://www.ituring.com.cn/article/127645][用GitBook制作电子书]]，侧重在使用gitbook这个命令行工具，今天要说的重点是GitBook这个平台。当你把书放到GitBook上后，可以设置书的价格（每笔交易GitBook抽走20%作为佣金），也可以设置为免费，以及接受捐赠。如果你要收费或接受捐赠，则需要一个PayPal账户。在开始前，我要友情提示一句，在国内访问GitBook的速度很慢，通过VPN访问才好。

   *第-1步* 用git这个源代码管理工具来管理你的Markdown文件。最好有个GitHub账户，这样每次push到GitHub时，GitBook都会自动为你的更新build新的版本（同时生成HTML、PDF、ePUB、MOBI这4个版本）。

   *第0步* 注册一个GitBook帐号。

   *第1步* 在GitBook添加一本书，填写书名等基本信息即可。完成后，GitBook会为你生成一个git仓库，其格式为：

   #+BEGIN_QUOTE
   [[https://push.gitbook.io/{author}/{book}.git]]
   #+END_QUOTE

   =author=即你的GitBook用户名， =book=即你的书名，如我创建的书的git仓库：

   #+BEGIN_QUOTE
   [[https://push.gitbook.io/berlinix/guaidanuniversity.git]]
   #+END_QUOTE

   这样你可以在编写完Markdown后，通过 =git push=同步到GitBook。

   *第2步* 把你本地的Markdown文件push到GitBook。我发现 =git push=时常失败（服务器返回5xx错误），因此还有一种方法就是把你的GitHub项目与GitBook关联。每次push到GitHub时，会通过GitBook的webhook自动同步到GitBook上。

   在Book Setting中简单配置一下即可，如我的配置为： =berlinix/gdu= （GitHub用户名为berlinix，GitHub仓库名为gdu）

   在第一次push后，就可以看到你在GitBook上的电子书了，其访问地址为：

   #+BEGIN_QUOTE
   [[http://{author}.gitbooks.io/{book}/]]
   #+END_QUOTE

   这是你电子书的主页，从这个页面可以直接打开HTML版本，或下载PDF等电子书版本，一般用户也可以为你的书添加评论。如：

   #+BEGIN_QUOTE
   [[http://berlinix.gitbooks.io/guaidanuniversity/]]
   #+END_QUOTE

   要直接访问HTML版本，可以通过链接：

   #+BEGIN_QUOTE
   [[https://www.gitbook.io/read/book/{author}/{book}]]
   #+END_QUOTE

   直接访问，如：

   #+BEGIN_QUOTE
   [[https://www.gitbook.io/read/book/berlinix/guaidanuniversity]]
   #+END_QUOTE

   至此，GitBook平台的基本用法就介绍完毕。下面是我的一些使用经验。

   *个性化域名*

   HTML版本的URL很复杂，可以使用个性化域名简化之。在域名注册商那里添加一条CNAME记录即可，如：

   #+BEGIN_QUOTE
   CNAME gdu.berlinix.com www.gitbook.io 300
   #+END_QUOTE

   并把 =gdu.berlinix.com=配置到Book Setting中去，这样可以通过简单的 =gdu.berlinix.com=来取代 =https://www.gitbook.io/read/book/berlinix/guaidanuniversity=。同理，电子书的主页也可设置个性化域名，就不再赘述。

   *删除电子书*

   同样是在Book Setting中，可以删除电子书。在电子书列表中没有删除接口。

   *GitBook电子书封面*

   可以为电子书添加封面。只需添加2个名为 =cover.jpg=和 =cover_small.jpg=的两个图片即可。官方建议cover.jpg尺寸1800 /2360，cover_small.jpg尺寸200/262。花2元即可在淘宝上找个做封面的人为你制造一个简单的封面，做得好就要花更多一些了 :)

   *GitBook帐号头像*

   似乎只接受Gravatar.com的头像。把Gravatar帐号关联过去即可。Gravatar提供的服务是把你的邮箱和头像关联起来，当你在其他网站注册时就不用每次都上传同一个头像，只需简单与Gravatar帐号关联即可。这样替换头像也方便了，一次替换、处处生效。

   *访问优化*

   按GitBook的访问速度，如果真让人访问GitBook上的HTML页面真是自寻死路啊，因此最好是把GitBook编译后的HTML放在自己的网站上。同时，为自己网站的HTML生成Disqus支持。例如你可以访问我放到自己服务器后的页面（用手机访问效果也非常好）：

   #+BEGIN_QUOTE
   [[http://www.berlinix.com/gdu/index.html]]
   #+END_QUOTE

   *电子书Bug*

   上次说到GitBook生成PDF的中文字体非常丑陋，另外还有一个问题，那就是生成的PDF可能是残全不全的。我编译后发现内容只剩一半。我已邮件过去报告这个Bug，还在等回信 :)

   总体而言，GitBook还是很好玩，比起其他写作平台而言，要自由、简单，并舒服得多，可以用Vim编辑，支持Markdown语法，用git管理，关联GitHub后每次push后还能自动编译，生成多种电子书格式。如果你的书极为畅销的话，还能获取到捐赠或购买，没有理由不尝试的呀。

*** 注


    来源：

    - [[http://www.ituring.com.cn/article/127645][使用Gitbook制作电子书]]
    - [[http://www.ituring.com.cn/article/127744][使用GitBook平台发布电子书]]

** 输出PDF
   输出为PDF文件，需要先安装gitbook pdf

   $ npm install gitbook-pdf -g
   如果在安装gitbook-pdf时，觉得下载phantomjs包太慢的话，你可以到phantomjs的官方网站上去下载。
   
   http://phantomjs.org/

   这个包的安装方式，参考其官网的说明文档。
   
   然后，用下面的命令就可以生成PDF文件了。
   
   $ gitbook pdf {book_name}
   如果，你已经在编写的gitbook当前目录，也可以使用相对路径。
   
   $ gitbook pdf .
   然后，你就会发现，你的目录中多了一个名为book.pdf的文件。

** 常用命令
 - 安装 GitBook：`npm i gitbook-cli -g`
 - 初始化 GitBook 项目：`gitbook init`
 - 安装 GitBook 依赖：`gitbook install`
 - 开启 GitBook 服务：`gitbook serve`
 - 打包 GitBook 项目：`gitbook build`
 - GitBook 命令行查看：`gitbook -help`  
 - GitBook 版本查看：`gitbook -V`


