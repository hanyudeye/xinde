* vspacecode 设置
教程 https://vspacecode.github.io/docs/

The settings.jsonc and keybindings.jsonc in the repo contains the configurations
needed. You can merge them manually to your user's settings.json and
keybindings.json.

You can access your user's settings.json and keybindings.json by searching
Preference: Open Settings (JSON) and Preference: Open Keyboard Shortcuts (JSON)
in the command palette (Ctl+Shift+P)

settings.jsonc
#+begin_src json
  {
      // Vim easymotion is required for Jump menu - <SPC> j
      "vim.easymotion": true,
      // Use system clipboard for vim
      "vim.useSystemClipboard": true,
      // Trigger the main which key menu with in the active editor with vim
      // This cannot be put into keybindings.json because it will
      // create conflict with Vim.
      // https://github.com/stevenguh/spacecode/issues/3
      "vim.normalModeKeyBindingsNonRecursive": [
          {
              "before": ["<space>"],
              "commands": ["vspacecode.space"]
          },
          {
              "before": [","],
              "commands": [
                  "vspacecode.space",
                  {
                      "command": "whichkey.triggerKey",
                      "args": "m"
                  }
              ]
          }
      ],
      "vim.visualModeKeyBindingsNonRecursive": [
          {
              "before": ["<space>"],
              "commands": ["vspacecode.space"]
          },
          {
              "before": [","],
              "commands": [
                  "vspacecode.space",
                  {
                      "command": "whichkey.triggerKey",
                      "args": "m"
                  }
              ]
          }
      ]
  }
#+end_src

keybindings.jsonc
#+begin_src json
[
    // Trigger vspacecode in empty editor group
    {
        "key": "space",
        "command": "vspacecode.space",
        "when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
    },
    // Keybindings required for edamagit
    // https://github.com/kahole/edamagit#vim-support-vscodevim
    // Cannot be added to package.json because keybinding replacements
    {
        "key": "tab",
        "command": "extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
    },
    {
        "key": "tab",
        "command": "-extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "x",
        "command": "magit.discard-at-point",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "k",
        "command": "-magit.discard-at-point"
    },
    {
        "key": "-",
        "command": "magit.reverse-at-point",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "v",
        "command": "-magit.reverse-at-point"
    },
    {
        "key": "shift+-",
        "command": "magit.reverting",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "shift+v",
        "command": "-magit.reverting"
    },
    {
        "key": "shift+o",
        "command": "magit.resetting",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "shift+x",
        "command": "-magit.resetting"
    },
    {
        "key": "x",
        "command": "-magit.reset-mixed"
    },
    {
        "key": "ctrl+u x",
        "command": "-magit.reset-hard"
    },
    // Extra ref menu support for edamagit with the key "y"
    // Cannot be added to package.json because keybinding replacements
    {
        "key": "y",
        "command": "-magit.show-refs"
    },
    {
        "key": "y",
        "command": "vspacecode.showMagitRefMenu",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
    },
    // Easy navigation in quick open/QuickPick
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    // Easy navigation in sugesstion/intellisense
    // Cannot be added to package.json because of conflict with vim's default bindings
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    // Easy navigation in parameter hint (i.e. traverse the hints when there's multiple overload for one method)
    // Cannot be added to package.json because of conflict with vim's default bindings
    {
        "key": "ctrl+j",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+k",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    // Add ctrl+h/l to navigate in file browser
    {
        "key": "ctrl+h",
        "command": "file-browser.stepOut",
        "when": "inFileBrowser"
    },
    {
        "key": "ctrl+l",
        "command": "file-browser.stepIn",
        "when": "inFileBrowser"
    }
]
#+end_src
* 快捷键
  https://vspacecode.github.io/docs/default-keybindings
  
 | Key Binding | Name                             | Type     | Command(s)                                                               |
 | ␣ ␣         | Commands...                      | command  | workbench.action.showCommands                                            |
 | ␣ ↹         | Last buffer                      | commands | workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup  list.select |
 | ␣ !         | Show terminal                    | command  | workbench.action.terminal.focus                                          |
 | ␣ "         | Open new external terminal       | command  | workbench.action.terminal.openNativeConsole                              |
 | ␣ '         | Show terminal                    | command  | workbench.action.terminal.focus                                          |
 | ␣ *         | Search in project with selection | commands | editor.action.addSelectionToNextFindMatch                                |

  workbench.action.findInFiles
  ␣ /	Search in project	command	workbench.action.findInFiles
  ␣ 1	Focus 1st window	command	workbench.action.focusFirstEditorGroup
  ␣ 2	Focus 2nd window	command	workbench.action.focusSecondEditorGroup
  ␣ 3	Focus 3rd window	command	workbench.action.focusThirdEditorGroup
  ␣ 4	Focus 4th window	command	workbench.action.focusFourthEditorGroup
  ␣ 5	Focus 5th window	command	workbench.action.focusFifthEditorGroup
  ␣ 6	Focus 6th window	command	workbench.action.focusSixthEditorGroup
  ␣ 7	Focus 7th window	command	workbench.action.focusSeventhEditorGroup
  ␣ 8	Focus 8th window	command	workbench.action.focusEighthEditorGroup
  ␣ ;	Toggle comment	command	editor.action.commentLine
  ␣ v	Smart select/expand region	transient	editor.action.smartSelect.grow
  ␣ b	Buffers...	bindings	N/A
  ␣ c	Comments...	bindings	N/A
  ␣ d	Debug...	bindings	N/A
  ␣ e	Errors...	bindings	N/A
  ␣ f	File...	bindings	N/A
  ␣ g	Git...	bindings	N/A
  ␣ h	Help...	bindings	N/A
  ␣ i	Insert...	bindings	N/A
  ␣ j	Jump/Join/Split...	bindings	N/A
  ␣ l	Layouts...	bindings	N/A
  ␣ p	Project...	bindings	N/A
  ␣ q	Quit..	bindings	N/A
  ␣ r	Resume...	bindings	N/A
  ␣ s	Search/Symbol...	bindings	N/A
  ␣ t	Toggles...	bindings	N/A
  ␣ w	Window...	bindings	N/A
  ␣ x	Text...	bindings	N/A
  ␣ z	Zoom/Fold...	bindings	N/A
  ␣ D	Diff/Compare...	bindings	N/A
  ␣ F	Frame...	bindings	N/A
  ␣ m	Major...	conditional	N/A
  ␣ S	Show...	bindings	N/A
  ␣ T	UI toggles...	bindings	N/A
  Smart select/expand region#
  Key Binding: ␣ v

  Type: transient

  Key Binding	Name	Type	Command(s)
  v	Grow selection	command	editor.action.smartSelect.grow
  V	Shrink selection	command	editor.action.smartSelect.shrink
  Buffers...#
  Key Binding: ␣ b

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ b 0	Last buffer in window	command	workbench.action.lastEditorInGroup
  ␣ b 1	First buffer in window	command	workbench.action.firstEditorInGroup
  ␣ b b	Show all buffers	command	workbench.action.showAllEditors
  ␣ b d	Close active buffer	command	workbench.action.closeActiveEditor
  ␣ b n	Next buffer	command	workbench.action.nextEditor
  ␣ b p	Previous buffer	command	workbench.action.previousEditor
  ␣ b s	Scratch buffer	command	workbench.action.files.newUntitledFile
  ␣ b t	Pin buffer	command	workbench.action.pinEditor
  ␣ b u	Reopen closed buffer	command	workbench.action.reopenClosedEditor
  ␣ b B	Show all buffers in active window	command	workbench.action.showEditorsInActiveGroup
  ␣ b H	Move buffer into left window	command	workbench.action.moveEditorToLeftGroup
  ␣ b J	Move buffer into below window	command	workbench.action.moveEditorToBelowGroup
  ␣ b K	Move buffer into above window	command	workbench.action.moveEditorToAboveGroup
  ␣ b L	Move buffer into right window	command	workbench.action.moveEditorToRightGroup
  ␣ b M	Close other buffers	command	workbench.action.closeOtherEditors
  ␣ b P	Paste clipboard to buffer	commands	editor.action.selectAll
  editor.action.clipboardPasteAction
  ␣ b T	Unpin buffer	command	workbench.action.unpinEditor
  ␣ b Y	Copy buffer to clipboard	command	vspacecode.copyWholeBuffer
  ␣ b N	New Buffer...	bindings	N/A
  Comments...#
  Key Binding: ␣ c

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ c l	Toggle line comment	command	editor.action.commentLine
  ␣ c n	Next error	command	editor.action.marker.nextInFiles
  ␣ c N	Previous error	command	editor.action.marker.prevInFiles
  Debug...#
  Key Binding: ␣ d

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ d c	Continue debug	command	workbench.action.debug.continue
  ␣ d d	Start debug	command	workbench.action.debug.start
  ␣ d i	Step into	command	workbench.action.debug.stepInto
  ␣ d j	Jump to cursor	command	debug.jumpToCursor
  ␣ d o	Step out	command	workbench.action.debug.stepOut
  ␣ d p	Pause debug	command	workbench.action.debug.pause
  ␣ d s	Step over	command	workbench.action.debug.stepOver
  ␣ d v	REPL	command	workbench.debug.action.toggleRepl
  ␣ d w	Focus on watch window	command	workbench.debug.action.focusWatchView
  ␣ d D	Run without debugging	command	workbench.action.debug.run
  ␣ d R	Restart debug	command	workbench.action.debug.restart
  ␣ d S	Stop debug	command	workbench.action.debug.stop
  ␣ d W	Add to watch	command	editor.debug.action.selectionToWatch
  ␣ d b	Breakpoint...	bindings	N/A
  Errors...#
  Key Binding: ␣ e

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ e .	Error transient	transient	N/A
  ␣ e l	List errors	command	workbench.actions.view.problems
  ␣ e n	Next error	command	editor.action.marker.nextInFiles
  ␣ e p	Previous error	command	editor.action.marker.prevInFiles
  ␣ e N	Previous error	command	editor.action.marker.prevInFiles
  File...#
  Key Binding: ␣ f

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ f =	Format file	command	editor.action.formatDocument
  ␣ f f	Open file/folder	command	file-browser.open
  ␣ f l	Change file language	command	workbench.action.editor.changeLanguageMode
  ␣ f n	New file	command	explorer.newFile
  ␣ f o	Open with...	command	explorer.openWith
  ␣ f r	Open recent...	command	workbench.action.openRecent
  ␣ f s	Save file	command	workbench.action.files.save
  ␣ f t	Toggle tree/explorer view	conditional	N/A
  ␣ f w	Open active in new window	command	workbench.action.files.showOpenedFileInNewWindow
  ␣ f D	Delete current file	commands	workbench.files.action.showActiveFileInExplorer
  deleteFile
  ␣ f L	Locate file	command	revealFileInOS
  ␣ f R	Rename file	commands	workbench.files.action.showActiveFileInExplorer
  renameFile
  ␣ f S	Save all files	command	workbench.action.files.saveAll
  ␣ f T	Show active file in tree/explorer view	command	workbench.files.action.showActiveFileInExplorer
  ␣ f e	Emacs/VSpaceCode...	bindings	N/A
  ␣ f i	Indentation...	bindings	N/A
  ␣ f y	Yank...	bindings	N/A
  Git...#
  Key Binding: ␣ g

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ g b	Blame file	command	magit.blame-file
  ␣ g c	Clone	command	git.clone
  ␣ g i	Initialize repository	command	git.init
  ␣ g m	Magit dispatch	command	magit.dispatch
  ␣ g s	Status	command	magit.status
  ␣ g S	Stage file	command	magit.stage-file
  ␣ g U	Unstage file	command	magit.unstage-file
  ␣ g f	File...	bindings	N/A
  Help...#
  Key Binding: ␣ h

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ h d	Open VSCode Documentation	command	workbench.action.openDocumentationUrl
  ␣ h k	Open global key bindings	command	workbench.action.openGlobalKeybindings
  ␣ h I	Report VSCode Issue	command	workbench.action.openIssueReporter
  ␣ h T	Open VSCode Tutorial	command	workbench.action.showInteractivePlayground
  Insert...#
  Key Binding: ␣ i

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ i j	Insert line below	command	editor.action.insertLineAfter
  ␣ i k	Insert line above	command	editor.action.insertLineBefore
  ␣ i s	Insert snippet	command	editor.action.insertSnippet
  Jump/Join/Split...#
  Key Binding: ␣ j

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ j =	Format region or buffer	command	editor.action.format
  ␣ j i	Jump to symbol in buffer	command	workbench.action.gotoSymbol
  ␣ j j	Jump to character	command	vim.remap
  ␣ j l	Jump to line	command	vim.remap
  ␣ j n	Split new line	command	lineBreakInsert
  ␣ j v	Jump to outline/variables	command	breadcrumbs.focusAndSelect
  ␣ j w	Jump to word	command	vim.remap
  ␣ j I	Jump to symbol in workspace	command	workbench.action.showAllSymbols
  Layouts...#
  Key Binding: ␣ l

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ l d	Close workspace	command	workbench.action.closeFolder
  Project...#
  Key Binding: ␣ p

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ p f	Find file in project...	command	workbench.action.quickOpen
  ␣ p l	Switch project...	command	workbench.action.openRecent
  ␣ p p	Switch project...	command	workbench.action.openRecent
  ␣ p t	Show tree/explorer view	command	workbench.view.explorer
  ␣ p R	Replace in files...	command	workbench.action.replaceInFiles
  Quit..#
  Key Binding: ␣ q

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ q f	Close frame	command	workbench.action.closeWindow
  ␣ q q	Close frame	command	workbench.action.closeWindow
  ␣ q r	Reload frame	command	workbench.action.reloadWindow
  ␣ q s	Save all and close frame	commands	workbench.action.files.saveAll
  workbench.action.closeWindow
  ␣ q Q	Quit application	command	workbench.action.quit
  ␣ q R	Reload frame with extensions disabled	command	workbench.action.reloadWindowWithExtensionsDisabled
  Resume...#
  Key Binding: ␣ r

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ r b	Recent buffers	command	workbench.action.showAllEditorsByMostRecentlyUsed
  ␣ r s	Search in project	command	workbench.action.findInFiles
  Search/Symbol...#
  Key Binding: ␣ s

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ s c	Clear highlight	command	vim.remap
  ␣ s e	Edit symbol	command	editor.action.rename
  ␣ s h	Highlight symbol	transient	editor.action.wordHighlight.trigger
  ␣ s j	Jump to symbol in buffer	command	workbench.action.gotoSymbol
  ␣ s p	Search in project	command	workbench.action.findInFiles
  ␣ s r	Search all references	command	editor.action.referenceSearch.trigger
  ␣ s s	Fuzzy search in current buffer	command	fuzzySearch.activeTextEditorWithCurrentSelection
  ␣ s J	Jump to symbol in workspace	command	workbench.action.showAllSymbols
  ␣ s P	Search in project with selection	commands	editor.action.addSelectionToNextFindMatch
  workbench.action.findInFiles
  ␣ s R	Search all references in side bar	command	references-view.find
  ␣ s S	Fuzzy search with selection in current buffer	commands	editor.action.addSelectionToNextFindMatch
  fuzzySearch.activeTextEditorWithCurrentSelection
  Toggles...#
  Key Binding: ␣ t

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ t c	Toggle find case sensitive	command	toggleFindCaseSensitive
  ␣ t l	Toggle word wrap	command	editor.action.toggleWordWrap
  ␣ t w	Toggle render whitespace	command	editor.action.toggleRenderWhitespace
  Window...#
  Key Binding: ␣ w

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ w -	Split window below	command	workbench.action.splitEditorDown
  ␣ w /	Split window right	command	workbench.action.splitEditor
  ␣ w =	Reset window sizes	command	workbench.action.evenEditorWidths
  ␣ w [	Shrink window	transient	workbench.action.decreaseViewSize
  ␣ w ]	Enlarge window	transient	workbench.action.increaseViewSize
  ␣ w d	Close window	command	workbench.action.closeEditorsInGroup
  ␣ w h	Focus window left	command	workbench.action.focusPreviousGroup
  ␣ w j	Focus window down	command	workbench.action.focusBelowGroup
  ␣ w k	Focus window up	command	workbench.action.focusAboveGroup
  ␣ w l	Focus window right	command	workbench.action.focusNextGroup
  ␣ w m	Maximize window	command	workbench.action.toggleEditorWidths
  ␣ w o	Switch frame	command	workbench.action.quickSwitchWindow
  ␣ w s	Split window below	command	workbench.action.splitEditorDown
  ␣ w v	Split window right	command	workbench.action.splitEditor
  ␣ w w	Focus next window	command	workbench.action.focusNextGroup
  ␣ w x	Close all windows	command	workbench.action.closeAllGroups
  ␣ w z	Combine all buffers	command	workbench.action.joinAllGroups
  ␣ w D	Close all other windows	command	workbench.action.closeEditorsInOtherGroups
  ␣ w F	Open new empty frame	command	workbench.action.newWindow
  ␣ w H	Move window left	command	workbench.action.moveActiveEditorGroupLeft
  ␣ w J	Move window down	command	workbench.action.moveActiveEditorGroupDown
  ␣ w K	Move window up	command	workbench.action.moveActiveEditorGroupUp
  ␣ w L	Move window right	command	workbench.action.moveActiveEditorGroupRight
  ␣ w M	Maximize window and hide side bar	command	workbench.action.maximizeEditor
  ␣ w W	Focus previous window	command	workbench.action.focusPreviousGroup
  Text...#
  Key Binding: ␣ x

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ x .	Quick fix	command	editor.action.quickFix
  ␣ x a	Find all references	command	editor.action.referenceSearch.trigger
  ␣ x i	Organize Imports	command	editor.action.organizeImports
  ␣ x r	Rename symbol	command	editor.action.rename
  ␣ x u	To lower case	command	editor.action.transformToLowercase
  ␣ x J	Move lines down	transient	editor.action.moveLinesDownAction
  ␣ x K	Move lines up	transient	editor.action.moveLinesUpAction
  ␣ x R	Refactor	command	editor.action.refactor
  ␣ x U	To upper case	command	editor.action.transformToUppercase
  ␣ x d	Delete...	bindings	N/A
  ␣ x l	Lines...	bindings	N/A
  ␣ x m	Merge conflict...	bindings	N/A
  Zoom/Fold...#
  Key Binding: ␣ z

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ z f	Frame...	transient	N/A
  ␣ z i	Image preview...	transient	N/A
  ␣ z x	Font...	transient	N/A
  ␣ z .	Fold...	bindings	N/A
  Diff/Compare...#
  Key Binding: ␣ D

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ D c	Compare active file with clipboard	command	workbench.files.action.compareWithClipboard
  ␣ D m	Compare current merge conflict	command	merge-conflict.compare
  ␣ D s	Compare active file with saved	command	workbench.files.action.compareWithSaved
  ␣ D w	Toggle ignore trim whitespace	command	toggle.diff.ignoreTrimWhitespace
  ␣ D D	Compare active file with...	command	workbench.files.action.compareFileWith
  Frame...#
  Key Binding: ␣ F

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ F n	Duplicate workspace in new frame	command	workbench.action.duplicateWorkspaceInNewWindow
  ␣ F o	Switch frame	command	workbench.action.quickSwitchWindow
  ␣ F N	Open new empty frame	command	workbench.action.newWindow
  Major...#
  Key Binding: ␣ m

  Type: conditional

  Condition	Name	Type	Command(s)
  languageId:go	Go	bindings	N/A
  languageId:markdown	Markdown	bindings	N/A
  Show...#
  Key Binding: ␣ S

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ S d	Show debug console	command	workbench.debug.action.toggleRepl
  ␣ S e	Show explorer	command	workbench.view.explorer
  ␣ S g	Show source control	command	workbench.view.scm
  ␣ S o	Show output	command	workbench.action.output.toggleOutput
  ␣ S p	Show problem	command	workbench.actions.view.problems
  ␣ S r	Show remote explorer	command	workbench.view.remote
  ␣ S s	Show search	command	workbench.view.search
  ␣ S t	Show test	command	workbench.view.extension.test
  ␣ S x	Show extensions	command	workbench.view.extensions
  UI toggles...#
  Key Binding: ␣ T

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ T b	Toggle side bar visibility	command	workbench.action.toggleSidebarVisibility
  ␣ T c	Toggle centered layout	command	workbench.action.toggleCenteredLayout
  ␣ T i	Select icon theme	command	workbench.action.selectIconTheme
  ␣ T j	Toggle panel visibility	command	workbench.action.togglePanel
  ␣ T m	Toggle maximized panel	command	workbench.action.toggleMaximizedPanel
  ␣ T s	Select theme	command	workbench.action.selectTheme
  ␣ T t	Toggle tool/activity bar visibility	command	workbench.action.toggleActivityBarVisibility
  ␣ T z	Toggle zen mode	command	workbench.action.toggleZenMode
  ␣ T F	Toggle full screen	command	workbench.action.toggleFullScreen
  ␣ T T	Toggle tab visibility	command	workbench.action.toggleTabsVisibility
  New Buffer...#
  Key Binding: ␣ b N

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ b N h	New untitled buffer (split left)	commands	workbench.action.splitEditorLeft
  workbench.action.files.newUntitledFile
  workbench.action.closeOtherEditors
  ␣ b N j	New untitled buffer (split down)	commands	workbench.action.splitEditorDown
  workbench.action.files.newUntitledFile
  workbench.action.closeOtherEditors
  ␣ b N k	New untitled buffer (split up)	commands	workbench.action.splitEditorUp
  workbench.action.files.newUntitledFile
  workbench.action.closeOtherEditors
  ␣ b N l	New untitled buffer (split right)	commands	workbench.action.splitEditorRight
  workbench.action.files.newUntitledFile
  workbench.action.closeOtherEditors
  ␣ b N n	New untitled buffer	command	workbench.action.files.newUntitledFile
  Breakpoint...#
  Key Binding: ␣ d b

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ d b b	Toggle breakpoint	command	editor.debug.action.toggleBreakpoint
  ␣ d b c	Add conditional breakpoint	command	editor.debug.action.conditionalBreakpoint
  ␣ d b d	Delete breakpoint	command	debug.removeBreakpoint
  ␣ d b e	Enable breakpoint	command	debug.enableOrDisableBreakpoint
  ␣ d b f	Add function breakpoint	command	workbench.debug.viewlet.action.addFunctionBreakpointAction
  ␣ d b i	Toggle inline breakpoint	command	editor.debug.action.toggleInlineBreakpoint
  ␣ d b n	Next breakpoint	transient	editor.debug.action.goToNextBreakpoint
  ␣ d b p	Previous breakpoint	transient	editor.debug.action.goToPreviousBreakpoint
  ␣ d b s	Disable breakpoint	command	debug.enableOrDisableBreakpoint
  ␣ d b D	Delete all breakpoints	command	workbench.debug.viewlet.action.removeAllBreakpoints
  ␣ d b E	Enable all breakpoints	command	workbench.debug.viewlet.action.enableAllBreakpoints
  ␣ d b S	Disable all breakpoints	command	workbench.debug.viewlet.action.disableAllBreakpoints
  Error transient#
  Key Binding: ␣ e .

  Type: transient

  Key Binding	Name	Type	Command(s)
  n	Next error	command	editor.action.marker.nextInFiles
  p	Previous error	command	editor.action.marker.prevInFiles
  N	Previous error	command	editor.action.marker.prevInFiles
  Toggle tree/explorer view#
  Key Binding: ␣ f t

  Type: conditional

  Condition	Name	Type	Command(s)
  Show explorer view	command	workbench.view.explorer
  when:sideBarVisible && explorerViewletVisible	Hide side bar	command	workbench.action.toggleSidebarVisibility
  Emacs/VSpaceCode...#
  Key Binding: ␣ f e

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ f e d	Open settings	command	workbench.action.openGlobalSettings
  ␣ f e k	Open global key bindings	command	workbench.action.openGlobalKeybindings
  ␣ f e l	Open language settings	command	workbench.action.configureLanguageBasedSettings
  ␣ f e s	Configure user snippets	command	workbench.action.openSnippets
  ␣ f e w	Open workspace settings	command	workbench.action.openWorkspaceSettings
  ␣ f e D	Open settings JSON	command	workbench.action.openSettingsJson
  ␣ f e K	Open global key bindings JSON	command	workbench.action.openGlobalKeybindingsFile
  ␣ f e W	Open workspace settings JSON	command	workbench.action.openWorkspaceSettingsFile
  Indentation...#
  Key Binding: ␣ f i

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ f i d	Detect indentation	command	editor.action.detectIndentation
  ␣ f i i	Change indentation	command	changeEditorIndentation
  ␣ f i r	Reindent	command	editor.action.reindentlines
  ␣ f i s	Convert indentation to spaces	command	editor.action.indentationToSpaces
  ␣ f i t	Convert indentation to tabs	command	editor.action.indentationToTabs
  ␣ f i R	Reindent selected	command	editor.action.reindentselectedlines
  Yank...#
  Key Binding: ␣ f y

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ f y c	Copy path of active file with line and column	command	vspacecode.copyPathWithLineColumn
  ␣ f y d	Copy directory path of the active file	command	vspacecode.copyDirectoryPath
  ␣ f y l	Copy path of active file with line	command	vspacecode.copyPathWithLine
  ␣ f y n	Copy filename of active file	command	vspacecode.copyFilename
  ␣ f y y	Copy path of active file	command	vspacecode.copyPath
  ␣ f y C	Copy relative path of active file with line and column	command	vspacecode.copyRelativePathWithLineColumn
  ␣ f y D	Copy relative directory path of the active file	command	vspacecode.copyRelativeDirectoryPath
  ␣ f y L	Copy relative path of active file with line	command	vspacecode.copyRelativePathWithLine
  ␣ f y N	Copy filename without extension of active file	command	vspacecode.copyFilenameBase
  ␣ f y Y	Copy relative path of active file	command	vspacecode.copyRelativePath
  File...#
  Key Binding: ␣ g f

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ g f d	Diff	command	magit.diff-file
  ␣ g f l	Show log/timeline	command	timeline.focus
  Highlight symbol#
  Key Binding: ␣ s h

  Type: transient

  Key Binding	Name	Type	Command(s)
  /	Search in project with selection	commands	editor.action.addSelectionToNextFindMatch
  workbench.action.findInFiles
  n	Next occurrence	command	editor.action.wordHighlight.next
  p	Previous occurrence	command	editor.action.wordHighlight.prev
  N	Previous occurrence	command	editor.action.wordHighlight.prev
  Shrink window#
  Key Binding: ␣ w [

  Type: transient

  Key Binding	Name	Type	Command(s)
  [	Shrink window	command	workbench.action.decreaseViewSize
  ]	Enlarge window	command	workbench.action.increaseViewSize
  Enlarge window#
  Key Binding: ␣ w ]

  Type: transient

  Key Binding	Name	Type	Command(s)
  [	Shrink window	command	workbench.action.decreaseViewSize
  ]	Enlarge window	command	workbench.action.increaseViewSize
  Move lines down#
  Key Binding: ␣ x J

  Type: transient

  Key Binding	Name	Type	Command(s)
  J	Move lines down	command	editor.action.moveLinesDownAction
  K	Move lines up	command	editor.action.moveLinesUpAction
  Move lines up#
  Key Binding: ␣ x K

  Type: transient

  Key Binding	Name	Type	Command(s)
  J	Move lines down	command	editor.action.moveLinesDownAction
  K	Move lines up	command	editor.action.moveLinesUpAction
  Delete...#
  Key Binding: ␣ x d

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ x d w	Delete trailing whitespace	command	editor.action.trimTrailingWhitespace
  Lines...#
  Key Binding: ␣ x l

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ x l d	Duplicate lines down	command	editor.action.copyLinesDownAction
  ␣ x l s	Sort lines in ascending order	command	editor.action.sortLinesAscending
  ␣ x l D	Duplicate lines up	command	editor.action.copyLinesUpAction
  ␣ x l S	Sort lines in descending order	command	editor.action.sortLinesDescending
  Merge conflict...#
  Key Binding: ␣ x m

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ x m b	Accept both	command	merge-conflict.accept.both
  ␣ x m c	Accept current	command	merge-conflict.accept.current
  ␣ x m i	Accept incoming	command	merge-conflict.accept.incoming
  ␣ x m k	Compare current conflict	command	merge-conflict.compare
  ␣ x m n	Next Conflict	command	merge-conflict.next
  ␣ x m s	Accept selection	command	merge-conflict.accept.selection
  ␣ x m B	Accept all both	command	merge-conflict.accept.all-both
  ␣ x m C	Accept all current	command	merge-conflict.accept.all-current
  ␣ x m I	Accept all incoming	command	merge-conflict.accept.all-incoming
  ␣ x m N	Previous Conflict	command	merge-conflict.previous
  Frame...#
  Key Binding: ␣ z f

  Type: transient

  Key Binding	Name	Type	Command(s)
  +	Zoom in	command	workbench.action.zoomIn
  -	Zoom out	command	workbench.action.zoomOut
  0	Reset zoom	command	workbench.action.zoomReset
  =	Zoom in	command	workbench.action.zoomIn
  Image preview...#
  Key Binding: ␣ z i

  Type: transient

  Key Binding	Name	Type	Command(s)
  +	Zoom in	command	imagePreview.zoomIn
  -	Zoom out	command	imagePreview.zoomOut
  =	Zoom in	command	imagePreview.zoomIn
  Font...#
  Key Binding: ␣ z x

  Type: transient

  Key Binding	Name	Type	Command(s)
  +	Zoom in	command	editor.action.fontZoomIn
  -	Zoom out	command	editor.action.fontZoomOut
  0	Reset zoom	command	editor.action.fontZoomReset
  =	Zoom in	command	editor.action.fontZoomIn
  Fold...#
  Key Binding: ␣ z .

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ z . a	Toggle: around a point	command	editor.toggleFold
  ␣ z . b	Close: all block comments	command	editor.foldAllBlockComments
  ␣ z . c	Close: at a point	command	editor.fold
  ␣ z . g	Close: all regions	command	editor.foldAllMarkerRegions
  ␣ z . m	Close: all	command	editor.foldAll
  ␣ z . o	Open: at a point	command	editor.unfold
  ␣ z . r	Open: all	command	editor.unfoldAll
  ␣ z . G	Open: all regions	command	editor.unfoldAllMarkerRegions
  ␣ z . O	Open: recursively	command	editor.unfoldRecursively
  Go#
  Key Binding: ␣ m languageId:go

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go ␣	Show all commands	command	go.show.commands
  ␣ m languageId:go =	Format...	bindings	N/A
  ␣ m languageId:go a	Actions...	bindings	N/A
  ␣ m languageId:go b	Backend/environment...	bindings	N/A
  ␣ m languageId:go g	Go to...	bindings	N/A
  ␣ m languageId:go i	Insert/remove...	bindings	N/A
  ␣ m languageId:go r	Refactor...	bindings	N/A
  ␣ m languageId:go t	Test...	bindings	N/A
  Markdown#
  Key Binding: ␣ m languageId:markdown

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:markdown c	Buffer commands...	bindings	N/A
  ␣ m languageId:markdown t	Table of Contents...	bindings	N/A
  ␣ m languageId:markdown x	Text...	bindings	N/A
  Next breakpoint#
  Key Binding: ␣ d b n

  Type: transient

  Key Binding	Name	Type	Command(s)
  n	Next breakpoint	command	editor.debug.action.goToNextBreakpoint
  p	Previous breakpoint	command	editor.debug.action.goToPreviousBreakpoint
  Previous breakpoint#
  Key Binding: ␣ d b p

  Type: transient

  Key Binding	Name	Type	Command(s)
  n	Next breakpoint	command	editor.debug.action.goToNextBreakpoint
  p	Previous breakpoint	command	editor.debug.action.goToPreviousBreakpoint
  Format...#
  Key Binding: ␣ m languageId:go =

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go = =	Format document	command	editor.action.formatDocument
  ␣ m languageId:go = d	Format document with...	command	editor.action.formatDocument
  ␣ m languageId:go = m	Format modified lines only	command	editor.action.formatChanges
  ␣ m languageId:go = s	Format selection	command	editor.action.formatSelection
  ␣ m languageId:go = S	Format selection with...	command	editor.action.formatSelection.multiple
  Actions...#
  Key Binding: ␣ m languageId:go a

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go a P	Run code on Go Playground	command	go.playground
  ␣ m languageId:go a p	Package actions...	bindings	N/A
  ␣ m languageId:go a w	Workspace actions...	bindings	N/A
  Backend/environment...#
  Key Binding: ␣ m languageId:go b

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go b e	Choose Go environment	command	go.environment.choose
  ␣ m languageId:go b g	Show current GOPATH	command	go.gopath
  ␣ m languageId:go b i	Install/update tools	command	go.tools.install
  ␣ m languageId:go b l	Locate configured Go tools	command	go.locate.tools
  ␣ m languageId:go b R	Restart language server	command	go.languageserver.restart
  Go to...#
  Key Binding: ␣ m languageId:go g

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go g d	Go to definition	command	editor.action.revealDefinition
  ␣ m languageId:go g e	Go to errors/problems	command	workbench.action.problems.focus
  ␣ m languageId:go g g	Go to definition	command	editor.action.revealDefinition
  ␣ m languageId:go g i	Find symbol in file	command	workbench.action.gotoSymbol
  ␣ m languageId:go g m	Go to method in file	command	workbench.action.gotoMethod
  ␣ m languageId:go g r	Peek references	command	editor.action.referenceSearch.trigger
  ␣ m languageId:go g t	Go to type definition	command	editor.action.goToTypeDefinition
  ␣ m languageId:go g D	Peek definition	command	editor.action.peekDefinition
  ␣ m languageId:go g I	Find symbol in project	command	workbench.action.showAllSymbols
  ␣ m languageId:go g R	Find all references	command	references-view.findReferences
  ␣ m languageId:go g T	Peek type definition	command	editor.action.peekTypeDefinition
  Insert/remove...#
  Key Binding: ␣ m languageId:go i

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go i f	Fill struct	command	go.fill.struct
  ␣ m languageId:go i i	Add import	command	go.import.add
  ␣ m languageId:go i t	Add tags to struct fields	command	go.add.tags
  ␣ m languageId:go i I	Generate interface stubs	command	go.impl.cursor
  ␣ m languageId:go i T	Remove tags from struct fields	command	go.remove.tags
  Refactor...#
  Key Binding: ␣ m languageId:go r

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go r .	Quick fix	command	editor.action.quickFix
  ␣ m languageId:go r e	Extract to function or variable	command	editor.action.codeAction
  ␣ m languageId:go r r	Rename symbol	command	editor.action.rename
  Test...#
  Key Binding: ␣ m languageId:go t

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go t c	Cancel running tets	command	go.test.cancel
  ␣ m languageId:go t d	Debug test at cursor	command	go.debug.cursor
  ␣ m languageId:go t f	Test function at cursor	command	go.test.cursor
  ␣ m languageId:go t l	Test previous	command	go.test.previous
  ␣ m languageId:go t p	Test package	command	go.test.package
  ␣ m languageId:go t s	Subtest at cursor	command	go.subtest.cursor
  ␣ m languageId:go t w	Test packages in workspace	command	go.test.workspace
  ␣ m languageId:go t F	Test file	command	go.test.file
  ␣ m languageId:go t P	Apply cover profile	command	go.apply.coverprofile
  ␣ m languageId:go t b	Benchmarks...	bindings	N/A
  ␣ m languageId:go t g	Generate...	bindings	N/A
  ␣ m languageId:go t t	Toggle...	bindings	N/A
  Buffer commands...#
  Key Binding: ␣ m languageId:markdown c

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:markdown c e	Export to HTML	command	markdown.extension.printToHtml
  ␣ m languageId:markdown c p	Open preview to the side	command	markdown.showPreviewToSide
  ␣ m languageId:markdown c P	Open preview in current group	command	markdown.showPreview
  Table of Contents...#
  Key Binding: ␣ m languageId:markdown t

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:markdown t c	Create Table of Contents	command	markdown.extension.toc.create
  ␣ m languageId:markdown t n	Add section numbers	command	markdown.extension.toc.addSecNumbers
  ␣ m languageId:markdown t u	Update Table of Contents	command	markdown.extension.toc.update
  ␣ m languageId:markdown t N	Remove section numbers	command	markdown.extension.toc.removeSecNumbers
  Text...#
  Key Binding: ␣ m languageId:markdown x

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:markdown x [	Decrease Heading level	transient	markdown.extension.editing.toggleHeadingDown
  ␣ m languageId:markdown x ]	Increase Heading level	transient	markdown.extension.editing.toggleHeadingUp
  ␣ m languageId:markdown x `	Toggle inline code	command	markdown.extension.editing.toggleCodeSpan
  ␣ m languageId:markdown x b	Toggle bold	command	markdown.extension.editing.toggleBold
  ␣ m languageId:markdown x i	Toggle italic	command	markdown.extension.editing.toggleItalic
  ␣ m languageId:markdown x l	Toggle list	command	markdown.extension.editing.toggleList
  ␣ m languageId:markdown x m	Toggle math	command	markdown.extension.editing.toggleMath
  ␣ m languageId:markdown x s	Toggle strikethrough	command	markdown.extension.editing.toggleStrikethrough
  ␣ m languageId:markdown x ~	Toggle code block	command	markdown.extension.editing.toggleCodeBlock
  Package actions...#
  Key Binding: ␣ m languageId:go a p

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go a p b	Build package	command	go.build.package
  ␣ m languageId:go a p g	Get package	command	go.get.package
  ␣ m languageId:go a p i	Install current package	command	go.install.package
  ␣ m languageId:go a p l	Lint package	command	go.lint.package
  ␣ m languageId:go a p s	Browse packages	command	go.browse.packages
  ␣ m languageId:go a p v	Vet package	command	go.vet.package
  Workspace actions...#
  Key Binding: ␣ m languageId:go a w

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go a w b	Build workspace	command	go.build.workspace
  ␣ m languageId:go a w l	Lint workspace	command	go.lint.workspace
  ␣ m languageId:go a w p	Add package to workspace	command	go.add.package.workspace
  ␣ m languageId:go a w v	Vet workspace	command	go.vet.workspace
  Benchmarks...#
  Key Binding: ␣ m languageId:go t b

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go t b f	Benchmark function at cursor	command	go.benchmark.cursor
  ␣ m languageId:go t b p	Benchmark package	command	go.benchmark.package
  ␣ m languageId:go t b F	Benchmark file	command	go.benchmark.file
  Generate...#
  Key Binding: ␣ m languageId:go t g

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go t g f	Generate unit tests for function	command	go.test.generate.function
  ␣ m languageId:go t g p	Generate unit tests for package	command	go.test.generate.package
  ␣ m languageId:go t g F	Generate unit tests for file	command	go.test.generate.file
  Toggle...#
  Key Binding: ␣ m languageId:go t t

  Type: bindings

  Key Binding	Name	Type	Command(s)
  ␣ m languageId:go t t c	Toggle test coverage in current package	command	go.test.coverage
  ␣ m languageId:go t t f	Toggle open test file	command	go.toggle.test.file
  Decrease Heading level#
  Key Binding: ␣ m languageId:markdown x [

  Type: transient

  Key Binding	Name	Type	Command(s)
  [	Decrease Heading level	command	markdown.extension.editing.toggleHeadingDown
  ]	Increase Heading level	command	markdown.extension.editing.toggleHeadingUp
  Increase Heading level#
  Key Binding: ␣ m languageId:markdown x ]

  Type: transient

  Key Binding	Name	Type	Command(s)
  [	Decrease Heading level	command	markdown.extension.editing.toggleHeadingDown
  ]	Increase Heading level	command	markdown.extension.editing.toggleHeadingUp
