* RubyGems
  gem -v 查看 RubyGems 的版本
  gem update --system 升级 RubyGems 的版本
gem install gem_name 安装某个插件
gem install -v x.x.x gem_name 安装指定版本的插件
gem list 列出安装的套件
gem update gem_name 更新某个插件
gem update 更新所有的插件
gem uninstall gem_name 删除某个插件
另外，在安装插件时，系统会默认安装该插件的 RDoc 和 ri 文件，如果不希望安装这些该件，可在安装时使用--no-ri --no-rdoc 参数：

gem install gem_name --no-ri --no-rdoc

也可以在用户目录~下，新建一个.gemrc 文档，内容如下：
gem: --no-ri --no-rdoc
系统将默认不安装 RDoc 和 ri 文件。

###国内 RubyGems 镜像

如果服务器在国内，安装所需的 gems 将是异常痛苦的体验，所幸的是，现在可以使用国内的镜像：
$ gem sources --remove https://rubygems.org/
gem sources --add https://gems.ruby-china.com/
$ gem sources -l
如果显示：

就说明更改成功啦，你现在可以从国内镜像安装 rugy gems 啦。详细内容可参考 Rubygems 镜像

如果使用 Bundler 管理 Ruby Gems，可以修改 Gemfile：
source 'http://ruby.taobao.org/'

gem 'rails', '3.2.2'
... ... ...

###建立和分享 Ruby Gems

根据官方的简介：
gem update --system #Update to the latest RubyGems version
gem build foo.gemspec #Build your gem
gem push foo-1.0.0.gem #Deploy your gem instantly

如何建立自己的 Rubygems
###简单的示例：

以创建 topico-0.0.1.gem 为例：

####建立文件夹

.
├── lib
│  └── topico.rb
└── topico.gemspec
注意：lib 目录下必须有个和你 gem 名字一样的 rb 文件。

####编写代码 lib\topico.rb

class Topico
 def self.hello
  puts "Hello, RubyGems!"
 end
end
####编辑 GemSpec 文件 topico.gemspec

Gem::Specification.new do |s|
 s.name    = 'topico'
 s.version   = '0.0.1'
 s.date    = '2012-03-11'
 s.summary   = 'Greeting from Topico'
 s.description = 'Topico shows a greeting to RubyGems'
 s.authors   = 'Author Name'
 s.email    = 'username@username.com'
 s.files    = ["lib/topico.rb"]
 s.homepage  = 'http://rubygems.org/gems/topico'
end
这里仅列出了较为常见的属性。

####编译生成 gem

$ gem build topico.gemspec
系统会提示信息：

 

 Successfully built RubyGem
 Name: topico
 Version: 0.0.1
 File: topico-0.0.1.gem
编译后可以查看文件夹结构 tree

.
├── lib
│  └── topico.rb
├── topico-0.0.1.gem
└── topico.gemspec
注意新生成的 topico-0.0.1.gem

####安装并测试 gem

安装 topico-0.0.1.gem

$ gem install ./topico-0.0.1.gem
系统会提示：

Successfully installed topico-0.0.1
1 gem installed
Installing ri documentation for topico-0.0.1...
Installing RDoc documentation for topico-0.0.1...
在 irb 中测试使用 irb：

irb(main):001:0> require 'topico'
=> true
irb(main):002:0> Topico.hello
Hello, RubyGems!
=> nil
####发布到 RugyGems 网站

先设置 RubyGems 的用户名和密码：

$ curl -u username https://rubygems.org/api/v1/api_key.yaml > ~/.gem/credentials
Enter host password for user 'username':
 % Total  % Received % Xferd Average Speed  Time  Time   Time Current
                 Dload Upload  Total  Spent  Left Speed
 0  56  0  56  0   0   25   0 --:--:-- 0:00:02 --:--:--  144
设置成功后发布：

$ gem push topico-0.0.1.gem
Pushing gem to https://rubygems.org...
Successfully registered gem: topico (0.0.1)
发布成功，这样大家都可以使用你的 Rubygem 啦。

###稍微复杂一些的示例：

下面看一下如何组织多个 ruby 文件。

1.目录结构

.
├── lib
│  ├── ext
│  │  └── calculation.rb
│  └── topico.rb
└── topico.gemspec
2.编写 GemSpec

在 s.files 一行，修改：

 s.files    = ["lib/topico.rb", "lib/ext/calculation.rb"]
重新 gem build 即可。

3.如何在 Gem 中包含可执行该件

（1）在插件目录下，建立 bin 文件夹：

生成可执行该件，并且将权限修改为可运行。

$ mkdir bin
$ touch bin/greeting
$ chmod a+x bin/greeting
（2）修改可执行文件内容

#!/usr/bin/env ruby

require 'topico'
puts Topico.hello

（3）修改 GemSpec,添加一行 s.executables

 s.executables << 'greeting'
* ruby
** 安装  
   #+begin_src sh
   $ sudo apt-get install ruby-full
   #+end_src
   或用版本管理工具。如 rvm
** 数据类型
  - (1..9).class 区间
  - [1, 3.4, 3] 数组
  - {1=>'one', 2=>'two'} 散列表
** 判断
> < ==
unless(不成立时执行判断)
if 成立时执行
while
and or && ||
** 函数 1.methods
   #+BEGIN_SRC ruby
     def add
          4+4
     end
   #+END_SRC
** 继承
   ruby 是单继承，superclass
  [[file:image/rbjicheng.png][继承关系]] 
