#+TITLE: 编译原理

* 计算机语言 [计算机功能的一套文字] 
  
* 编译原理
  预处理器会把宏展开，符号展开。
  解析器会把源码构建成抽象语法树( AST )。
  检查器会分析节点的类型，函数参数个数和类型是否正确。
  生成器生成目标代码。
  优化器优化目标代码。
  
  
( 词法分析）
( 语法分析 )
( 语法制导定义 )
( 语法制导翻译 )
( 运行时刻环境 )
( 目标代码生成 )
( 代码优化 )
( 并行性检测 )
( 过程间分析 )


                                ====== ( 编译器 )      (生成一个程序，不再需要编译器)
     ( 语言处理器 )                               
                                ====== ( 解释器 )      (还是程序文本，需要解释器）
                                
                                
:具体语言系统:
    ( 具体语言系统实现 )====>  源程序
                                                      |   
                                               ( 预处理器 )
                                                      |   
                                         经过预处理的源程序 
                                                      |   
                                                 ( 编译器 ) 
                                                      |   
                                              目标汇编程序      
                                                      |   
                                                 ( 汇编器 )     
                                                      |   
                                          可重定位机器代码          
                                                      |   
                                             ( 链接器/加载器 )  <=====   (库文件，可重定位对象文件)
                                                      |   
                                             目标机器代码
                                :END:
:编译器分析:
            ( 编译器 ) =====> 字符流 
                                              | 
                                    ( 词法分析器 )     
                                              | 
                                          符号流    
                                              | 
                                      ( 语法分析 )     
                                              | 
                                          语法树    
                                              | 
                                      ( 语义分析 )    
                                              | 
                                         语法树     
                                              | 
                              ( 中间代码生成器 )   
                                              | 
                                    中间表示形式    
                                              | 
                          ( 机器无关代码优化器 ) 
                                              | 
                                    中间表示形式    
                                              | 
                                   ( 代码生成器 )
                                              | 
                                    目标机器语言
                                              | 
                            ( 机器相关代码优化器 ) 
                                              | 
                                    目标机器语言
:END:
* 链接
** 静态链接  含代码
   如果依赖的静态库更新了，程序要重新编译
** 动态链接
** 目标文件
   1.可执行目标文件
   
   2.可重定向目标文件：可与其它可重定向目标文件在链接阶段合并，创建一个可执行目
标文件；

   3.共享目标文件：这是一种特殊的可重定向目标文件，可以在运行时被动态加载进内存
并链接；

* 编译原理
  文字，语音，形状 翻译器
** 绪论
*** 上下文无关文法 
*** 正则表达式 
*** 编译器的中间数据结构 中间采用的临时数据结构，大都采用树型的结构, 源代码也会转化成树结构进行操作
*** 文法定义 相当于不同类型的句子定义一种不同类型的数据，和不同的方法（算法）
** 语法分析
*** 语法分析树 
