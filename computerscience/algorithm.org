#+TITLE: 算法简介
#+DESCRIPTION: 算法简介
#+TAGS: 算法
#+CATEGORIES: 软件使用

* 算法
  算法就是 你做某件事想到的 *方法*，展示的是 *方法* 的细节 。
  
  #+HTML: <!-- more -->
 
** 数组中重复的数字 
*** 题目 
    在一个长度为 *n* 的数组里的所有数字都在 0 到 n-1 的范围内。数组中某些数字是重复的，
    但不知道有几个数字是重复的，也不知道每个数字重复几次。请找出数组中任意一个重复
    的数字。
*** 思路
    #+begin_quote
    目的就是在一堆东西中查找重复的东西，并计算重复次数
    #+end_quote
    
    要求复杂度为 O(N) + O(1)

    #+begin_src java -n
      public boolean duplicate(int[] nums, int length, int[] duplication) {
          if (nums == null || length <= 0)
              return false;
          for (int i = 0; i < length; i++) {
              while (nums[i] != i) {
                  if (nums[i] == nums[nums[i]]) {
                      duplication[0] = nums[i];
                      return true;
                  }
                  swap(nums, i, nums[i]);
              }
          }
          return false;
      }

      private void swap(int[] nums, int i, int j) {
          int t = nums[i];
          nums[i] = nums[j];
          nums[j] = t;
      }

    #+end_src
** 二维数组中的查找
*** 题目描述
    在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递
    增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是
    否含有该整数。

