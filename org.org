* org排版
** 常用标记  
*** 字体
  *粗体*
  /斜体/
  +删除线+
  _下划线_
  下标： H_2 O
  上标： E=mc^2
  等宽字：  =git=  或者 ～git～
*** 表格
  | Pone | Name  | Age |
  |------+-------+-----|
  | 4321 | Anna  |  25 |
  | 1234 | Peter |  17 |
*** 列表
  无序列表项以‘-’、‘+’或者‘*‘开头。
  有序列表项以‘1.’或者‘1)’开头。
  描述列表用‘::’将项和描述分开。
  
  有序列表和无序列表都以缩进表示层级。只要对齐缩进，不管是换行还是分块都认为是处
  于当前列表项。
  
    My favorite scenes are (in this order)
    1. The attack of the Rohirrim
    2. Eowyn's fight with the witch king
       + this was already my favorite scene in the book
         + I really like Miranda Otto.
       + hello
    Important actors in this film are:
    - Elijah Wood :: He plays Frodo
      - Sean Austin :: He plays Sam, Frodo's friend.
    - ::

*** 分隔线
五条短线或以上显示为分隔线。
-----
*** 标签      
**** 定义     
\* Meeting with the French group     :work:
\** Summary by Frank                 :boss:notes:
\*** TODO Prepare slides for him     :action:
则最后一行标题具有 work, boss, notes, action 四个标签。

更方便的做法是在正文部分用C-c C-q 或直接在标题上用C-c C-c创建标签，这种方式可以
列出所有预定义的标签以便选取。

**** 预定义tag
  在当前文件头部定义
  这种方式预定义的标签只能在当前文件中使用。使用#+TAGS元数据进行标记，如：
      #+TAGS: { 桌面(d) 服务器(s) }  编辑器(e) 浏览器(f) 多媒体(m) 压缩(z)    
  每项之间必须用空格分隔，可以在括号中定义一个快捷键；花括号里的为标签组，只能选择一个
  对标签定义进行修改后，要在标签定义的位置按 C-c C-c 刷新才能生效。

  在配置文件中定义 上面的标签定义只能在当前文件生效，如果要在所有的.org 文件中生
  效，需要在 Emacs 配置文件 .emacs 中进行定义：
  
  (setq org-tag-alist '(

  (:startgroup . nil)
  ("桌面" . ?d) ("服务器" . ?s)
  (:endgroup . nil)
  ("编辑器" . ?e)
  ("浏览器" . ?f) 
  ("多媒体" . ?m)
  ))    
  默认情况下，org会动态维护一个Tag列表，即当前输入的标签若不在列表中，则自动加入列表以供下次补齐使用。

  为了使这几种情况（默认列表、文件预设tags，全局预设tags）同时生效，需要在文件中增加一个空的TAGS定义：

  #+TAGS:
**** 按tag搜索
  C-c \	按tag搜索标题
  C-c / m	搜索并按树状结构显示
  C-c a m	按标签搜索多个文件（需要将文件加入全局agenda)
  
  可以使用逻辑表达式限制条件，更准确灵活的搜索
  + 和      a+b     同时有这两个标签
  + 排除    a-b     有 a 但没有 b
  |     或      a|b     有 a 或者有 b
  &     和      a&b     同时有 a 和 b，可以用“+”替代
  在查询视图中 C-c C-c 退出

** 链接
 #+BEGIN_SRC 
  http://www.astro.uva.nl/~dominik            on the web
  file:/home/dominik/images/jupiter.jpg       file, absolute path
  /home/dominik/images/jupiter.jpg            same as above
  file:papers/last.pdf                        file, relative path
  file:projects.org                           another Org file
  docview:papers/last.pdf::NNN                open file in doc-view mode at page NNN
  id:B7423F4D-2E8A-471B-8810-C40F074717E9     Link to heading by ID
  news:comp.emacs                             Usenet link
  mailto:adent@galaxy.net                     Mail link
  vm:folder                                   VM folder link
  vm:folder#id                                VM message link
  wl:folder#id                                WANDERLUST message link
  mhe:folder#id                               MH-E message link
  rmail:folder#id                             RMAIL message link
  gnus:group#id                               Gnus article link
  bbdb:R.*Stallman                            BBDB link (with regexp)
  irc:/irc.com/#emacs/bob                     IRC link
  info:org:External%20links                   Info node link (with encoded space)
  
  对于文件链接，可以用::后面增加定位符的方式链接到文件的特定位置。定位符可以是行号或搜索选项。如：
  file:~/code/main.c::255                     进入到 255 行
  file:~/test.txt::2                          进入到 2 行
  file:~/xx.org::My Target                    找到目标‘<<My Target>>’
  file:~/xx.org/::#my-custom-id               查找自定义 id 的项
  #+END_SRC
** 日期时间
SCHEDULED: <2019-01-26 六 10:00>

** 内容元数据
#+STARTUP: indent 缩进打开 或 (setq org-startup-indented t)
#+FILETAGS: :Peter:Boss:Secret: 如果希望文档中的所有标题都具有某些标签，只需要定义文档元数据：
#+TITLE:       the title to be shown (default is the buffer name)
#+AUTHOR:      the author (default taken from user-full-name)
#+DATE:        a date, an Org timestamp1, or a format string for format-time-string
#+EMAIL:       his/her email address (default from user-mail-address)
#+DESCRIPTION: the page description, e.g. for the XHTML meta tag
#+KEYWORDS:    the page keywords, e.g. for the XHTML meta tag
#+LANGUAGE:    language for HTML, e.g. ‘en’ (org-export-default-language)
#+TEXT:        Some descriptive text to be inserted at the beginning.
#+TEXT:        Several lines may be given.
#+OPTIONS:     H:2 num:t toc:t \n:nil @:t ::t |:t ^:t f:t TeX:t ...
#+BIND:        lisp-var lisp-val, e.g.: org-export-latex-low-levels itemize
#+LINK_UP:     the ``up'' link of an exported page
#+LINK_HOME:   the ``home'' link of an exported page
#+LATEX_HEADER: extra line(s) for the LaTeX header, like \usepackage{xyz}
#+EXPORT_SELECT_TAGS:   Tags that select a tree for export
#+EXPORT_EXCLUDE_TAGS:  Tags that exclude a tree from export
#+XSLT:        the XSLT stylesheet used by DocBook exporter to generate FO file
** 日程视图 
** 代码区块
  默认内容不换行，需要留出空行才能换行。定义了分行的区块可以实现普通换行：
  #+BEGIN_VERSE
   Great clouds overhead
   Tiny black birds rise and fall
   Snow covers Emacs
       -- AlexSchroeder
  #+END_VERSE
  缩进区块
  通常用于引用，与默认格式相比左右都会留出缩进：
  #+BEGIN_QUOTE
    缩进区块
  #+END_QUOTE
  居中区块
  #+BEGIN_CENTER
  Everything should be made as simple as possible, \\
  but not any simpler
  #+END_CENTER
  代码区块
  #+BEGIN_SRC ruby
    require 'redcarpet'
    md = Redcarpet.new("Hello, world.")
    puts md.to_html
  #+END_SRC
  例子
  : 单行的例子以冒号开头

  #+BEGIN_EXAMPLE
   多行的例子
   使用区块
  #+END_EXAMPLE
  注释
  以‘#‘开头的行被看作注释，不会被导出
  区块注释采用如下写法：

  #+BEGIN_COMMENT
    块注释
    ...
   #+END_COMMENT
  表格与图片
  对于表格和图片，可以在前面增加标题和标签的说明，以方便交叉引用。
  比如在表格的前面添加：

  #+CAPTION: This is the caption for the next table (or link)
  #+LABEL: tbl:table1
  则在需要的地方可以通过

  \ref{table1}
  来引用该表格。

*** 嵌入Html
    对于导出html以及发布，嵌入html代码就很有用。比如下面的例子适用于格式化为cnblogs的代码块：

  #+BEGIN_HTML
    <div class="cnblogs_Highlighter">
    <pre class="brush:cpp">
    int main()
    {
      return 0;
    }
    </pre>
    </div>
  #+END_HTML
  相当于在cnblogs的网页编辑器中插入"c++"代码。

** 发布
** 程序代码
*** 编辑代码 
在代码框编辑代码 C-c ' 
  #+BEGIN_SRC lisp
    (+ 3 4)
  #+END_SRC
* org-brain 脑图
脑图浏览模式  org-brain-visualize =SPC a o b=
** 配置 
 配置 org-brain-path
** 操作 
 同步 org-brain-update-id-locations
 
 导航 
 j或TAB	forward-button	转到下一个链接
 k或S-TAB	backward-button	转到上一个链接
 b	org-brain-visualize-back	就像网页浏览器中的后退按钮一样。
 
编辑
h或*	org-brain-new-child	添加一个新的子节点并创建该文件

c	org-brain-add-child	作为一个孩子添加一个现有的条目或新的文件
C	org-brain-remove-child	删除一个条目的子女关系
p	org-brain-add-parent	将现有条目或新文件添加为父项
P	org-brain-remove-parent	删除条目的父关系之一
f	org-brain-add-friendship	将现有条目或新文件添加为朋友
F	org-brain-remove-friendship	删除条目的一个朋友关系
d	org-brain-delete-entry	选择一个条目进行删除。

q org-brain-visualize-quit  退出
a org-brain-visualize-attach	org-attach在条目上运行（仅限标题条目）
n	org-brain-pin	如果条目是固定的，则切换
v	org-brain-visualize	选择并可视化一个不同的条目
r	org-brain-visualize-random	随机显示您的一个条目。
R	org-brain-visualize-wander	以设定的时间间隔随机显示。R再次取消。

修改
t	org-brain-set-title	更改条目的标题。
T	org-brain-set-tags	更改条目的标签。
o	org-brain-goto-current	打开当前条目进行编辑
O	org-brain-goto	选择并编辑您的一个org-brain条目

新增
l	org-brain-visualize-add-resource	在条目中添加新的资源链接
C-y	org-brain-visualize-paste-resource	从剪贴板添加新的资源链接
** 概览
  PINNED：索引

               + -Python游戏开发 -  +  - 游戏设计
               + - 编程书籍|
   编程 -  +  -  Emacs |
         | |
         + ----------------- + ----------------- +
                           |
                           ▽
                    游戏编程←→电脑游戏
* TODOLIST(待办清单)     
** 配制
(setq org-agenda-files (list "~/doc/org/linux.org"
                  "~/doc/org/work.org"
                  "~/doc/org/home.org"))  
