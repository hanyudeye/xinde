* html 
  SVG 是一种使用 XML 描述 2D 图形的语言。
  Canvas 通过 JavaScript 来绘制 2D 图形。
  #+BEGIN_SRC html
      <!DOCTYPE html>
      <meta charset="utf-8">
      <title>HTML5</title>
      <link rel="alternate" type="application/atom+xml" href="https://github.com/diveintomark/diveintohtml5/commits/master.atom">
      <link rel="stylesheet" href="screen.css">
      <style>
        h1:before{content:''}
        h1,h2,h3{padding:0;margin:0;border:0;line-height:128px;text-align:center;clear:both}
        h1{margin-top:128px;font-size:72px;text-transform:uppercase}
        h2{font-size:48px}
        ol{margin:1em 0 0 0;padding:0}
        li{clear:both;width:100%;margin:0 0 1em 0;padding:0;overflow:hidden}
        .title,.number{background:#fff}
        .title{float:left;padding-right:3px}
        .number{margin:0;float:right;padding-left:3px}
        .f{margin-top:6.224em}
    </style>
      <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="mobile.css">
      <link rel="prefetch" href="introduction.html">
      <hgroup>
        <h1>Dive Into HTML5</h1>
        <h2>by<br>Mark Pilgrim</h2>
        <h3>with contributions from the community</h3>
      </hgroup>
    <p class="a rotatedFloralHeartBullet">
    <p class="f">Dive Into <abbr>HTML5</abbr> elaborates on a hand-picked selection of features from the 
      <a href="http://www.whatwg.org/html5">HTML5</a> 
      specification and other fine standards. We encourage you to
      <a href="//www.amazon.com/HTML5-Up-Running-Mark-Pilgrim/dp/0596806027">buy the printed work</a> 
      &mdash; Mark Pilgrim&rsquo;s artfully titled &ldquo;HTML5: Up 
      <i class="baa">&amp;</i> 
      Running&rdquo; &mdash; published on paper by O&rsquo;Reilly, under the Google Press imprint. Your kind and sincere
      <a href="about.html">feedback is always welcome</a>
      , and this work shall remain online under the 
      <a rel="license" href="//creativecommons.org/licenses/by/3.0/">CC-BY-3.0 license</a>.
    <p>This particular edition of Dive Into HTML5 is advanced by
      <a href="//github.com/diveintomark?tab=members">the diveintomark team</a>.
      <h3>Table of Contents</h3>

      <!-- toc -->
      <ol>
        <li><a href="introduction.html">Introduction: Five Things You Should Know About <abbr>HTML5</abbr></a>
        <li><a href="past.html">A Quite Biased History of <abbr>HTML5</abbr></a>
        <li><a href="detect.html">Detecting <abbr>HTML5</abbr> Features: It&rsquo;s Elementary, My Dear Watson</a>
        <li><a href="semantics.html">What Does It All Mean?</a>
        <li><a href="canvas.html">Let&rsquo;s Call It a Draw(ing Surface)</a>
        <li><a href="video.html">Video in a Flash (Without That Other Thing)</a>
        <li><a href="geolocation.html">You Are Here (And So Is Everybody Else)</a>
        <li><a href="storage.html">A Place To Put Your Stuff</a>
        <li><a href="offline.html">Let&rsquo;s Take This Offline</a>
        <li><a href="forms.html">A Form of Madness</a>
        <li><a href="extensibility.html">&ldquo;Distributed,&rdquo; &ldquo;Extensibility,&rdquo; And Other Fancy Words</a>
        <li><a href="history.html">Manipulating History for Fun <i>&amp;</i> Profit</a>
        <li class="app"><a href="everything.html">The All-In-One Almost-Alphabetical Guide to Detecting Everything</a>
        <li class="app"><a href="peeks-pokes-and-pointers.html"><abbr>HTML5</abbr> Peeks, Pokes and Pointers</a>
      </ol>
    <!-- /toc -->

    <p class="a rotatedFloralHeartBullet">
    <p class="c">&ldquo;If you&rsquo;re good at something, never do it for free.&rdquo; <span class="u">&mdash;</span><cite>The Joker</cite><br>(but that doesn&rsquo;t mean you should keep it to yourself)
    <p class="c">Copyright MMIX&ndash;MMXI <a href="about.html">Mark Pilgrim</a>
    <form action="http://www.google.com/cse"><div><input type="hidden" name="cx" value="017884302975346027366:bgclqh8nvse"><input type="hidden" name="ie" value="UTF-8"><input type="search" name="q" size="25" placeholder="powered by Google&trade;">&nbsp;<input type="submit" name="sa" value="Search"></div></form>
    <script src="j/jquery.js"></script>
    <script src="j/dih5.js"></script>
    <script>
    $(function() {
      $("ol").css("list-style", "none");
      $("li").each(function(i) {
        var num = i;
        if ($(this).hasClass("app")) {
          num = String.fromCharCode(53+num);
        }
        $(this).wrapInner('<span class="title"></span>').append('<span class="number">'+num+'</span>').css("background", "#fff url(i/dot.png) repeat-x 0 0.8em");
      });
    });
    window._gaq=[['_setAccount','UA-26147692-1'],['_setDomainName', 'diveintohtml5.info'],['_setAllowHash', false],['_trackPageview'],['_trackPageLoadTime']];(function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.src='//www.google-analytics.com/ga.js';s.parentNode.insertBefore(g,s)}(document,'script'));
    </script>
  #+END_SRC
  #+BEGIN_SRC html
        <!DOCTYPE html> 声明为 HTML5 文档
      <html> 元素是 HTML 页面的根元素
      <head> 元素包含了文档的元（meta）数据
      <title> 元素描述了文档的标题
      <body> 元素包含了可见的页面内容
      <h1> 元素定义一个大标题
      <p> 元素定义一个段落
  #+END_SRC
  #+BEGIN_SRC js
        <canvas>
    var c=document.getElementById("myCanvas");
    var ctx=c.getContext("2d");
    ctx.fillStyle="#FF0000";
    ctx.fillRect(0,0,150,75);

  #+END_SRC
** svg
   #+BEGIN_SRC html
        <svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="190">
       <polygon points="100,10 40,180 190,60 10,60 160,180"
       style="fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;">
        </svg>
   #+END_SRC
** MathML 要浏览器支持
   #+BEGIN_SRC html
 <math xmlns="http://www.w3.org/1998/Math/MathML">
         <mrow>
            <msup><mi>a</mi><mn>2</mn></msup>
            <mo>+</mo>
				
            <msup><mi>b</mi><mn>2</mn></msup>
            <mo>=</mo>
				
            <msup><mi>c</mi><mn>2</mn></msup>
         </mrow>
      </math>

   #+END_SRC
** 多媒体
*** <audio>支持 MP3,Wav,Ogg
    #+BEGIN_SRC 
    <audio controls>
    <source src="horse.ogg" type="audio/ogg">
    <source src="horse.mp3" type="audio/mpeg">
    您的浏览器不支持 audio 元素。
    </audio>
    #+END_SRC
    属性
    autoplayNew 	autoplay 	如果出现该属性，则音频在就绪后马上播放。
    controlsNew 	controls 	如果出现该属性，则向用户显示音频控件（比如播放/暂停按钮）。
    loopNew 	    loop 	如果出现该属性，则每当音频结束时重新开始播放。
    mutedNew 	    muted 	如果出现该属性，则音频输出为静音。
    preloadNew 	  auto
    metadata
    none 	        规定当网页加载时，音频是否默认被加载以及如何被加载。
    srcNew 	      URL 	规定音频文件的 URL。
*** <video>
*** <source>定义多媒体资源 <video> 和 <audio>
** 拖放（Drag 和 Drop）
   #+BEGIN_SRC html
<!DOCTYPE HTML> 
<html> 
<head> 
<meta charset="utf-8"> 
<title>我是程序员教程(book.wscxy.com)</title> 
<style type="text/css"> 
#div1 {width:350px;height:70px;padding:10px;border:1px solid #aaaaaa;} 
</style> 
<script> 
function allowDrop(ev) 
{ 
    ev.preventDefault(); 
} 

function drag(ev) 
{ 
    ev.dataTransfer.setData("Text",ev.target.id); 
} 

function drop(ev) 
{ 
    ev.preventDefault(); 
    var data=ev.dataTransfer.getData("Text"); 
    ev.target.appendChild(document.getElementById(data)); 
} 
</script> 
</head> 
<body> 

<p>拖动 book.wscxy.com 图片到矩形框中:</p> 

<div id="div1" ondrop="drop(event)" ondragover="allowDrop(event)"></div> 
<br> 
<img id="drag1" src="http://book.wscxy.com/Uploadsk/images/logo.png" draggable="true" ondragstart="drag(event)" width="336" height="69"> 

</body> 
</html>

   #+END_SRC
   首先，为了使元素可拖动，把 draggable 属性设置为 true ：
<img draggable="true">

ondragstart 属性调用了一个函数，drag(event)，它规定了被拖动的数据。
dataTransfer.setData() 方法设置被拖数据的数据类型和值：
function drag(ev)
{
    ev.dataTransfer.setData("Text",ev.target.id);
}
** Geolocation（地理定位）
** section
   <section> 标签定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。
** <article> 标签定义独立的内容
** aside
   <aside> 标签定义页面主区域内容之外的内容（比如侧边栏）。
   aside 标签的内容应与主区域的内容相关.
** header
   <header>元素描述了文档的头部区域
   <header>元素注意用于定义内容的介绍展示区域.
   在页面中你可以使用多个<header> 元素.
** HTML5 <figure> 和 <figcaption> 元素
<figure>标签规定独立的流内容（图像、图表、照片、代码等等）。
<figure> 元素的内容应该与主内容相关，但如果被删除，则不应对文档流产生影响。
<figcaption> 标签定义 <figure> 元素的标题.
<figcaption>元素应该被置于 "figure" 元素的第一个或最后一个子元素的位置。
** Web SQL 数据库
* 响应式 Web 设计 - Viewport
  手机浏览器 把页面放在一个虚拟的"窗口" viewport中，通常比屏幕宽，就不用把网页挤到很小的窗口中
** 设置Viewport 
<meta name="viewport" content="width=device-width, initial-scale=1.0">
#+BEGIN_SRC 
width：控制 viewport 的大小，可以指定的一个值，如果 600，或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。
height：和 width 相对应，指定高度。
initial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例。
maximum-scale：允许用户缩放到的最大比例。
minimum-scale：允许用户缩放到的最小比例。
user-scalable：用户是否可以手动缩放。
#+END_SRC
** 网格 就像装修房子的时候打格子，每个格子做为什么，由大到小设计
  通常12列，宽度100%
#+BEGIN_SRC css
           ,* {
              box-sizing: border-box;
           }
          首先确保所有的 HTML 元素都有 box-sizing 属性且设置为 border-box。
          确保边距和边框包含在元素的宽度和高度间。
        .menu {
            width: 25%;
            float: left;
        }
        .main {
            width: 75%;
            float: left;
        }
       设置其他 桌面
     .col-1 {width: 8.33%;}
     .col-2 {width: 16.66%;}
     .col-3 {width: 25%;}
     .col-4 {width: 33.33%;}
     .col-5 {width: 41.66%;}
     .col-6 {width: 50%;}
     .col-7 {width: 58.33%;}
     .col-8 {width: 66.66%;}
     .col-9 {width: 75%;}
     .col-10 {width: 83.33%;}
     .col-11 {width: 91.66%;}
     .col-12 {width: 100%;}
    这种方式，就不用单独设计元素的宽度了
  @media only screen and (max-width: 768px) {
      /* For mobile phones: */
      [class*="col-"] {
          width: 100%;
      }
  }
  媒体查询，每列都是100%
#+END_SRC
