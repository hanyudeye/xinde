* html 页面标记语言, 运行在浏览器
  SVG 是一种使用 XML 描述 2D 图形的语言。
  Canvas 通过 JavaScript 来绘制 2D 图形。
  #+BEGIN_SRC html
      <!DOCTYPE html>
      <meta charset="utf-8">
      <title>HTML5</title>
      <link rel="alternate" type="application/atom+xml" href="https://github.com/diveintomark/diveintohtml5/commits/master.atom">
      <link rel="stylesheet" href="screen.css">
      <style>
        h1:before{content:''}
        h1,h2,h3{padding:0;margin:0;border:0;line-height:128px;text-align:center;clear:both}
        h1{margin-top:128px;font-size:72px;text-transform:uppercase}
        h2{font-size:48px}
        ol{margin:1em 0 0 0;padding:0}
        li{clear:both;width:100%;margin:0 0 1em 0;padding:0;overflow:hidden}
        .title,.number{background:#fff}
        .title{float:left;padding-right:3px}
        .number{margin:0;float:right;padding-left:3px}
        .f{margin-top:6.224em}
    </style>
      <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="mobile.css">
      <link rel="prefetch" href="introduction.html">
      <hgroup>
        <h1>Dive Into HTML5</h1>
        <h2>by<br>Mark Pilgrim</h2>
        <h3>with contributions from the community</h3>
      </hgroup>
    <p class="a rotatedFloralHeartBullet">
    <p class="f">Dive Into <abbr>HTML5</abbr> elaborates on a hand-picked selection of features from the 
      <a href="http://www.whatwg.org/html5">HTML5</a> 
      specification and other fine standards. We encourage you to
      <a href="//www.amazon.com/HTML5-Up-Running-Mark-Pilgrim/dp/0596806027">buy the printed work</a> 
      &mdash; Mark Pilgrim&rsquo;s artfully titled &ldquo;HTML5: Up 
      <i class="baa">&amp;</i> 
      Running&rdquo; &mdash; published on paper by O&rsquo;Reilly, under the Google Press imprint. Your kind and sincere
      <a href="about.html">feedback is always welcome</a>
      , and this work shall remain online under the 
      <a rel="license" href="//creativecommons.org/licenses/by/3.0/">CC-BY-3.0 license</a>.
    <p>This particular edition of Dive Into HTML5 is advanced by
      <a href="//github.com/diveintomark?tab=members">the diveintomark team</a>.
      <h3>Table of Contents</h3>

      <!-- toc -->
      <ol>
        <li><a href="introduction.html">Introduction: Five Things You Should Know About <abbr>HTML5</abbr></a>
        <li><a href="past.html">A Quite Biased History of <abbr>HTML5</abbr></a>
        <li><a href="detect.html">Detecting <abbr>HTML5</abbr> Features: It&rsquo;s Elementary, My Dear Watson</a>
        <li><a href="semantics.html">What Does It All Mean?</a>
        <li><a href="canvas.html">Let&rsquo;s Call It a Draw(ing Surface)</a>
        <li><a href="video.html">Video in a Flash (Without That Other Thing)</a>
        <li><a href="geolocation.html">You Are Here (And So Is Everybody Else)</a>
        <li><a href="storage.html">A Place To Put Your Stuff</a>
        <li><a href="offline.html">Let&rsquo;s Take This Offline</a>
        <li><a href="forms.html">A Form of Madness</a>
        <li><a href="extensibility.html">&ldquo;Distributed,&rdquo; &ldquo;Extensibility,&rdquo; And Other Fancy Words</a>
        <li><a href="history.html">Manipulating History for Fun <i>&amp;</i> Profit</a>
        <li class="app"><a href="everything.html">The All-In-One Almost-Alphabetical Guide to Detecting Everything</a>
        <li class="app"><a href="peeks-pokes-and-pointers.html"><abbr>HTML5</abbr> Peeks, Pokes and Pointers</a>
      </ol>
    <!-- /toc -->

    <p class="a rotatedFloralHeartBullet">
    <p class="c">&ldquo;If you&rsquo;re good at something, never do it for free.&rdquo; <span class="u">&mdash;</span><cite>The Joker</cite><br>(but that doesn&rsquo;t mean you should keep it to yourself)
    <p class="c">Copyright MMIX&ndash;MMXI <a href="about.html">Mark Pilgrim</a>
    <form action="http://www.google.com/cse"><div><input type="hidden" name="cx" value="017884302975346027366:bgclqh8nvse"><input type="hidden" name="ie" value="UTF-8"><input type="search" name="q" size="25" placeholder="powered by Google&trade;">&nbsp;<input type="submit" name="sa" value="Search"></div></form>
    <script src="j/jquery.js"></script>
    <script src="j/dih5.js"></script>
    <script>
    $(function() {
      $("ol").css("list-style", "none");
      $("li").each(function(i) {
        var num = i;
        if ($(this).hasClass("app")) {
          num = String.fromCharCode(53+num);
        }
        $(this).wrapInner('<span class="title"></span>').append('<span class="number">'+num+'</span>').css("background", "#fff url(i/dot.png) repeat-x 0 0.8em");
      });
    });
    window._gaq=[['_setAccount','UA-26147692-1'],['_setDomainName', 'diveintohtml5.info'],['_setAllowHash', false],['_trackPageview'],['_trackPageLoadTime']];(function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.src='//www.google-analytics.com/ga.js';s.parentNode.insertBefore(g,s)}(document,'script'));
    </script>
  #+END_SRC
  #+BEGIN_SRC html
        <!DOCTYPE html> 声明为 HTML5 文档
      <html> 元素是 HTML 页面的根元素
      <head> 元素包含了文档的元（meta）数据
      <title> 元素描述了文档的标题
      <body> 元素包含了可见的页面内容
      <h1> 元素定义一个大标题
      <p> 元素定义一个段落
  #+END_SRC
  #+BEGIN_SRC js
        <canvas>
    var c=document.getElementById("myCanvas");
    var ctx=c.getContext("2d");
    ctx.fillStyle="#FF0000";
    ctx.fillRect(0,0,150,75);

  #+END_SRC
** svg
   #+BEGIN_SRC html
        <svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="190">
       <polygon points="100,10 40,180 190,60 10,60 160,180"
       style="fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;">
        </svg>
   #+END_SRC
** MathML 要浏览器支持
   #+BEGIN_SRC html
 <math xmlns="http://www.w3.org/1998/Math/MathML">
         <mrow>
            <msup><mi>a</mi><mn>2</mn></msup>
            <mo>+</mo>
				
            <msup><mi>b</mi><mn>2</mn></msup>
            <mo>=</mo>
				
            <msup><mi>c</mi><mn>2</mn></msup>
         </mrow>
      </math>

   #+END_SRC
** 多媒体
*** <audio>支持 MP3,Wav,Ogg
    #+BEGIN_SRC 
    <audio controls>
    <source src="horse.ogg" type="audio/ogg">
    <source src="horse.mp3" type="audio/mpeg">
    您的浏览器不支持 audio 元素。
    </audio>
    #+END_SRC
    属性
    autoplayNew 	autoplay 	如果出现该属性，则音频在就绪后马上播放。
    controlsNew 	controls 	如果出现该属性，则向用户显示音频控件（比如播放/暂停按钮）。
    loopNew 	    loop 	如果出现该属性，则每当音频结束时重新开始播放。
    mutedNew 	    muted 	如果出现该属性，则音频输出为静音。
    preloadNew 	  auto
    metadata
    none 	        规定当网页加载时，音频是否默认被加载以及如何被加载。
    srcNew 	      URL 	规定音频文件的 URL。
*** <video>
*** <source>定义多媒体资源 <video> 和 <audio>
** 拖放（Drag 和 Drop）
   #+BEGIN_SRC html
<!DOCTYPE HTML> 
<html> 
<head> 
<meta charset="utf-8"> 
<title>我是程序员教程(book.wscxy.com)</title> 
<style type="text/css"> 
#div1 {width:350px;height:70px;padding:10px;border:1px solid #aaaaaa;} 
</style> 
<script> 
function allowDrop(ev) 
{ 
    ev.preventDefault(); 
} 

function drag(ev) 
{ 
    ev.dataTransfer.setData("Text",ev.target.id); 
} 

function drop(ev) 
{ 
    ev.preventDefault(); 
    var data=ev.dataTransfer.getData("Text"); 
    ev.target.appendChild(document.getElementById(data)); 
} 
</script> 
</head> 
<body> 

<p>拖动 book.wscxy.com 图片到矩形框中:</p> 

<div id="div1" ondrop="drop(event)" ondragover="allowDrop(event)"></div> 
<br> 
<img id="drag1" src="http://book.wscxy.com/Uploadsk/images/logo.png" draggable="true" ondragstart="drag(event)" width="336" height="69"> 

</body> 
</html>

   #+END_SRC
   首先，为了使元素可拖动，把 draggable 属性设置为 true ：
<img draggable="true">

ondragstart 属性调用了一个函数，drag(event)，它规定了被拖动的数据。
dataTransfer.setData() 方法设置被拖数据的数据类型和值：
function drag(ev)
{
    ev.dataTransfer.setData("Text",ev.target.id);
}
** Geolocation（地理定位）
** section
   <section> 标签定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。
** <article> 标签定义独立的内容
** aside
   <aside> 标签定义页面主区域内容之外的内容（比如侧边栏）。
   aside 标签的内容应与主区域的内容相关.
** header
   <header>元素描述了文档的头部区域
   <header>元素注意用于定义内容的介绍展示区域.
   在页面中你可以使用多个<header> 元素.
** HTML5 <figure> 和 <figcaption> 元素
<figure>标签规定独立的流内容（图像、图表、照片、代码等等）。
<figure> 元素的内容应该与主内容相关，但如果被删除，则不应对文档流产生影响。
<figcaption> 标签定义 <figure> 元素的标题.
<figcaption>元素应该被置于 "figure" 元素的第一个或最后一个子元素的位置。
** Web SQL 数据库

* css
** 属性
*** 背景
    background 	          在一行中设置所有的背景属性 
    backgroundAttachment 	设置背景图像是否固定或随页面滚动 
    backgroundColor 	    设置元素的背景颜色 
    backgroundImage 	    设置元素的背景图像 
    backgroundPosition 	  设置背景图像的起始位置 
    backgroundPositionX 	设置backgroundPosition属性的X坐标 
    backgroundPositionY 	设置backgroundPosition属性的Y坐标 
    backgroundRepeat 	    设置是否及如何重复背景图像
*** 边框和边距
    border             	在一行设置四个边框的所有属性 	
    borderBottom  	    在一行设置底边框的所有属性 
    borderBottomColor 	设置底边框的颜色 	
    borderBottomStyle 	设置底边框的样式 	
    borderBottomWidth 	设置底边框的宽度 	
    borderColor     	  设置所有四个边框的颜色 (可设置四种颜色) 	
    borderLeft       	  在一行设置左边框的所有属性 
    borderLeftColor 	  设置左边框的颜色 	
    borderLeftStyle 	  设置左边框的样式 	
    borderLeftWidth 	  设置左边框的宽度 	
    borderRight 	      在一行设置右边框的所有属性
    borderRightColor 	  设置右边框的颜色 	
    borderRightStyle 	  设置右边框的样式 	
    borderRightWidth 	  设置右边框的宽度 	
    borderStyle 	      设置所有四个边框的样式 (可设置四种样式) 
    borderTop 	        在一行设置顶边框的所有属性 
    borderTopColor 	    设置顶边框的颜色 		
    borderTopStyle 	    设置顶边框的样式 		
    borderTopWidth 	    设置顶边框的宽度 		
    borderWidth 	      设置所有四条边框的宽度 (可设置四种宽度) 
    margin 	            设置元素的边距 (可设置四个值)
    marginBottom        设置元素的底边距
    marginLeft 	        设置元素的左边距 	
    marginRight 	      设置元素的右边据
    marginTop 	        设置元素的顶边距 	
    outline 	          在一行设置所有的outline属性 
    outlineColor 	      设置围绕元素的轮廓颜色 	
    outlineStyle 	      设置围绕元素的轮廓样式 	
    outlineWidth 	      设置围绕元素的轮廓宽度 	
    padding 	          设置元素的填充 (可设置四个值)
    paddingBottom       设置元素的下填充
    paddingLeft 	      设置元素的左填充
    paddingRight 	      设置元素的右填充
    paddingTop 	        设置元素的顶填充 	
*** 布局
    clear    	        设置在元素的哪边不允许其他的浮动元素 	
    clip      	      设置元素的形状 	
    content 	        设置元信息 	
    counterIncrement 	设置其后是正数的计数器名称的列表。其中整数指示每当元素出现时计数器的增量。默认是1。
    counterReset 	    设置其后是正数的计数器名称的列表。其中整数指示每当元素出现时计数器被设置的值。默认是0。
    cssFloat 	        设置图像或文本将出现（浮动）在另一元素中的何处。 	
    cursor   	        设置显示的指针类型 
    direction 	      设置元素的文本方向 	
    display 	        设置元素如何被显示 	inherit父的属性继承
    height 	          设置元素的高度 
    markerOffset 	    设置marker box的principal box距离其最近的边框边缘的距离
    marks 	          设置是否cross marks或crop marks应仅仅被呈现于page box边缘之外 	
    maxHeight 	      设置元素的最大高度 	
    maxWidth 	        设置元素的最大宽度 	
    minHeight 	      设置元素的最小高度 	
    minWidth 	        设置元素的最小宽度 	
**** overflow 	规定如何处理不适合元素盒的内容 	
     overflow-x:      hidden;隐藏水平滚动条
     verticalAlign 	  设置对元素中的内容进行垂直排列 
     visibility 	    设置元素是否可见 
     width 	          设置元素的宽度
*** 列表
    listStyle 	在一行设置列表的所有属性 
    listStyleImage 	把图像设置为列表项标记 
    listStylePosition改变列表项标记的位置 	
    listStyleType 	设置列表项标记的类型
*** 定位
    bottom 	设置元素的底边缘距离父元素底边缘的之上或之下的距离 	
    left       	置元素的左边缘距离父元素左边缘的左边或右边的距离 	
    position 	把元素放置在static, relative, absolute 或 fixed 的位置 	
    right 	            置元素的右边缘距离父元素右边缘的左边或右边的距离 	
    top 	            设置元素的顶边缘距离父元素顶边缘的之上或之下的距离 	
    zIndex 	设置元素的堆叠次序
*** 文本
    color 	设置文本的颜色 
    font 	在一行设置所有的字体属性 
    fontFamily 	设置元素的字体系列。
    fontSize 	设置元素的字体大小。
    fontSizeAdjust 	设置/调整文本的尺寸 
    fontStretch 	设置如何紧缩或伸展字体
    fontStyle 	设置元素的字体样式 
    fontVariant 	用小型大写字母字体来显示文本 
    fontWeight 	设置字体的粗细 
    letterSpacing 	设置字符间距 
    lineHeight 	设置行间距 
    quotes 	设置在文本中使用哪种引号 
    textAlign 	排列文本 
    textDecoration 	设置文本的修饰 
    textIndent 	缩紧首行的文本 
    textShadow 	设置文本的阴影效果
    textTransform 	对文本设置大写效果 
    whiteSpace 	设置如何设置文本中的折行和空白符 	
    wordSpacing 	设置文本中的词间距 
*** Table 
    borderCollapse 	设置表格边框是否合并为单边框，或者像在标准的HTML中那样分离。 
    borderSpacing 	设置分隔单元格边框的距离 
    captionSide 	设置表格标题的位置 	
    emptyCells 	设置是否显示表格中的空单元格
    tableLayout 	设置用来显示表格单元格、行以及列的算法
** 伪元素
:first-line 伪元素 "first-line" 伪元素用于向文本的首行设置特殊样式。
:first-letter 伪元素 "first-letter" 伪元素用于向文本的首字母设置特殊样式：
:before 伪元素 ":before" 伪元素可以在元素的内容前面插入新内容。
#+BEGIN_SRC css
:link	a:link	选择所有未访问链接
:visited	a:visited	选择所有访问过的链接
:active	a:active	选择正在活动链接
:hover	a:hover	把鼠标放在链接上的状态
:focus	input:focus	选择元素输入后具有焦点
:first-letter	p:first-letter	选择每个<p> 元素的第一个字母
:first-line	p:first-line	选择每个<p> 元素的第一行
:first-child	p:first-child	选择器匹配属于任意元素的第一个子元素的 <]p> 元素
:before	p:before	在每个<p>元素之前插入内容
:after	p:after	在每个<p>元素之后插入内容
:lang(language)	p:lang(it)	为<p>元素的lang属性选择一个开始值
#+END_SRC
* 响应式 Web 设计 - Viewport
  手机浏览器 把页面放在一个虚拟的"窗口" viewport中，通常比屏幕宽，就不用把网页挤到很小的窗口中
** 设置Viewport 
<meta name="viewport" content="width=device-width, initial-scale=1.0">
#+BEGIN_SRC 
width：控制 viewport 的大小，可以指定的一个值，如果 600，或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。
height：和 width 相对应，指定高度。
initial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例。
maximum-scale：允许用户缩放到的最大比例。
minimum-scale：允许用户缩放到的最小比例。
user-scalable：用户是否可以手动缩放。
#+END_SRC
** 网格 就像装修房子的时候打格子，每个格子做为什么，由大到小设计
  通常12列，宽度100%
#+BEGIN_SRC css
           ,* {
              box-sizing: border-box;
           }
          首先确保所有的 HTML 元素都有 box-sizing 属性且设置为 border-box。
          确保边距和边框包含在元素的宽度和高度间。
        .menu {
            width: 25%;
            float: left;
        }
        .main {
            width: 75%;
            float: left;
        }
       设置其他 桌面
     .col-1 {width: 8.33%;}
     .col-2 {width: 16.66%;}
     .col-3 {width: 25%;}
     .col-4 {width: 33.33%;}
     .col-5 {width: 41.66%;}
     .col-6 {width: 50%;}
     .col-7 {width: 58.33%;}
     .col-8 {width: 66.66%;}
     .col-9 {width: 75%;}
     .col-10 {width: 83.33%;}
     .col-11 {width: 91.66%;}
     .col-12 {width: 100%;}
    这种方式，就不用单独设计元素的宽度了
  @media only screen and (max-width: 768px) {
      /* For mobile phones: */
      [class*="col-"] {
          width: 100%;
      }
  }
  媒体查询，每列都是100%
#+END_SRC
