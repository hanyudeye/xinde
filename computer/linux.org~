* 操作系统
** !抽象设备与环境
** 多用户
*** 用户和组
** 多任务

* 文件系统
** 系统结构
** 硬链接和软链接
** 文件类型
** 文件描述符和索引节点
** 访问权限和文件模式
*** 用户（拥有者） 组 其他
*** r w x suid sgid 

** 文件操作的系统调用
*** 打开文件
*** 访问文件
*** 关闭文件
*** 更名及删除

* linux 内核
***   内核的引导
**** BIOS
0xfffffff0->OS系统利用基本IO初始化，保护模式不再使用->0x7c00
**** bootloader 
: 载入/boot 目录下的内核文件
: 小内核zImage -> 0x00010000
: 大内核bzImage ->0x00100000
: 把位于×zImage 偏移为0x200 的setup() 拷贝到0x00090200,并跳转到此
**** setup() 初始化硬件，为内核执行建立环境
1. 调用BIOS,建立系统物理内存布局表
2.设置键盘重复延时和速率
3.初始化视频卡
4.检查IBM微通道总线（MCA)
5.检查ps/2指针设备
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.跳转到startup_32()汇编语言函数 (在 0x1000 or 0x10000)
**** startup_32() 配置32位模式
**** start_kernel() 初始化内核
***** 调用sched_init() 初始化调度程序
***** build_all_zonelists() 初始化内存管理区
***** page_alloc_init() 初始化伙伴系统分配程序
***** trap_init()  init_IRQ
***** kernel_thread()->sbin/init
**** 系统初始化
: 确定运行级别
: 在init的配置文件中有这么一行： si::sysinit:/etc/rc.d/rc.sysinit　它调用执行了/etc/rc.d/rc.sysinit，而rc.sysinit是一个bash shell的脚本，它主要是完成一些系统初始化的工作，rc.sysinit是每一个运行级别都要首先运行的重要脚本
**** 建立终端
: rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。
: init接下来会打开6个终端，以便用户登录系统。在inittab中的以下6行就是定义了6个终端：
#+BEGIN_SRC 
      1:2345:respawn:/sbin/mingetty tty1
      2:2345:respawn:/sbin/mingetty tty2
      3:2345:respawn:/sbin/mingetty tty3
#+END_SRC
**** 用户登录系统
   （1）命令行登录
   （2）ssh登录
   （3）图形界面登录
