* Emacs [editor] can DIY for yourself
** concepts
*** Screen
**** frame 框架
menu/scroll bar/mode line/[tool bar]/the window(show buffer content)/echo area
**** point 
**** Echo area  === Minibuffer (when input)
**** Mode line
**** menu bar
*** User Input
**** input events
*** Keys
**** keys and commands
*** Commands
*** Initialization File 
**** `~/.emacs',or `~/.emacs.el',or `~/.emacs.d/init.el'
*** lisp libraries
**** load-path
** 基本编缉命令 
*** Basic editing commands
*** The Minibuffer 显示或输入数据
**** editing in the minibuffer
*** completion
** 修改命令 
** 高级特性
*** Modes
*** Input mode
**** 输入法切换 `C-\' (toggle-input-method')
*** 编码
**** 查看文件当前编码/显示文件编码顺序
describe-coding-system
**** 编码设置
(setq default-buffer-file-coding-system 'utf-8)  默认buffer编码是utf-8,(写文件)
(prefer-coding-system 'utf-8)   指定文件编码,此时buffer新建和读取
都默认是utf-8,也可以M-x prefer-coding-system 只执行一次
**** 匹配文件编码
***** 保存文件时采用的编码C-x <RET> f coding <RET>
***** 接下来用什么编码编写文件 C-x <RET> c coding <RET>
***** 重新用编码载入文件 C-x <RET> r coding <RET>
***** 一块区域重新编码 M-x recode-region <RET> rightcoding <RET> wrongcoding
* emacs 功能强大的全屏文本编辑器
** emacs(选项)(参数)
+<行号>：启动emacs编辑器，并将光标移动到制定行号的行；
-q：启动emacs编辑器，而不加载初始化文件；
-u<用户>：启动emacs编辑器时，加载指定用户的初始化文件；
-t<文件>：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；
-f<函数>：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；
-l<lisp代码文件>：加载指定的lisp代码文件；
-batch：以批处理模式运行emacs编辑器。

M-r : 将光标移动到屏幕中间那行
M-e : 移到句尾
M-{ : 向上移动一段
C-left : 向后移动一个单词
C-down : 向后移动一段
M-x goto-line : 移动到某一行

Buffer 相关
C-x s : 保存所有未保存的buffer，会提示你是否需要保存

拷贝与粘贴
M-space (redefined): 设置mark; C-@ 是默认命令
C-x r k : 执行矩形区域的剪切 [范围是光标处到缓冲头的一个矩形],可以选择区块
C-x r y : 执行矩形区域的粘贴

窗口操作
C-x 5 1/2/3/0 : 对frame类似的操作
C-x > : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）

搜索和替换
M-% : 查询替换，也就是替换前会询问一下
M-x replace-string : 普通替换

Tags
M-! etags .c .h : 创建TAGS文件
M-. : 跳到tag所在位置
M-x list-tags : 列出tags

书签
C-x r m : 设置书签bookmark
C-x r b : 跳到bookmark处

帮助
C-h C-f : 查看一个函数的info，非常有用

其它
C-M-\ : 对选中区域，按照某种格式(比如C程序)进行格式化
C-x h : 全部选中
M-! : 执行外部shell命令
M-x shell : 模拟shell的buffer
M-x term : 模拟terminal, C-c k 关闭terminal
C-x C-q : 修改buffer的只读属性

C-x i 插入文件
C-/ 撤销

注释
多行注释 C-x r t
反注释	 C-x r k
关闭窗口 C-x 0
窗口移动 M-x windmove-left /right /down
替换windows换行M-x replace-string RET C-q C-m RET RET

调试
gdb –annotate=3 test
无论上面的那种情况，都出现了一个现象：程序的输出不能显示，只有在程序退出的时候才显示出来。
gdb-many-windows 切换单窗格/多窗格模式
gdb-restore-windows 恢复窗格布局	
** Emacs 插件	
# ido, 类似于helm,和helm各有千秋我都用,五五开,
# imenu 显示当前文件函数列表,可以直接跳转到那去,完全可配置
# flymake 实时语法检查,通吃所有语言
# flyspell 拼写检查,爱死了,是我见过的所有拼写检查最强大,如果你知道如何配置.
*** emacs-w3m
     C-x C-w 保存
     q	关闭窗口
     Q	直接离开
     U	打开 URL
     C-x-k	关闭当前标签页
     G	在标签页中打开一个网址
     B	后退
     ESC I	图片另存为 
     =   	显示当前页面属性 
     N	前进
     R	刷新
     F   	提交表单 
     a	添加当前页到书签
     ESC a	添加该URL到书签
     v   显示书签
     E   编辑书签
     C-k 删除书签
     C-_ 撤消书签
     M   用外部浏览器打开链接
     C-c C-k	停止载入

* info 树的导航
** node
n next node (相对于当前(自身)节点)
p 
^ 
d  <root node == info node>
<  file top node 
>  file last node 
[  backward node
] forward node 
f Follow a cross reference. 文件之间的 交叉参考，交叉引用
l Move back in history to the last node you were at. 历史记录中跳转
r Move forward in history to the node you returned from after using l.
L Go to menu of visited nodes. 历史列表
T Go to table of contents of the current Info file. 把info 文件用列表形式展示
s 搜索
SPC scroll forward
DEL scroll backward
* elisp
** 数据
*** 数据描述
*** 数据区分
*** 数据类型
**** 基本类型
***** Numbers
integer
#b101100 ⇒ 44(二进制)
#o54 ⇒ 44(八进制)
#x2a ⇒ 44(十六进制)
#24r1b ⇒ 35(RADIXrINTEGER) #表示 b+INTEGER*RADIX 
most-positive-fixnum
most-negative-fixnum
float
-0.01
非法求值 返回 NaN (/ 0.0 0.0)
positive infinity
     1.0e+INF
negative infinity
     `-1.0e+INF'
Not-a-number
     `0.0e+NaN' or `-0.0e+NaN'.
****** 方法
floatp
integerp
numberp 
natnump 是否自然数
zerop
eq(同一类型,不光数字) / = (number类型)
/= 整除
< > <= >=
max min
****** 转换
truncate 截断小数部分,向下转换
floor 基数,和上面差不多
ceiling 向上转换
****** 算数操作
(setq val (2+  3))
(+ val 5)
****** 位操作
(lsh 5 1) => 10 (lsh -1 -2)
(ash 5 1) =>算数左移(ash -1 -2)
***** strings
****** 方法
(make-string 5 ?x) =>"xxxxx"
(string ?a ?b ?c) =>"abc"
(substring "abcdefg" 0 3) =>"abc"
(concat "abc" "-def") =>"abc-def"
(split-string "   two words  ")=>("two" "words")
(char-equal ?x ?x) =>t
(string= "abc" "abc")=>t
***** lists
****** 方法
(consp '(3 3))=>t 组合体
(consp (cons 3 5))=>t 
(atom '(3 3)) =>t 原子
(listp '(1)) =>t  (listp '(1 3 3)) nlistp
(null '()) =>t 
(car '(a b c)) cdr (car-safe object) (cdr-safe object)
(pop listname) (nth n list) (nth 2 '(1 2 3 4))=>3
(nthcdr n list) (nthcdr 1 '(1 2 3 4))=>(2 3 4)
(list 1 2 '(3 4) 5) (make-list 3 'pig)
(append '(x y) 'z) =>( x y . z)
***** sequences
***** 方法
sequencep (length sequence)
(elt [1 2 3 4] 2) =>3 (element)
(arrayp [a])
(make-vectory length object)
**** 类型自定义,lisp knows it's 类型,不会执行
**** 特定类型
***** editing types
****** buffer
*** Symbols a unique name
**** 方法
symbolp
(make-symbol "foo")
(get symbol property)
(put symbol property value)
**** variable (当符号用于操作求值时)
(setq a 123) =>123 
(eval 'a)=>123
a =>123 
***** global variables
(setq x '(a b))
***** constant variables 
nil
***** local variables
(setq y 2)
(let ((y 1) (z y)) (list y z))
***** void variables
**** form
(fset 'first 'car)
** 方法
*** functions
**** lambda expression
**** primitive 原始的
written in C. primitives
**** special form ( evaluate only some of the arguments)
if while and 
**** macros
**** command
能被'command-execute'调用的对象
键盘 "bound"能调用
**** closure 闭包
**** byte-code function 被编译的函数对象

**** autoload object (lisp library)
as "eval-buffer"
***** load function
autoload /require/load
*** function test
functionp
subrp object  :test a built-in funciton
(symbol-function 'message)
** 控制结构
*** if progn cond and  or while
** 排错
catch throw
error 
** debugging
** keymaps
*** key sequences 
* emacs basic
** files buffers modes display commands quit help 
* emacs 
** Chapter 1.   Emacs Basics
*** Section 1.2.   Understanding Files and Buffers
*** Section 1.3.   A Word About Modes
Majode
Texundamental /View /Shell  /Outline /Indented text /Paragraph indent text /Picture 
HtmML/LateX/Compilation/cc/Java/Perl/SQL/Emacs Lisp/Lisp/Lisp interaction 
Minode
autll(enables word wrap)/Overwrite(replaces characters instead of inserting them)/Auto-save/Isearch/Flyspell/flyspell prog/
abbparagraph indent/refill/Artist(creating ASCII drawings using the mouse/ISO accents/Font lock(highlighting text)
comtion /Enriched/Info/VC (various version control systems)

*** Section 1.4.   Starting Emacs
*** Section 1.5.   About the Emacs Display
***e mode line
*** Section 1.6.   Emacs Commands
*** Section 1.7.   Opening a File
insfile/find file
C-x                     find-alternate-file
*** Section 1.8.   Saving Files
wriile/save-buffer
*** Section 1.9.   Leaving Emacs
savffers-kill-terminal
*** Section 1.10.  Getting Help
describe-function/describe-key/describe-variable
** Chapter 2.   Editing
*** Section 2.1.   Moving the Cursor
refill-mode(不满一行80个字就要凑满) auto-fill fill-paragraph fill-region
 C-f              forward-char                 Move forward one character (right).
 C-b              backward-char                Move backward one character (left).
 C-p              previous-line                Move to previous line (up).
 C-n              next-line                    Move to next line (down).
 M-f              forward-word                 Move one word forward .
 M-b              backward-word                Move one word backward .
 C-a              beginning-of-line            Move to beginning of line.
 C-e              end-of-line                  Move to end of line.
 M-e              forward-sentence             Move forward one sentence.
 M-a              backward-sentence            Move backward one sentence.
 M-}              forward-paragraph            Move forward one paragraph.
 M-{              backward-paragraph           Move backward one paragraph.
 C-v              scroll-up                    Move forward one screen.
 M-v              scroll-down                  Move backward one screen.
 C-x ]            forward-page                 Move forward one page.
 C-x [            backward-page                Move backward one page.
 M-<              beginning-of-buffer    Move to beginning of file.
 M->              end-of-buffer          Move to end of file.
 (none )          goto-line              Go to line n of file.
 (none )          goto-char              Go to character n of file.
 C-l              recenter               Redraw screen with current line in the center.
 M- n             digit-argument         Repeat the next command n times.
 C-u n            universal-argument     Repeat the next command n times (four times if you omit n)
*** Section 2.2.   Deleting Text
kill-ring
C-d             delete-char                 Delete character under cursor.
Del             delete-backward-char        Delete previous character.
M-d             kill-word                   Delete next word.
M-Del           backward-kill-word          Delete previous word.
C-k             kill-line                   Delete from cursor to end of line.
M-k             kill-sentence               Delete next sentence.
C-x Del         backward-kill-sentence      Delete previous sentence.
C-y             yank                        Restore what you've deleted.
C-w Edit    Cut kill-region                 Delete a marked region (see next section).
(none )         kill-paragraph              Delete next paragraph.
(none )         backward-kill-paragraph     Delete previous paragraph.

*** Section 2.3.   Marking Text to Delete, Move, or Copy
 C-@ or C-Space        set-mark-command                 Mark the beginning (or end) of a region.
 C-x C-x               exchange-point-and-mark          Exchange location of cursor and mark.
 C-w                   kill-region                      Delete the region.
 C-y                   yank                             Paste most recently killed or copied text.
 M-w                   kill-ring-save                   Copy the region (so it can be pasted with C-y).
 M-h                   mark-paragraph                   Mark paragraph.
 C-x C-p               mark-page                        Mark page.
 C-x h                 mark-whole-buffer                Mark buffer.
 M-y                   yank-pop                         After C-y , pastes earlier deletion.

*** Section 2.4.   Emacs and the Clipboard
*** Section 2.5.   Editing Tricks and Shortcuts
 C-t             transpose-chars                       Transpose two letters.
 M-t             transpose-words                       Transpose two words.
 C-x C-t         transpose-lines                       Transpose two lines.
 (none )         transpose-sentences                   Transpose two sentences.
 (none )         transpose-paragraphs                  Transpose two paragraphs.
 M-c             capitalize-word                       Capitalize first letter of word.
 M-u             upcase-word                           Uppercase word.
 M-l             downcase-word                         Lowercase word.
 Meta - M-c      negative-argument; capitalize-word    Capitalize previous word.
 Meta - M-u      negative-argument; upcase-word        Uppercase previous word.
 Meta - M-l      negative-argument; downcase-word      Lowercase previous word
*** Section 2.6.   Canceling Commands and Undoing Changes
 C-g             keyboard-quit                         Abort current command.
 C-x u           advertised-undo [8]                   Undo last edit (can be done repeatedly).
 C-_             undo                                  Undo last edit (can be done repeatedly).
 (none )         revert-buffer                         Restore buffer to the state it was in when the file was last saved (or auto-saved).
*** Section 2.7.   Making Emacs Work the Way You Want
(define-key global-map "\C-x\C-u" 'undo)
** Chapter 3.   Search and Replace
*** Section 3.1.    Different Kinds of Searches
*** Section 3.2.   Search and Replace
C-M-s Enter    Search     re-search-forward          Search for a regular expression
C-M-r Enter    Search     re-search-backward         Search for a regular expression
C-M-s Edit     Search     isearch-forward-regexp     regular expression.
C-M-% Edit     Replace    query-replace-regexp       Query-replace a regular expression.
*** Section 3.3.   Checking Spelling Using Ispell
ispell-change-directory
ispell-buffer
ispell-word
ispell-complete-word
ispell-region
flyspell-buffer
*** Section 3.4.   Word Abbreviations
      (setq-default abbrev-mode t)
      (read-abbrev-file "~/.abbrev_defs")
      (setq save-abbrevs t)

** Chapter 4.    Using Buffers, Windows, and Frames
*** Section 4.1.    Understanding Buffers, Windows, and Frames
*** Section 4.2.    Working with Multiple Buffers
*** Section 4.3.   Working with Windows
*** Section 4.4.   Working with Frames
*** Section 4.5.   More About Buffers
C-x C-q            Read-Only Buffers
*** Section 4.6.   More About Windows
balance-windows    C-x +
compare-windows
*** Section 4.7.    Holding Your Place with Bookmarks
** Chapter 5.    Emacs as a Work Environment
*** Section 5.1.    Executing Commands in Shell Buffers
*** Section 5.2.    Using Dired, the Directory Editor
 A                dired-do-search                                   Do a regular expression search on marked files;
 B                dired-do-byte-compile
 C                dired-do-copy    
 d                dired-flag-file-deletion
 D                dired-do-delete     Query for immediate deletion.
 e                dired-find-file     Edit file.
 f                dired-advertised-find-file
 g                revert-buffer       Reread the directory from disk.
 G                dired-do-chgrp      Change group permissions.
 h                describe-mode       Display descriptive help text for Dired.
 H                dired-do-hardlink   Create a hard link to this file;                                           
 i                dired-maybe-insert-subdir         
 k                dired-do-kill-lines Remove line from display (don't delete file).
 L                dired-do-load       Load file.
 m or * m Mark    dired-mark          Mark with * .
 M                dired-do-chmod      Use chmod command on this file.
 n                dired-next-line     Move to next line.
 o                dired-find-file-other-window
 C-o              dired-display-file  Find file in another window; don't move there.
 O                dired-do-chown      Change ownership of file.
 p                dired-previous-line
 P                dired-do-print      Print file.
 q                quit-window         Quit Dired.
 Q                dired-do-query-replace        Query replace string in marked files.
 R                dired-do-rename    Rename file.
 S                dired-do-symlink
 s                dired-sort-toggle-or-edit
 t                dired-toggle-marks
 u                dired-unmark       Remove mark.
 v                dired-view-file    View file (read-only).
 w                dired-copy-filename-as-kill
 x                dired-do-flagged-delete
 y                dired-show-file-type   Display information on the type of the file using the file command.
 Z                dired-do-compress      Compress or uncompress file.
 ~                dired-flag-backup-files Flag backup files for deletion; C-u ~ removes flags
 #                dired-flag-auto-save-files            Flag auto-save files for deletion; C-u # removes flags.
 &                dired-flag-garbage-files    Flag "garbage" files for deletion.
 .                dired-clean-directory       Flag numbered backups for deletion (if any).
 =                dired-diff                  Compare this file to another file (the one at the mark).
 M-=              dired-backup-diff           Compare this file with its backup file.
 !                dired-do-shell-command      Ask for shell command to execute on the current
 +                dired-create-directory      Create a directory.
 >                dired-next-dirline          Move to next directory.
 <                dired-prev-dirline          Move to previous directory.
 ^                dired-up-directory          Find the parent directory in a new Dired buffer.
 $                dired-hide-subdir           Hide or show the current directory or                
 M-$              dired-hide-all              Hide all subdirectories, leaving only their names;
C-M-n             dired-next-subdir   Move to next subdirectory (if you've inserted subdirectories using i ).
C-M-p             dired-prev-subdir  Move to previous subdirectory (if you've inserted subdirectories using i ).                 
C-M-u             dired-tree-up                  If you've inserted subdirectories using i , move to the parent directory in this buffer.
\**                dired-mark- executables
\* / Mark    dired-mark-directories
\* @ Mark         dired-mark-symlinks
M-}                 dired-next-marked-file
% d Regexp           dired-flag-files-regexp 
% g Regexp           dired-mark-files-containing-regexp
% l Regexp            dired-downcase  
% R Regexp           dired-do-rename-regexp                
% u Regexp           dired-upcase     
*** Section 5.3.   Printing from Emacs
print-buffer lpr-bufferf
print-region lpr-region
ps-print-buffer-with-faces   postscript file
*** Section 5.4.    Reading Manpages in Emacs
man
*** Section 5.5.    Using Time Management Tools
calendar
(setq calendar-week-start-day 1) weeks start on Monday ,default on Sunday
 C-f                           calendar-forward-day          Move forward a day.
 C-b                           calendar-backward-day         Move backward a day.
 C-n                           calendar-forward-week         Move forward a week.
 C-p                           calendar-backward-week        Move backward a week.
 M-}                           calendar-forward-month        Move forward one month.
 M-{                           calendar-backward-month     Move backward a month.
 C-x ]                                calendar-forward-year         Move forward a year.
 C-x [                               calendar-backward-year        Move backward a year.
diary
(setq european-calendar-style 't)指定欧洲日历类型
** Chapter 6.   Writing Macros
*** Section 6.1.   Defining a Macro
*** Section 6.2.    Tips for Creating Good Macros
*** Section 6.3.    A More Complicated Macro Example
*** Section 6.4.   Editing a Macro
*** Section 6.5.   The Macro Ring
*** Section 6.6.    Binding Your Macro to a Key
*** Section 6.7.    Naming, Saving, and Executing Your Macros
*** Section 6.8.   Building More Complicated Macros
*** Section 6.9.    Executing Macros on a Region
*** Section 6.10.    Beyond Macros
** Chapter 7.    Simple Text Formatting and Specialized Editing
*** Section 7.1.   Using Tabs
*** Section 7.2.   Indenting Text
*** Section 7.3.   Centering Text
*** Section 7.4.   Using Outline Mode
*** Section 7.5.   Rectangle Editing
*** Section 7.6.   Making Simple Drawings
** Chapter 8.   Markup Language Support
 Section 8.1.   Comments
 Section 8.2.   Font-Lock Mode
 Section 8.3.   Writing HTML
 Section 8.4.   Writing XML
 Section 8.5.    Marking up Text for TEX and LATEX
Chapter 9.   Computer Language Support
 Section 9.1.    Emacs as an IDE
 Section 9.2.   Writing Code
 Section 9.3.    C and C++ Support
 Section 9.4.   Java Support
 Section 9.5.    The Java Development Environment for Emacs (JDEE)
 Section 9.6.   Perl Support
 Section 9.7.   SQL Support
 Section 9.8.   The Lisp Modes
Chapter 10.   Customizing Emacs
 Section 10.1.    Using Custom
 Section 10.2.    Modifying the .emacs File Directly
 Section 10.3.    Modifying Fonts and Colors
 Section 10.4.    Customizing Your Key Bindings
 Section 10.5.    Setting Emacs Variables
 Section 10.6.    Finding Emacs Lisp Packages
 Section 10.7.    Starting Modes via Auto-Mode Customization
 Section 10.8.    Making Emacs Work the Way You Think It Should
Chapter 11.   Emacs Lisp Programming
 Section 11.1.    Introduction to Lisp
 Section 11.2.    Lisp Primitive Functions
 Section 11.3.    Useful Built-in Emacs Functions
 Section 11.4.    Building an Automatic Template System
 Section 11.5.    Programming a Major Mode
 Section 11.6.    Customizing Existing Modes
 Section 11.7.    Building Your Own Lisp Library
Chapter 12.   Version Control
 Section 12.1.    The Uses of Version Control
 Section 12.2.    Version Control Concepts
 Section 12.3.    How VC Helps with Basic Operations
 Section 12.4.    Editing Comment Buffers
 Section 12.5.    VC Command Summary
 Section 12.6.    VC Mode Indicators
 Section 12.7.    Which Version Control System?
 Section 12.8.    Individual VC Commands
 Section 12.9.    Customizing VC
 Section 12.10.    Extending VC
 Section 12.11.     What VC Is Not
 Section 12.12.    Using VC Effectively
 Section 12.13.    Comparing with Ediff
Chapter 13.   Platform-Specific Considerations
 Section 13.1.    Emacs and Unix
 Section 13.2.    Emacs and Mac OS X
 Section 13.3.    Emacs and Windows
Chapter 14.   The Help System
 Section 14.1.    Using the Tutorial
 Section 14.2.    Help Commands
 Section 14.3.    Help with Complex Emacs Commands
 Section 14.4.    Navigating Emacs Documentation
 Section 14.5.   Completion
Appendix A.   Emacs Variables
Appendix B.    Emacs Lisp Packages
Appendix C.    Bugs and Bug Fixes
Appendix D.   Online Resources
 Appendix E. Quick Reference
