* 文件系统类型
** FAT12 格式软盘
   对于 FAT 文件系统，它没有 inode，每个 block 中存储着下一个 block 的编号。
   FAT12 是 DOS 时代就开始使用的文件系统（File System)，直到 2009 年仍然在软盘上使用。
*** 主磁盘结构
**** 引导扇区（Boot Sector）
     位于第一个扇区，在软盘上就是 0 柱面（磁道）0 磁头 1 扇区。
     引导扇区格式
  | 名称           | 偏移 | 长度 | 内容                                    | 软盘参考值             |
  | BS_jmpBoot     |    0 |    3 |                                         | jmp LABEL_START nop    |
  | BS_OEMName     |    3 |    8 | 厂商名                                  | 	'ForrestY'           |
  | BPB_BytsPerSec |   11 |    2 | 每扇区字节数 　                         | 	0x200（即十进制 512） |
  | BPB_SecPerClus |   13 |    1 | 每簇扇区 　                            | 	0x01                 |
  | BPB_RsvdSecCnt |   14 |    2 | Boot 记录占用多少扇区                    | 	0x01                 |
  | BPB_NumFATs    |   16 |    1 | 共有多少 FAT 表                           | 	0x02                 |
  | BPB_RootEntCnt |   17 |    2 | 根目录文件数最大值                      | 	0xE0（224）         |
  | BPB_TotSec16   |   19 |    2 | 扇区总数                                | 	0xB40（2880）        |
  | BPB_Media      |   21 |    1 | 介质描述符                              | 0xF0                   |
  | BPB_FATSz16    |   22 |    2 | 每 FAT 扇区数                             | 	0x09                 |
  | BPB_SecPerTrk  |   24 |    2 | 每磁道扇区数                            | 0x12                   |
  | BPB_NumHeads   |   26 |    2 | 磁头数                                  | 0x02                   |
  | BPB_HiddSec    |   28 |    4 | 隐藏扇区数                              | 	0                    |
  | BPB_TotSec32   |   32 |    4 | 如果 BPB_TotSec16 是 0，由这个值记录扇区数 | 	0xB40（2880）        |
  | BS_DrvNum      |   36 |    1 | 中断 13 的驱动器号                        | 	0                    |
  | BS_Reserved1   |   37 |    1 | 未使用                                  | 	0                    |
  | BS_BootSig     |   38 |    1 | 扩展引导标记                            | 0x29                   |
  | BS_VolD        |   39 |    4 | 卷序列号                                | 	0                    |
  | BS_VolLab      |   43 |   11 | 卷标                                    | 	'OrangeS0.02'        |
  | BS_FileSysType |   54 |    8 | 文件系统类型                            | 	'FAT12'              |
  | 引导代码       |   62 |  448 | 引导代码、数据及其他填充字符等          |                        |
  | 结束标志       |  510 |    2 |                                         | 	0xAA55               |
 
**** 文件分配表（FAT）
     紧接着引导扇区的是两个完全相同的 FAT 表，每个 FAT 表占用 9 个扇区
     
     它包含有两份文件分配表，这是出于系统冗余考虑，尽管它很少使用，即使是磁盘修
     复工具也很少使用它。它是分区信息的映射表，指示簇是如何存储的。
     
     每个 FAT 项占 12bit，这也所被成为 FAT12 的原因，FAT 项的值代表的是文件下一个簇号，
     但如果值大于等于 0xFF8，则表示当前簇已经是本文件的最后一个簇。如果值是 0xFF7，
     表示它是一个坏簇。
     
     一个 FAT 项可能跨越两个扇区，编码实现的过程要考虑在内。 
**** 根目录区
     FAT 表之后是根目录区，根目录区长度不固定
     
     根目录区位于第二个 FAT 表之后，开始扇区号为 19，它由若干个目录条目（Directory
     Entry）组成，条目最多有 BPB_RootEntCnt 个。每个条目占用 32 个字节，它的格式如
     下： 
 | 名称         | 　　	偏移 | 　　	长度 | 　　	描述                     |
 | DIR_Name     | 　　	0    | 　　	0xB  | 　　	文件名 8 字节，扩展名 3 字节 |
 | DIR_Attr     | 　　	0xB  | 　　	1    | 　　	文件属性                 |
 | 保留         | 　　	0xC  | 　　	10   | 　　                           |
 | DIR_WrtTime  | 　　	0x16 | 　　	2    | 　　	最后修改时间             |
 | DIR_WrtDate  | 　　	0x18 | 　　	2    | 　　	最后修改日期             |
 | DIR_FstClus  | 　　	0x1A | 　　	2    | 　　	此条目对应的开始簇号     |
 | DIR_FileSize | 　　	0x1C | 　　	4    | 　　	文件大小                 |
     
**** 数据区
     数据区在根目录区后，数据区开始扇区号为根目录区起始扇区号+根目录区大小，即
     19+BPB_RootEntCnt * 32 / BPB_BytsPerSec。
<!-- GFM-TOC -->
** Ext2 文件系统
   当要读取一个文件的内容时，先在 inode 中去查找文件内容所在
   的所有 block，然后把所有 block 的内容读出来。
* 文件系统管理   
** 分区
*** 分区表
 磁盘分区表主要有两种格式，一种是限制较多的 MBR 分区表，一种是较新且限制较少的
 GPT 分区表。
**** MBR
 MBR 中，第一个扇区最重要，里面有主要开机记录（Master boot record, MBR）及分区
 表（partition table），其中主要开机记录占 446 bytes，分区表占 64 bytes。

 分区表只有 64 bytes，最多只能存储 4 个分区，这 4 个分区为主分区（Primary）和扩
 展分区（Extended）。其中扩展分区只有一个，它使用其它扇区用记录额外的分区表，因
 此通过扩展分区可以分出更多分区，这些分区称为逻辑分区。

 Linux 也把分区当成文件，分区文件的命名方式为：磁盘文件名 + 编号，例如
 /dev/sda1。注意，逻辑分区的编号从 5 开始。
**** GPT
 不同的磁盘有不同的扇区大小，例如 512 bytes 和最新磁盘的 4 k。GPT 为了兼容所有
 磁盘，在定义扇区上使用逻辑区块地址（Logical Block Address, LBA），LBA 默认大小
 为 512 bytes。

 GPT 第 1 个区块记录了主要开机记录（MBR），紧接着是 33 个区块记录分区信息，并把
 最后的 33 个区块用于对分区信息进行备份。这 33 个区块第一个为 GPT 表头纪录，这
 个部份纪录了分区表本身的位置与大小和备份分区的位置，同时放置了分区表的校验码
 (CRC32)，操作系统可以根据这个校验码来判断 GPT 是否正确。若有错误，可以使用备份
 分区进行恢复。

 GPT 没有扩展分区概念，都是主分区，每个 LAB 可以分 4 个分区，因此总共可以分 4 *
 32 = 128 个分区。

 MBR 不支持 2.2 TB 以上的硬盘，GPT 则最多支持到 2<sup>33</sup> TB = 8 ZB。
*** 开机检测程序
**** BIOS
 BIOS（Basic Input/Output System，基本输入输出系统），它是一个固件（嵌入在硬件
 中的软件），BIOS 程序存放在断电后内容不会丢失的只读内存中。

 BIOS 是开机的时候计算机执行的第一个程序，这个程序知道可以开机的磁盘，并读取磁
 盘第一个扇区的主要开机记录（MBR），由主要开机记录（MBR）执行其中的开机管理程序，
 这个开机管理程序会加载操作系统的核心文件。

 主要开机记录（MBR）中的开机管理程序提供以下功能：选单、载入核心文件以及转交其
 它开机管理程序。转交这个功能可以用来实现了多重引导，只需要将另一个操作系统的开
 机管理程序安装在其它分区的启动扇区上，在启动开机管理程序时，就可以通过选单选择
 启动当前的操作系统或者转交给其它开机管理程序从而启动另一个操作系统。

**** UEFI
     BIOS 不可以读取 GPT 分区表，而 UEFI 可以。

*** 文件
**** 结构 
***** inode：一个文件占用一个 inode，记录文件的属性 ，同时记录此文件的内容所在的 block 编号；
***** block：记录文件的内容，文件太大时，会占用多个 block。
***** superblock：记录文件系统的整体信息，包括 inode 和 block 的总量、使用量、剩余量，以及文件系统的格式与相关信息等；
***** block bitmap：记录 block 是否被使用的位域。
*** 文件读取
*** 磁盘碎片
 指一个文件内容所在的 block 过于分散。

*** block
 在 Ext2 文件系统中所支持的 block 大小有 1K，2K 及 4K 三种，不同的大小限制了单
 个文件和文件系统的最大大小。

 | 大小         | 1KB  | 2KB   | 4KB  |
 | 最大单一文件 | 16GB | 256GB | 2TB  |
 | 最大文件系统 | 2TB  | 8TB   | 16TB |

 一个 block 只能被一个文件所使用，未使用的部分直接浪费了。因此如果需要存储大量
 的小文件，那么最好选用比较小的 block。

*** inode

 inode 具体包含以下信息：

 - 权限 (read/write/excute)；
 - 拥有者与群组 (owner/group)；
 - 容量；
 - 建立或状态改变的时间 (ctime)；
 - 最近一次的读取时间 (atime)；
 - 最近修改的时间 (mtime)；
 - 定义文件特性的旗标 (flag)，如 SetUID...；
 - 该文件真正内容的指向 (pointer)。

 inode 具有以下特点：

 - 每个 inode 大小均固定为 128 bytes (新的 ext4 与 xfs 可设定到 256 bytes)；
 - 每个文件都仅会占用一个 inode。

 inode 中记录了文件内容所在的 block 编号，但是每个 block 非常小，一个大文件随便都需要几十万的 block。而一个 inode 大小有限，无法直接引用这么多 block 编号。因此引入了间接、双间接、三间接引用。间接引用是指，让 inode 记录的引用 block 块记录引用信息。

