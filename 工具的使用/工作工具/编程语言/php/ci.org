* CI 框架
** 流程
*** index.php 文件作为前端控制器，初始化运行 CodeIgniter 所需的基本资源；
*** Router 检查 HTTP 请求，以确定如何处理该请求；
*** 如果存在缓存文件，将直接输出到浏览器，不用走下面正常的系统流程；
*** 在加载应用程序控制器之前，对 HTTP 请求以及任何用户提交的数据进行安全检查；
*** 控制器加载模型、核心类库、辅助函数以及其他所有处理请求所需的资源；
*** 最后一步，渲染视图并发送至浏览器，如果开启了缓存，视图被会先缓存起来用于 后续的请求。
** 安装
   1:  解压缩安装包；
   2:  将 CodeIgniter 文件夹及里面的文件上传到服务器，通常 index.php 文件将位于网站的根目录；
   3:  使用文本编辑器打开 application/config/config.php 文件设置你网站的根 URL，如果你想使用加密或会话，在这里设置上你的加密密钥；
   4:  如果你打算使用数据库，打开 application/config/database.php 文件设置数据库参数。
** 常规主题
*** CodeIgniter URL
**** (默认) URI 分段方式 : example.com/class/function/ID
**** 查询字符串格式 : index.php?c=controller&m=method
*** 配置文件 config/config.php
**** 后缀 .html
**** 启用查询字符串格式
     #+BEGIN_SRC php
       $config['enable_query_strings'] = FALSE;
       $config['controller_trigger'] = 'c';
       $config['function_trigger'] = 'm';
     #+END_SRC
**** 管理应用程序目录 $application_folder = 'application';
*** 控制器
**** 默认控制器 当 URI 没有分段参数时加载
     #+BEGIN_SRC php
       $route['default_controller'] = 'blog';
     #+END_SRC
**** _remap
     : 如果你的控制包含一个 _remap() 方法，那么无论 URI 中包含什么参数时都会调用该方法
**** 处理输出 
     : 如果你的控制器含有一个 _output() 方法，输出类将会调用该方法来显示数据， 而不是直接显示数据。该方法的第一个参数包含了最终输出的数据。
     #+BEGIN_SRC php
       public function _output($output)
       {
           echo $output;
       }
     #+END_SRC
**** 私有方法
     只要简单的将方法声明为 private 或 protected 或 _methodname [名字前加下划线]
*** 视图
**** 加载视图$this->load->view('view_name');
**** 将视图作为数据返回
     : 如果你将该参数设置为 TRUE， 该方法返回字符串，默认情况下为 FALSE，视图将显示到浏览器。
     : $string = $this->load->view('myfile', '', TRUE);
*** 模型  
    模型是专门用来和数据库打交道的 PHP 类
**** 加载模型 $this->load->model('model_name');
*** 辅助函数
**** 加载辅助函数 $this->load->helper('url');
*** 类库 位于 /system/libraries
**** 加载类库$this->load->library('class_name');
*** 网页缓存
**** 开始缓存$this->output->cache($n);
**** 删除缓存
     #+BEGIN_SRC php
       // Deletes cache for the currently requested URI
       $this->output->delete_cache();
       // Deletes cache for /foo/bar
       $this->output->delete_cache('/foo/bar');
     #+END_SRC
*** 以 CLI 方式运行
    : $ php index.php tools message 重新路由了,单一入口
*** 处理环境
    : ENVIRONMENT 常量
    : define('ENVIRONMENT', isset($_SERVER['CI_ENV']) ? $_SERVER['CI_ENV'] : 'development');
*** URI 安全
    : CodeIgniter 严格限制 URI 中允许出现的字符，以此来减少恶意数据传到你的应用程序的可能性。
