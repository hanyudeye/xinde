* python 编程
** 目录 
 通用应用主题
 第 1 章 正则表达式 ......................................... 2
 1.1 简介／动机 ........................................... 3
 1.2 特殊符号和字符 ................................... 5
 1.2.1
 1.3.10 匹配字符串的起始和结尾以及
 单词边界 ......................................20
 1.3.11
 一次出现的位置 ............................21
 使用择一匹配符号匹配多个正则
 1.3.12 使用 sub()和 subn()搜索与替换 ......22
 表达式模式 ...................................... 6
 1.2.2 匹配任意单个字符 ............................ 6
 1.2.3 从字符串起始或者结尾或者单词
 1.3.13 在限定模式上使用 split()分隔
 字符串 ..........................................23
 1.3.14 扩展符号 ......................................24
 边界匹配 .......................................... 7
 1.3
 1.2.4 创建字符集 ...................................... 8
 1.2.5 限定范围和否定 ............................... 8
 1.2.6 使用闭包操作符实现存在性和
 使用 findall()和 finditer()查找每
 1.3.15 杂项 .............................................27
 1.4 一些正则表达式示例 ........................28
 1.5 更长的正则表达式示例 ....................33
 频数匹配 .......................................... 9 1.5.1
 1.2.7 表示字符集的特殊字符 ................... 10 1.5.2
 1.2.8 使用圆括号指定分组 ...................... 10 1.2.9 扩展表示法 .................................... 11
 1.6
 匹配字符串 .....................................35
 搜索与匹配……还有贪婪 ................37
 .......................................................
 39
 练习
 第 2 章 网络编程 ............................................42
 正则表达式和 Python 语言 ............ 11 2.1 简介 .......................................................43
 1.3.1 re 模块：核心函数和方法 ............... 12 2.2 客户端/服务器架构 ...........................43
 1.3.2 使用 compile()函数编译正则 2.2.1
 硬件客户端/服务器架构 ..................43
 表达式 ........................................... 13 2.2.2
 软件客户端/服务器架构 ..................44
 匹配对象以及 group()和 2.2.3
 银行出纳员作为服务器吗 ................44
 groups()方法 ................................... 14 2.2.4
 客户端/服务器网络编程 ..................45
 1.3.3
 套接字：通信端点 .............................46
 1.3.4 使用 match()方法匹配字符串 ........... 14 1.3.5 使用 search()在一个字符串中查找 2.3.1 套接字 ............................................46
 模式（搜索与匹配的对比） ............... 15 2.3.2 套接字地址：主机-端口对 ..............47
 1.3.6 匹配多个字符串 ................................. 16 2.3.3 面向连接的套接字与无连接
 1.3.7 匹配任何单个字符（.） .................... 16 1.3.8 创建字符集（[ ]） .......................... 17 1.3.9 重复、特殊字符以及分组 ................. 18
 2.3
 的套接字 ........................................47
 2.4
 Python 中的网络编程 .......................48
 2.4.1
 socket()模块函数 .................

 2.4.2 套接字对象（内置）方法 ............... 49 3.4.1 电子邮件系统组件和协议 ................90
2.4.3 创建 TCP 服务器 ............................ 51 3.4.2 发送电子邮件 .................................91
2.4.4 创建 TCP 客户端 ............................ 54
2.4.5 执行 TCP 服务器和客户端 .............. 56 3.4.3 Python 和 SMTP ..............................92
3.4.4 smtplib.SMTP 类方法 ......................92
2.4.6 创建 UDP 服务器 ............................ 58
2.4.7 创建 UDP 客户端 ............................ 59 3.4.5 交互式 SMTP 示例 ..........................93
3.4.6 SMTP 的其他内容 ...........................94
2.4.8 执行 UDP 服务器和客户端 .............. 60
2.4.9 socket 模块属性 .............................. 61 3.4.7 接收电子邮件 .................................94
3.4.8 POP 和 IMAP ..................................95
*SocketServer 模块 .................... 62 3.4.9 Python 和 POP3 ...............................95
2.5.1 创建 SocketServer TCP 服务器 .......... 63 3.4.10 交互式 POP3 示例 .........................96
2.5.2 创建 SocketServer TCP 客户端 ...... 64 3.4.11 poplib.POP3 类方法 .......................97
2.5.3 执行 TCP 服务器和客户端 .............. 65 3.4.12 客户端程序 SMTP 和 POP3 示例 ......98
*Twisted 框架介绍 ............................ 66 3.4.13 Python 和 IMAP4 .........................100
2.6.1 创建 Twisted Reactor TCP 服务器 ..... 66 3.4.14 交互式 IMAP4 示例 .....................100
2.6.2 创建 Twisted Reactor TCP 客户端 ..... 67 3.4.15 imaplib.IMAP4 类中的常用方法 .....101
2.6.3 执行 TCP 服务器和客户端 .............. 69
3.5
实战 .....................................................102
2.7 相关模块 .............................................. 69 3.5.1 生成电子邮件 ...............................102
2.8 练习 ....................................................... 70 3.5.2 解析电子邮件 ...............................104
第 3 章 因特网客户端编程 ........................ 74 3.5.3 基于 Web 的云电子邮件服务 .........105
3.1 因特网客户端简介 ............................ 75 3.5.4 最佳实践：安全、重构 .................106
文件传输 .............................................. 75 3.5.5 Yahoo! Mail ..................................108
3.2 3.5.6 Gmail ........................................... 112
3.2.1 文件传输因特网协议 ...................... 75
3.2.2 文件传输协议 ................................. 76
3.2.3
Python 和 FTP ................................. 77
3.2.4 ftplib.FTP 类的方法 ........................ 77
3.2.5 交互式 FTP 示例 ............................. 78
3.3
3.4
3.6
3.2.6 客户端 FTP 程序示例 ...................... 79
3.2.7 FTP 的其他内容 ............................. 80
网络新闻 .............................................. 81
3.7
相关模块 ............................................ 115
3.6.1 电子邮件 ...................................... 115
3.6.2 其他因特网客户端协议 ................. 115
练习 ..................................................... 116
第 4 章 多线程编程 .....................................122
4.1 简介/动机 ...........................................123
4.2 线程和进程 ........................................124
3.3.1 Usenet 与新闻组 ............................. 81 4.2.1 进程 .............................................124
3.3.2 网络新闻传输协议 .......................... 82 4.2.2 线程 .............................................124
3.3.3 Python 和 NNTP .............................. 83
4.3
线程和 Python ..................................125
3.3.4 nntplib.NNTP 类方法 ....................... 83 4.3.1 全局解释器锁 ...............................125
3.3.5 交互式 NNTP 示例 ......................... 84 4.3.2 退出线程 ......................................126
3.3.6 客户端程序 NNTP 示例 .................. 85 3.3.7 NNTP 的其他内容 .......................... 89
电子邮件 .............................................. 90
4.3.3 在 Python 中使用线程 ...................126
4.4
4.3.4 不使用线程的情况 .....

4.5
threading 模块 ................................. 132 5.4.3 wxWidgets 和 wxPython .................188
4.5.1 Thread 类 ...................................... 133 5.4.4 GTK+和 PyGTK ............................190
4.5.2 threading 模块的其他函数 ............. 139 5.4.5 Tile/Ttk .........................................192
4.6 单线程和多线程执行对比 ........... 140 5.5 相关模块和其他 GUI ......................194
4.7 多线程实践 ....................................... 142 5.6 练习 .....................................................196
4.7.1
图书排名示例 ............................... 142
4.7.2 同步原语 ...................................... 149
4.7.3 锁示例 ......................................... 149
4.8
6.1
简介 .....................................................199
6.1.1 持久化存储 ...................................199
4.7.4 信号量示例 .................................. 156 6.1.2 数据库基本操作和 SQL .................199
生产者-消费者问题和 6.1.3 数据库和 Python ...........................201
Queue/queue 模块 ......................... 159
4.9
第 6 章 数据库编程 .....................................198
6.2
Python 的 DB-API ...........................203
模块属性 ......................................203
线程的替代方案 ............................... 162 6.2.1
4.9.1 subprocess 模块 ............................. 163
4.9.2 multiprocessing 模块 ...................... 163 6.2.2 Connection 对象 ............................205
6.2.3 Cursor 对象 ...................................206
4.9.3 concurrent.futures 模块 .................. 163
4.10 相关模块 ......................................... 165 6.2.4 类型对象和构造函数 .....................207
6.2.5 关系数据库 ...................................209
练习 ................................................... 165 6.2.6 数据库和 Python：适配器 .............210
第 5 章 GUI 编程 .......................................... 168 6.2.7 使用数据库适配器的示例 ..............210
简介 ..................................................... 169 6.2.8 数据库适配器示例应用 .................215
4.11
5.1
5.2
5.3
ORM ...................................................226
Tcl、Tk 和 Tkinter ........................ 169 5.1.2 安装和使用 Tkinter ....................... 170 6.3.1 考虑对象，而不是 SQL .................227
5.1.3 客户端/服务端架构 ....................... 170 6.3.2 Python 和 ORM .............................227
Tkinter 和 Python 编程 .................. 170 6.3.3 员工角色数据库示例 .....................228
Tkinter 模块：添加 Tk 到应用中 ... 171 6.3.4 5.2.1 SQLAlchemy .................................229
GUI 编程介绍 ............................... 171 6.3.5 5.2.2 SQLObject ....................................240
5.2.3 顶层窗口：Tkinter.Tk() ................. 173 5.2.4 Tk 控件 ........................................ 173
6.4
NoSQL 介绍 .................................245
6.4.2 MongoDB .....................................246
Label 控件 .................................... 174
5.3.2 Button 控件 .................................. 175
非关系数据库 ...................................245
6.4.1
Tkinter 示例 ...................................... 174
5.3.1
5.4
6.3
5.1.1 6.4.3 PyMongo：MongoDB 和 Python .....246
6.4.4 总结 .............................................250
6.5 相关文献 ............................................250
6.6 练习 .....................................................252
5.3.3 Label 和 Button 控件 ..................... 175 5.3.4 Label、Button 和 Scale 控件 .......... 176 5.3.5 偏函数应用示例 ........................... 178 5.3.6 中级 Tkinter 示例 .......................... 180 7.1 简介 .....................................................257

7.3
入门 ............................................. 258
入门示例 ............................................ 259
8.1.3
8.2
什么情况下不应该扩展 Python ......288
编写 Python 扩展 ............................289
Excel ............................................ 259 8.2.1 创建应用代码 ...............................289
7.3.2 Word ............................................ 261
7.3.3 PowerPoint .................................... 262 8.2.2 根据样板编写封装代码 .................291
8.2.3 编译 .............................................296
7.3.4 Outlook ........................................ 264
7.4 中级示例 ............................................ 266
7.4.1 Excel ............................................ 266 8.2.4 导入并测试 ...................................297
8.2.5 引用计数 ......................................300
8.2.6 线程和全局解释器锁 .....................301
7.3.1
7.4.2
Outlook ........................................ 268
8.3
相关主题 ............................................302
7.4.3 PowerPoint .................................... 273
7.4.4 总结 ............................................. 280 8.3.1
SWIG ...........................................302
8.3.2
Pyrex ............................................302
7.5 相关模块/包 ...................................... 281 8.3.3 Cython ..........................................302
7.6 练习 ..................................................... 281 8.3.4
Psyco ............................................303
第 8 章 扩展 Python ................................... 286 8.3.5
PyPy .............................................303
8.1 简介和动机 ....................................... 287 8.3.6
嵌入 Python ..................................304
8.1.1 Python 扩展简介 ........................... 287
8.1.2 什么情况下需要扩展 Python ......... 288
8.4
练习 .....................................................304
第 2 部分 Web 开发
第 9 章 Web 客户端和服务器 ................ 306
9.1
9.2
第 10 章 Web 编程：CGI 和 WSGI ....345
简介 ..................................................... 307 10.1 简介 ..................................................346
9.1.1 Web 应用：客户端/服务器计算 ..... 307
9.1.2 因特网 ......................................... 308 10.2 帮助 Web 服务器处理
客户端数据 .....................................346
Python Web 客户端工具 ............... 310 10.2.1 CGI 简介 ....................................346
9.2.1 统一资源定位符 ........................... 310
9.2.2 urlparse 模块 ................................. 312 10.2.2 CGI 应用程序 .............................347
9.2.3 urllib 模块/包 ................................ 313
9.2.4 使用 urllib2 HTTP 验证的示例 ....... 317 10.2.4 cgitb 模块 ...................................348
10.2.3 cgi 模块 ......................................348
10.3
构建 CGI 应用程序 .......................349
将 HTTP 验证示例移植到 10.3.1 构建 Web 服务器 .........................349
Python 3 中 ................................... 319 10.3.2 建立表单页 .................................351
Web 客户端 ...................................... 322 10.3.3 生成结果页面 .............................352
9.3.1 一个简单的 Web 爬虫/蜘蛛/机器人 .... 322 10.3.4 生成表单和结果页面 ...................353
9.3.2 解析 Web 页面 .............................. 328 10.3.5 全面交互的 Web 站点 ..................357
9.3.3 可编程的 Web 浏览 ....................... 333 10.4 在 CGI 中使用 Unicode ..............362


WSGI 简介 ..................................... 373 11.11.2 添加 URLconf 项 .......................423
10.6.1 动机（替代 CGI） ...................... 373
10.6.2 服务器集成 ................................. 374 11.11.3 视图：处理用户输入 .................423
10.6
10.6.3 外部进程 .................................... 374
10.6.4 WSGI 简介 ................................. 375
11.11.4 跨站点请求伪造 ........................424
11.12
表单和模型表单 ..........................426
11.12.1 Django 表单简介 .......................426
10.6.5 WSGI 服务器 .............................. 376
10.6.6 参考服务器 ................................. 377 11.12.2 模型表单示例 ............................427
10.6.7 WSGI 应用示例 .......................... 378 HTML 表单 ...............................427
10.6.8 中间件及封装 WSGI 应用 ........... 378 11.12.4 处理 ModelForm 数据 ................428
11.12.3 使用 ModelForm 来生成
10.6.9 在 Python 3 中使用 WSGI ............ 379
10.7 现实世界中的 Web 开发 ............. 380 11.13 视图进阶 ........................................429
11.14 *改善外观 ......................................431
10.8 相关模块 ......................................... 380 11.15 *单元测试 ......................................432
10.9 练习 .................................................. 381 11.15.1 blog 应用的代码审查 .................434
第 11 章 Web 框架：Django .................. 384 11.15.2 blog 应用总结 ............................439
11.1 简介 ................................................... 385 11.2 Web 框架 ........................................ 385 TweetApprover ...........................439
11.3 Django 简介 .................................... 386 11.16.1 创建项目文件结构 .....................440
11.4 项目和应用 ..................................... 390 11.16.2 安装 Twython 库 ........................445
11.4.1 在 Django 中创建项目 ................. 390 11.16.3 URL 结构 ..................................446
11.16
*中级 Django 应用：
运行开发服务器 .......................... 393 11.16.4 数据模型 ...................................449
11.5 “Hello World”应用（一个博客） ..... 394 11.16.5 提交新推文以便审核 .................453
11.4.2
11.16.6 审核推文 ...................................457
创建模型来添加数据库服务 ....... 396
11.6
11.6.1 设置数据库 ................................. 396 11.17 资源 ................................................465
11.6.2 创建表 ........................................ 398 11.18 总结 ................................................465
Python 应用 shell ......................... 400 11.19 练习 ................................................466
11.7
第 12 章 云计算：Google App
Engine ...........................................470
Django 管理应用 ........................... 403 12.1 简介 ..................................................471
设置 admin .................................. 403 12.2 云计算 ..............................................471
11.7.1 在 Django 中使用 Python shell ...... 400
11.7.2
11.8
11.8.1
测试数据模型 ................................. 402
11.8.2 使用 admin .................................. 404
11.9 创建博客的用户界面 .................... 410
11.9.1 创建模板 .................................... 411
11.9.2 创建 URL 模式 ........................... 412
11.9.3 创建视图函数 ............................. 415
11.10
改进输出 ....................................... 418
12.2.1 云计算服务的层次 ......................472
12.2.2 App Engine .................................473
12.3 沙盒和 App Engine SDK ............476
12.4 选择一个 App Engine 框架 ........479
12.5 Python 2.7 支持 ............................485

第 15 章 其他内容 ......................................... 577 C.2.4 更新异常的语法 ...........................617
Jython .............................................. 578 C.2.5 整数的更新 ..................................618
15.1.1 Jython 简介 ................................. 578 C.2.6 迭代器无处不在 ...........................619
14.6
15.1
15.1.2 Swing GUI 开发示例 ................... 579
15.2
C.3
C.3.1 2to3 工具 .....................................619
Google+ .......................................... 581
15.2.2 Python 和 Google+API ................. 582 C.4 Python 2.6+ ..................................620
....................................................
620
结论
15.2.3 一个简单的社交媒体分析工具 ...... 582 C.5 参考资料 ...........................................620
C.3.2
15.2.1 Google+平台简介 ........................ 582
15.3
迁移工具 ...........................................619
练习 .................................................. 590
部分练习参考答案 ....................... 593
附录 A
附录 B 参考表 ............................................... 597
附录 D 利用 Python 2.6+向
Python 3 迁移 ...............................622
D.1 Python 3：Python 的下一代 .......622
D.2 整数 ....................................................623
B.1 Python 关键字 ................................. 597 B.2 Python 标准操作符和函数 ........... 598 D.2.1 单整数类型 ..................................624
B.3 数值类型操作符和函数 ................. 599 D.2.2
B.4 序列类型操作符和函数 ................. 600 B.5 字符串格式化操作符转换符号 .... 602 B.6 字符串格式化操作符指令 ............. 603 B.7 字符串类型内置方法 ..................... 603 B.8 列表类型内置方法 .......................... 605 B.9 字典类型内置方法 .......................... 605 B.10 集合类型操作符和内置函数 ...... 606 B.11 文件对象方法和数据属性 ........... 607 B.12 Python 异常 ................................... 608 B.13 类的特殊方法 ................................ 610 B.14 Python 操作符汇总 ...................... 612 D.7 其他转换工具和技巧 .....................631
附录 C Python 3：一种编程语言
进化的产物 ...................................... 614 D.8 编写兼容版本 2.x 和 3.x 的代码 ...632
新型二进制和改进的八进制字符 .....624
D.2.3 经典除法或真除法 .......................625
D.3
内置函数 ...........................................626
D.3.1 print 语句或 print()函数 ................626
D.3.2
reduce()转移到了 functools 模块中 ...627
D.3.3 其他更新 .....................................627
D.4
面向对象编程：两种不同的类
对象 ...................................................628
D.5 字符串 ................................................629
D.6 异常 ....................................................630
D.6.1 处理异常（使用 as） ...................630
D.6.2 抛出异常 .....................................630
D.8.1 对比 print 和 print() .......................632
C.1 为何 Python 在变化 ....................... 614 D.8.2 将你的方法导入解决方案中 .........633
C.2 都发生了哪些变化 .......................... 615 D.8.3 整合在一起 ..................................634
C.2.1 print 变成了 print() ....................... 615
C.2.2
字符串：默认为 Unicode 编码 ...... 616
D.9
结论 ....................................................635
** 正则表达式(查找) re 模块
