* spacemacs (写字板)
** 配置 (写字板个性化)
*** 配置环境变量 (会对一些操作起作用)
    spacemacs/edit-env 
    配置文件  ~/.spacemacs.env
*** .spacemacs 文件
*** 自动保存
**** Frequency(频率) of auto-saving
     By default auto-saving of files is performed every 300 characters and
     every 30 seconds of idle time which can be changed by setting to a
     new value the variables =auto-save-interval= and =auto-save-timeout=
     respectively.

**** Location of auto-saved files
     Auto-save of modified files can be performed in-place on the original file
     itself /or/ in the cache directory (in this case the original file will remain
     unsaved). By default Spacemacs auto-save the file in the cache directory.

     To modify the location set the variable =dotspacemacs-auto-save-file-location=
     to =original= or =cache=.

     Local files are auto-saved in a sub-directory called =site= in the =cache=
     directory whereas remote files (i.e. files edited over TRAMP) are auto-saved
     in a sub-directory called =dist=.

**** Disable auto-save
     To disable auto-saving set the variable =dotspacemacs-auto-save-file-location=
     to =nil=.

     You can toggle auto-save in a buffer by calling the command =auto-save-mode=.

** 字符输入 按键 (铅笔)
*** 26 个字母，格式化键，控制键
*** 键绑定 (我想用某个按键代表某个功能)
    (evil-leader/set-key "o y" 'copy-to-clipboard)
    全局绑定 会被模式绑定覆盖
     (global-set-key (kbd "C-]") 'forward-char)
     //被下面的覆盖了
     (define-key evil-insert-state-map (kbd "C-]") 'forward-char)
     //用前导键
  #+BEGIN_SRC emacs-lisp
    (spacemacs/set-leader-keys "C-]" 'forward-char)
    (spacemacs/set-leader-keys-for-major-mode 'emacs-lisp-mode "C-]" 'forward-char)
  #+END_SRC
*** 键绑定帮助
  | Key Binding | Description                                               |
  |-------------+-----------------------------------------------------------|
  | ~SPC h d b~ | describe bindings                                         |
  | ~SPC h d c~ | describe current character under point                    |
  | ~SPC h d d~ | describe current expression under point                   |
  | ~SPC h d f~ | describe a function                                       |
  | ~SPC h d F~ | describe a face                                           |
  | ~SPC h d k~ | describe a key                                            |
  | ~SPC h d K~ | describe a keymap                                         |
  | ~SPC h d l~ | copy last pressed keys that you can paste in gitter chat  |
  | ~SPC h d m~ | describe current modes                                    |
  | ~SPC h d p~ | describe a package (Emacs built-in function)              |
  | ~SPC h d P~ | describe a package (Spacemacs layer information)          |
  | ~SPC h d s~ | copy system information that you can paste in gitter chat |
  | ~SPC h d t~ | describe a theme                                          |
  | ~SPC h d v~ | describe a variable                                       |

  Other help key bindings:

  | Key Binding | Description                                           |
  |-------------+-------------------------------------------------------|
  | ~SPC h SPC~ | discover Spacemacs documentation, layers and packages |
  | ~SPC h i~   | search in info pages with the symbol at point         |
  | ~SPC h k~   | show top-level bindings with =which-key=              |
  | ~SPC h m~   | search available man pages                            |
  | ~SPC h n~   | browse emacs news                                     |

  Navigation key bindings in =help-mode=:

*** 预留前缀
    ~SPC o~ and ~SPC m o~ are reserved for the user
*** Vim key bindings
**** Escaping(跳脱键)
     #+BEGIN_SRC emacs-lisp
       (defun dotspacemacs/user-config ()
         (setq-default evil-escape-key-sequence "jj"))
     #+END_SRC

**** Leader key
**** Major Mode leader key
     #+BEGIN_SRC emacs-lisp
       (setq-default dotspacemacs-major-mode-leader-key "<tab>")
     #+END_SRC

**** Additional text objects
     Additional text objects are defined in Spacemacs:

     | Object  | Description                |
     |---------+----------------------------|
     | ~a~     | an argument                |
     | ~g~     | the entire buffer          |
     | ~$~     | text between =$=           |
     | ~*~     | text between =*=           |
     | ~8~     | text between =/*= and =*/= |
     | ~%~     | text between =%=           |
     | ~\vert~ | text between =\vert=       |

** 输入他国语言 unicode 
   以某编码打开：M-x revert-buffer-with-coding-system RET（回车）
   Ctrl-x 8 Enter 3bb Enter
   $ ＄ 央行网页选用了半角字符 U+00A5 (¥)。另见：人民币符号是「U+FFE5」还是「U+00A5」 ￥
   
   插入 unicode C-q 加 8 进制类型数字
** 导航 (看字)
*** 光标
    Navigation is performed using the Vi key bindings ~hjkl~.
*** 快速跳转 通过 [[https://github.com/abo-abo/avy][avy]] 
    | ~SPC j b~   | 返回原来的地方 |
    | ~SPC j j~   | 跳到某个 char  |
    | ~SPC j w~   | 跳到某个  word |
    | ~SPC j l~   | 跳到某个  line |

**** 跳转链接 ace-link 
     | ~o~         | 默认模式 hinitiate ace link mode in =help-mode= and =info-mode= |

*** 增强功能绑定 [[https://github.com/tpope/vim-unimpaired][tpope’s vim-unimpaired]].
    | ~[ SPC~     | Insert space above               |
    | ~] SPC~     | Insert space below               |
    | ~[ b~       | Go to previous buffer            |
    | ~] b~       | Go to next buffer                |
    | ~[ f~       | Go to previous file in directory |
    | ~] f~       | Go to next file in directory     |
    | ~[ l~       | Go to the previous error         |
    | ~] l~       | Go to the next error             |
    | ~[ h~       | Go to the previous vcs hunk      |
    | ~] h~       | Go to the next vcs hunk          |
    | ~[ q~       | Go to the previous error         |
    | ~] q~       | Go to the next error             |
    | ~[ t~       | Go to the previous frame         |
    | ~] t~       | Go to the next frame             |
    | ~[ w~       | Go to the previous window        |
    | ~] w~       | Go to the next window            |
    | ~[ e~       | Move line up                     |
    | ~] e~       | Move line down                   |
    | ~[ p~       | Paste above current line         |
    | ~] p~       | Paste below current line         |
    | ~g p~       | Select pasted text               |

*** Jumping, Joining and Splitting
    The ~SPC j~ prefix is for jumping, joining and splitting.
*** 窗口操作 SPC w 
    黄金分割 golden-ratio
*** 缓存和文件　Buffers and Files
**** Buffers manipulation key bindings
     Buffer manipulation commands (start with ~b~):
**** 文件操作 SPC f 
**** 框架操作 Frame manipulation commands (start with ~F~): 
**** 配置文件操作 SPC f e
     Convenient key bindings are located under the prefix ~SPC f e~ to quickly
     navigate between =Emacs= and Spacemacs specific files.

*** 书签 SPC f b
    | ~C-d~       | delete the selected bookmark                 |
    | ~C-e~       | edit the selected bookmark                   |
    | ~C-f~       | toggle filename location                     |
    | ~C-o~       | open the selected bookmark in another window |

    To save a new bookmark, just type the name of the bookmark and press ~RET~.

*** 视图文档
    =doc-view-mode= is a built-in major mode to view DVI, PostScript (PS), PDF,
    OpenDocument, and Microsoft Office documents.

    | Key Binding | Description                              |
    |-------------+------------------------------------------|
    | ~/~         | search forward                           |
    | ~?~         | search backward                          |
    | ~+~         | enlarge                                  |
    | ~-~         | shrink                                   |
    | ~gg~        | go to first page                         |
    | ~G~         | go to last page                          |
    | ~gt~        | go to page number                        |
    | ~h~         | previous page                            |
    | ~H~         | adjust to height                         |
    | ~j~         | next line                                |
    | ~k~         | previous line                            |
    | ~K~         | kill proc and buffer                     |
    | ~l~         | next page                                |
    | ~n~         | go to next search occurrence             |
    | ~N~         | go to previous search occurrence         |
    | ~P~         | fit page to window                       |
    | ~r~         | revert                                   |
    | ~W~         | adjust to width                          |
    | ~C-d~       | scroll down                              |
    | ~C-k~       | kill proc                                |
    | ~C-u~       | scroll up                                |
    | ~C-c C-c~   | toggle display text and image display    |
    | ~C-c C-t~   | open new buffer with doc’s text contents |

** 查找 SPC s
*** 搜索工具
     | ~SPC r l~              | 重新显示上次的搜索结果                                       |
     | ~SPC r s~ or ~SPC s l~ | resume search buffer (completion or converted search buffer) |
     | ~SPC s `~              | 返回原来的地方            |
*** 通过语义列出符号  SPC s j
** 编辑 (铅笔更正)
*** 粘贴文本
**** 上下文粘贴
     打开配置　 =dotspacemacs-enable-paste-transient-state= to =t=

     | ~p~ or ~P~ | 粘贴       |
     | ~C-j~      | 粘贴上一个 |
     | ~C-k~      | 粘贴下一个 |

**** 自动缩进粘贴文本
     默认是自动缩进的，如不需要，可以加 universal argument

     配置变量 =spacemacs-indent-sensitive-modes= 
*** 文本操作 (start with ~x~)
    | ~SPC x j c~ | 居中对齐 |
    | ~SPC x l s~ | 排序     |
    | ~SPC x l u~ | 去重     |
    | ~SPC x o~   | 跳转链接 |
    | ~SPC x u~   | 小写     |
    | ~SPC x U~   | 大写     |
    | ~SPC x w c~ | 多少字   |

*** 文本输入 (start with ~i~)
*** 缩放
    Text Frame
*** 数字加减
    | ~SPC n +~   | increase the number under point by one and initiate transient state |
    | ~SPC n -~   | decrease the number under point by one and initiate transient state |
    (i.e. ~10 SPC n +~ will add 10 to the number under point).

*** 拼写检查
     [[https://github.com/syl20bnr/spacemacs/blob/develop/layers/%2Bcheckers/spell-checking/README.org][spell checking]] layer
*** 选区 v
*** 缩放显示区域 (start with ~n~)
    | ~SPC n f~ | 显示函数            |
    | ~SPC n p~ | 显示 page           |
    | ~SPC n r~ | 显示　selected text |
    | ~SPC n w~ | 撤销，全部显示      |
*** 替换 
**** 可视化替换 iedit
     选中要替换的词，按 SPC s e
     删除替换: ~v w w SPC s e S "toto" ESC ESC~
**** 选中替换 <>s//新词/

*** 文件重命名
    It is possible to batch rename files in a directory using =wdired= from an
    =helm= session:
    - browse for a directory using ~SPC f f~
    - enter =wdired= with ~C-c C-e~
    - edit the file names and use ~C-c C-c~ to confirm the changes
    - use ~C-c C-k~ to abort any changes
      
*** 注释 SPC c
    改变注释样式
    
    #+BEGIN_SRC emacs-lisp
      (add-hook 'c-mode-common-hook
                (lambda ()
                  ;; Preferred comment style
                  (setq comment-start "// "
                        comment-end "")))

    #+END_SRC
          
或者
    #+BEGIN_SRC emacs-lisp
      (defun my-c-mode-hook ()
        (c-set-style "bsd")
        (setq tab-width 4)
        (c-set-offset 'case-label '+)
        (setq c-basic-offset tab-width)
        (setq comment-start "//")
        (setq comment-end "")
        (setq comment-column 80))
      (add-hook 'c-mode-hook #'my-c-mode-hook)
#+END_SRC
*** 正则表达式
    Spacemacs uses the packages [[https://github.com/joddie/pcre2el][pcre2el]] to manipulate regular expressions. It is
    useful when working with =Emacs Lisp= buffers since it allows to easily converts
    =PCRE= (Perl Compatible RegExp) to Emacs RegExp or =rx=. It can also be used to
    “explain” a PCRE RegExp around point in =rx= form.

    The key bindings start with ~SPC x r~ and have the following mnemonic structure:
    - ~SPC x r <source> <target>~ convert from source to target
    - ~SPC x r~ do what I mean

    | Key Binding   | Function                                                                               |
    |---------------+----------------------------------------------------------------------------------------|
    | ~SPC x r /~   | Explain the regexp around point with =rx=                                              |
    | ~SPC x r '​~   | Generate strings given by a regexp given this list is finite                           |
    | ~SPC x r t~   | Replace regexp around point by the =rx= form or vice versa                             |
    | ~SPC x r x~   | Convert regexp around point in =rx= form  and display the result in the minibuffer     |
    | ~SPC x r c~   | Convert regexp around point to the other form and display the result in the minibuffer |
    | ~SPC x r e /~ | Explain Emacs Lisp regexp                                                              |
    | ~SPC x r e '​~ | Generate strings from Emacs Lisp regexp                                                |
    | ~SPC x r e p~ | Convert Emacs Lisp regexp to PCRE                                                      |
    | ~SPC x r e t~ | Replace Emacs Lisp regexp by =rx= form or vice versa                                   |
    | ~SPC x r e x~ | Convert Emacs Lisp regexp to =rx= form                                                 |
    | ~SPC x r p /~ | Explain PCRE regexp                                                                    |
    | ~SPC x r p '​~ | Generate strings from PCRE regexp                                                      |
    | ~SPC x r p e~ | Convert PCRE regexp to Emacs Lisp                                                      |
    | ~SPC x r p x~ | Convert PCRE to =rx= form                                                              |

    Deletion is configured to send deleted files to system trash.

    On OS X the =trash= program is required. It can be installed with [[https://brew.sh/][homebrew]] with
    the following command:

    #+BEGIN_SRC sh
      $ brew install trash
    #+END_SRC

    To disable the trash you can set the variable =delete-by-moving-to-trash= to
    =nil= in your =~/.spacemacs=.
*** 编辑 Lisp code
    Editing of lisp code is provided by [[https://github.com/syl20bnr/evil-lisp-state][evil-lisp-state]].

    Commands will set the current state to =lisp state= where different commands
    combo can be repeated without pressing on ~SPC k~.

    When in =lisp state= the color of the mode-line changes to pink.

    Examples:
    - to slurp three times while in normal state: ~SPC k 3 s~
    - to wrap a symbol in parentheses then slurp two times: ~SPC k w 2 s~

    *Note*: The =lisp state= commands are available in /any/ modes! Try it out.

**** Lisp Key Bindings
***** Lisp state key bindings
      These commands automatically switch to =lisp state=.

      | Key Binding | Function                                                            |
      |-------------+---------------------------------------------------------------------|
      | ~SPC k %~   | evil jump item                                                      |
      | ~SPC k :~   | ex command                                                          |
      | ~SPC k (~   | insert expression before (same level as current one)                |
      | ~SPC k )~   | insert expression after (same level as current one)                 |
      | ~SPC k $~   | go to the end of current sexp                                       |
      | ~SPC k ` k~ | hybrid version of push sexp (can be used in non lisp dialects)      |
      | ~SPC k ` p~ | hybrid version of push sexp (can be used in non lisp dialects)      |
      | ~SPC k ` s~ | hybrid version of slurp sexp (can be used in non lisp dialects)     |
      | ~SPC k ` t~ | hybrid version of transpose sexp (can be used in non lisp dialects) |
      | ~SPC k 0~   | go to the beginning of current sexp                                 |
      | ~SPC k a~   | absorb expression                                                   |
      | ~SPC k b~   | forward barf expression                                             |
      | ~SPC k B~   | backward barf expression                                            |
      | ~SPC k c~   | convolute expression                                                |
      | ~SPC k ds~  | delete symbol                                                       |
      | ~SPC k Ds~  | backward delete symbol                                              |
      | ~SPC k dw~  | delete word                                                         |
      | ~SPC k Dw~  | backward delete word                                                |
      | ~SPC k dx~  | delete expression                                                   |
      | ~SPC k Dx~  | backward delete expression                                          |
      | ~SPC k e~   | unwrap current expression and kill all symbols after point          |
      | ~SPC k E~   | unwrap current expression and kill all symbols before point         |
      | ~SPC k h~   | previous symbol                                                     |
      | ~SPC k H~   | go to previous sexp                                                 |
      | ~SPC k i~   | switch to =insert state=                                            |
      | ~SPC k I~   | go to beginning of current expression and switch to =insert state=  |
      | ~SPC k j~   | next closing parenthesis                                            |
      | ~SPC k J~   | join expression                                                     |
      | ~SPC k k~   | previous opening parenthesis                                        |
      | ~SPC k l~   | next symbol                                                         |
      | ~SPC k L~   | go to next sexp                                                     |
      | ~SPC k p~   | paste after                                                         |
      | ~SPC k P~   | paste before                                                        |
      | ~SPC k r~   | raise expression (replace parent expression by current one)         |
      | ~SPC k s~   | forward slurp expression                                            |
      | ~SPC k S~   | backward slurp expression                                           |
      | ~SPC k t~   | transpose expression                                                |
      | ~SPC k u~   | undo                                                                |
      | ~SPC k U~   | got to parent sexp backward                                         |
      | ~SPC k C-r~ | redo                                                                |
      | ~SPC k v~   | switch to =visual state=                                            |
      | ~SPC k V~   | switch to =visual line state=                                       |
      | ~SPC k C-v~ | switch to =visual block state=                                      |
      | ~SPC k w~   | wrap expression with parenthesis                                    |
      | ~SPC k W~   | unwrap expression                                                   |
      | ~SPC k y~   | copy expression                                                     |

***** Emacs lisp specific key bindings

      | Key Binding | Function                                   |
      |-------------+--------------------------------------------|
      | ~SPC m e $~ | go to end of line and evaluate last sexp   |
      | ~SPC m e b~ | evaluate buffer                            |
      | ~SPC m e c~ | evaluate current form (a =def= or a =set=) |
      | ~SPC m e e~ | evaluate last sexp                         |
      | ~SPC m e f~ | evaluate current defun                     |
      | ~SPC m e l~ | go to end of line and evaluate last sexp   |
      | ~SPC m e r~ | evaluate region                            |

      | Key Binding | Function                                           |
      |-------------+----------------------------------------------------|
      | ~SPC m g g~ | go to definition                                   |
      | ~SPC m g G~ | go to definition in another window                 |
      | ~SPC m h h~ | describe elisp thing at point (show documentation) |
      | ~SPC m t b~ | execute buffer tests                               |
      | ~SPC m t q~ | ask for test function to execute                   |

    There are some added mouse features set for the line number margin (if shown):
    - single click in line number margin visually selects the entire line
    - drag across line number masusually selally selrgin visually selects the region
    - double click in line numbsually seler margin visually select the current code block

** 工程管理 SPC p
** 暂存器  SPC r
   | ~SPC r e~   | show evil yank and named registers |
   | ~SPC r m~   | show marks register                |
   | ~SPC r r~   | show helm register                 |
   | ~SPC r y~   | show kill ring                     |

   Spacemacs has support for [[http://editorconfig.org/][EditorConfig]], a configuration file to “define and
   maintain consistent coding styles between different editors and IDEs.”
   To enable this feature, [[https://github.com/editorconfig/editorconfig-core-c/blob/master/INSTALL.md][install the editorconfig command]].

   To customize your editorconfig experience, read [[https://github.com/editorconfig/editorconfig-emacs/blob/master/README.md#customize][the editorconfig-emacs package’s
   documentation]].

** 写字服务
*** 连接服务 emacsclient -c
*** 保证服务不关闭
    #+BEGIN_SRC emacs-lisp
      配置
      (setq-default dotspacemacs-persistent-server t)
    #+END_SRC


    | ~SPC q q~  | Quit Emacs and kill the server, prompt for changed buffers to save       |
    | ~SPC q Q~  | Quit Emacs and kill the server, lose all unsaved changes.                |
    | ~SPC q r~  | Restart both Emacs and the server, prompting to save any changed buffers |
    | ~SPC q s~  | Save the buffers, quit Emacs and kill the server                         |
    | ~SPC q f~  | Kill the current frame                                                   |
    | ~SPC q t~  | Restart Emacs and debug with --with-timed-requires                       |
    | ~SPC q T~  | Restart Emacs and debug with --adv-timers                                |

*** 关闭服务
    #+BEGIN_SRC emacs-lisp
      (setq-default dotspacemacs-enable-server nil)
    #+END_SRC

** 编程功能
*** 代码折叠
    zm      折叠
    zo      展开折叠
    zO     对所在范围内所有嵌套的折叠点展开
    [z       到当前打开的折叠的开始处。
    ]z       到当前打开的折叠的末尾处。
    zj       向下移动。到达下一个折叠的开始处。关闭的折叠也被计入。
    zk      向上移动到前一折叠的结束处。关闭的折叠也被计入。
    zf      创建折叠，比如在 marker 方式下：
    zd      删除 (delete) 在光标下的折叠。仅当 'foldmethod' 设为 "manual" 或 "marker" 时有效。
    zD     循环删除 (Delete) 光标下的折叠，即嵌套删除折叠。
    zE     除去 (Eliminate) 窗口里“所有”的折叠。
** 调试
*** 加载有错误
    emacs --debug-init
*** 更新包后有错，要重新编译安装包
    spacemacs/recompile-elpa
** 帮助
*** 手册 SPC h m 
* 扩展 layers
** pdf layer
*** Key bindings
  If you use Emacs editing style, check the key bindings at the [[https://github.com/politza/pdf-tools#some-keybindings][pdf-tools page]].
**** PDF View
  | *Key Binding*        | *Description*                             |
  |----------------------+-------------------------------------------|
  | *Navigation*         |                                           |
  |----------------------+-------------------------------------------|
  | ~M-SPC~ or ~s-M-SPC~ | pdf-tools transient state                 |
  | ~0/$~                | Left/right full scroll                    |
  | ~J~                  | Move to next page                         |
  | ~K~                  | Move to previous page                     |
  | ~u~                  | Scroll page up                            |
  | ~d~                  | Scroll page down                          |
  | ~gg~                 | Go to the first page                      |
  | ~G~                  | Go to the last page                       |
  | ~gt~                 | Go to page                                |
  | ~gl~                 | Go to label (usually the line as printed) |
  | ~C-u~                | Scroll up                                 |
  | ~C-d~                | Scroll down                               |
  | ~``~                 | Go to last page in the history            |
  | ~m~                  | Set mark                                  |
  | ~'~                  | Go to mark                                |
  | ~y~                  | Yank selected region                      |
  |----------------------+-------------------------------------------|
  | *Search*             |                                           |
  |----------------------+-------------------------------------------|
  | ~/~                  | Search forward                            |
  | ~?~                  | Search backward                           |
  |----------------------+-------------------------------------------|
  | *Actions*            |                                           |
  |----------------------+-------------------------------------------|
  | ~o~                  | Follow link                               |
  | ~O~                  | Show outline                              |
  | ~r~                  | Refresh file                              |
  |----------------------+-------------------------------------------|
  | *Zoom*               |                                           |
  |----------------------+-------------------------------------------|
  | ~+/-~                | Zoom in/out                               |
  | ~zr~                 | Reset zoom                                |
  |----------------------+-------------------------------------------|

  /For evil users/: Note that the search keys activate =isearch=, which works
  differently from the default Evil search. To go to the next match, use ~C-s~.

**** Leader keys
  | *Key Binding*         | *Description*                             |
  |-----------------------+-------------------------------------------|
  | *Slicing*             |                                           |
  |-----------------------+-------------------------------------------|
  | ~SPC m s m~           | Set slice using mouse                     |
  | ~SPC m s b~           | Set slice from bounding box               |
  | ~SPC m s r~           | Reset slice                               |
  |-----------------------+-------------------------------------------|
  | *Annotations*         |                                           |
  |-----------------------+-------------------------------------------|
  | ~SPC m a D~           | Delete annotation (select it with mouse)  |
  | ~SPC m a a~           | List all attachments in a dired buffer    |
  | ~SPC m a h~           | Highlight visual selection                |
  | ~SPC m a l~           | List all annotations                      |
  | ~SPC m a m~           | Add markup annotation to visual selection |
  | ~SPC m a o~           | Strikeout visual selection                |
  | ~SPC m a s~           | Add squiggly to visual selection          |
  | ~SPC m a t~           | Add annotation text                       |
  | ~SPC m a u~           | Underline to visual selection             |
  |-----------------------+-------------------------------------------|
  | *Fit image to window* |                                           |
  |-----------------------+-------------------------------------------|
  | ~SPC m f w~           | Fit width to window                       |
  | ~SPC m f h~           | Fit height to window                      |
  | ~SPC m f p~           | Fit page to window                        |
  |-----------------------+-------------------------------------------|
  | *Other*               |                                           |
  |-----------------------+-------------------------------------------|
  | ~SPC m n~             | Toggle night view mode                    |
  | ~SPC m s~             | Run =pdf-occur=                           |
  | ~SPC m p~             | Display print version                     |

**** Outline buffer mode
  | *Key Binding* | *Description*                                         |
  |---------------+-------------------------------------------------------|
  | ~S-tab~       | Expand all trees                                      |
  | ~RET~         | Follow link                                           |
  | ~M-RET~       | Follow link and close outline window                  |
  | ~o~           | Go to pdf view window                                 |
  | ~``~          | Move to the heading correspondent to the current page |
  | ~''~          | Move to the heading correspondent to the current page |
  | ~f~           | Go to selected heading without leaving outline buffer |
  | ~F~           | Enable follow mode                                    |
  | ~q~           | Quit                                                  |
  | ~Q~           | Quit and kill outline buffer                          |

  Note that you can use also typical Vim keys such as ~j~ and ~G~.

**** Annotation list mode
  | Key Binding | Description                   |
  |-------------+-------------------------------|
  | ~d~         | Mark for deletion             |
  | ~x~         | Apply action for marked items |
  | ~u~         | Unmark item                   |
  | ~q~         | Quit                          |

**** Occur mode
  | Key Binding | Description    |
  |-------------+----------------|
  | ~q~         | Quit           |
  | ~g~         | Refresh buffer |
  | ~r~         | Refresh buffer |

** epub layers
 | ~<TAB>~     | Next link           |
 | ~<BACKTAB>~ | Previous link       |
 | ~H~ or ~[~  | Previous chapter    |
 | ~L~ or ~]~  | Next chapter        |
 | ~u~         | Scroll up           |
 | ~d~         | Scroll down         |
 | ~g m~       | Display metadata    |
 | ~g r~       | Re-render document  |
 | ~g t~       | Table of contents   |
 | ~g v~       | View source         |
 | ~g V~       | View content source |

 Hint: use ~SPC w c~ to center the buffer.

** 英汉转换 [[file:~/.emacs.d/private/companyenglish/][layers]]
   打开英语提示 (toggle-company-english-helper)
** 语法检查 syntax check
*** 语法提示开关
 By default tooltips are enabled and used whenever it is possible.
 You can disable them by setting the variable =syntax-checking-enable-tooltips=
 to =nil=:

 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers
     '((syntax-checking :variables syntax-checking-enable-tooltips nil)))
 #+END_SRC

*** 默认提示配置
 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers
     '((syntax-checking :variables syntax-checking-enable-by-default nil)))
 #+END_SRC

 If you want more fine-grained control, you can configure the variable
 =flycheck-global-modes= instead. Note that this variable should be manipulated
 in =dotspacemacs/user-config=.

*** 位图
 If the original flycheck fringe bitmaps are more to your liking, you can set the
 variable =syntax-checking-use-original-bitmaps= to =t=:

 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers
     '((syntax-checking :variables syntax-checking-use-original-bitmaps t)))
 #+END_SRC

*** 键盘绑定
 | ~SPC e b~ | check for errors now                                         |
 | ~SPC e c~ | clear errors                                                 |
 | ~SPC e h~ | describe flycheck checker                                    |
 | ~SPC e l~ | display a list of all the errors                             |
 | ~SPC e L~ | display a list of all the errors and focus the errors buffer |
 | ~SPC e s~ | set flycheck checker                                         |
 | ~SPC e S~ | set flycheck checker executable                              |
 | ~SPC e v~ | verify flycheck setup                                        |
 | ~SPC t s~ | toggle flycheck                                              |
 | ~SPC e x~ | explain the error at point                                   |
** search engine
*** 配置默认浏览器  
    在 dotspacemacs/user-config 段:

#+BEGIN_SRC emacs-lisp
  (setq browse-url-browser-function 'browse-url-generic
        engine/browser-function 'browse-url-generic
        browse-url-generic-program "google-chrome")
#+END_SRC
*** 配置搜索引擎 
    在 dotspacemacs/user-config

#+BEGIN_SRC emacs-lisp
  (push '(custom1
           :name "Custom Search Engine 1"
           :url "http://www.domain.com/s/stuff_sutff_remember_to_replace_search_candidate_with_%s")
          search-engine-alist)
#+END_SRC

** chrome
*** 实时预览 markdown 文件  flymd-flyit(不工作)
** asm layers
** java layers
*** 集成开发工具 ensime   
    1.在工程下执行 sbt ensimeConfig 生成项目
    2.emacs 打开服务并连接服务 ensime 就可以了, 多连接几次，可能在下载依赖
    下面这个可以放在第一个
    3.如要要用 build 功能, 需配置，可以创建一个 project/build.properties
    #+BEGIN_SRC scala
    sbt.version=1.2.6  
    #+END_SRC
    查看版本，可以在 sbt 命令行下，执行 sbtVersion
    这样就可以 build , 和执行了
**** 交互式构建工具 sbt 
     echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
     sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
     sudo apt-get update
     sudo apt-get install sbt
     sbt repositories
**** 选择后端
***** sbt 工程 
      安装 sbt
     
     #+BEGIN_SRC shell
       nix-env --install sbt
     #+END_SRC
***** gradle 工程
      Refer to the [[https://ensime.org/build_tools/gradle/][Ensime installation instructions]] to install the =ensime-gradle=
***** 配置
      Follow [[https://ensime.github.io/build_tools/sbt/][the ENSIME configuration instructions]]. Spacemacs uses
***** 使用
      ~SPC SPC spacemacs/ensime-gen-and-restart~ or ~SPC m D r~ generates a new config
  for a project and starts the server. Afterwards ~SPC SPC ensime~ or ~SPC m D s~
  will suffice do the trick.
***** 注意
      ENSIME is originally built for Scala, so support for java is not complete, in
      particular refactoring doesn't work.
      ensime 原来是为 scala 语言服务的，Java 不完善

**** Ensime key bindings
***** Search
   | Key Binding | Description                                         |
   |-------------+-----------------------------------------------------|
   | ~SPC m /~   | incremental search using =ensime-scalex= major mode |
   | ~SPC m ?~   | incremental search in all live buffers              |

***** Ensime Search Mode
   | Key Binding | Description                                                       |
   |-------------+-------------------------------------------------------------------|
   | ~C-j~       | Move to next match                                                |
   | ~C-k~       | Move to previous match                                            |
   | ~C-i~       | Insert at point import of current result                          |
   | ~RET~       | Jump to the target of the currently selected ensime-search-result |
   | ~C-q~       | Quit ensime search                                                |

***** sbt
   | Key Binding | Description         |
   |-------------+---------------------|
   | ~SPC m b .~ | sbt transient state |
   | ~SPC m b b~ | sbt command         |
   | ~SPC m b c~ | compile             |
   | ~SPC m b C~ | clean command       |
   | ~SPC m b i~ | switch to sbt shell |
   | ~SPC m b p~ | package command     |
   | ~SPC m b r~ | run command         |

***** Typecheck
   | Key Binding | Description                     |
   |-------------+---------------------------------|
   | ~SPC m c t~ | type check the current file     |
   | ~SPC m c T~ | type check all the open buffers |

***** Debug
   | Key Binding | Description                 |
   |-------------+-----------------------------|
   | ~SPC m d A~ | Attach to a remote debugger |
   | ~SPC m d b~ | set breakpoint              |
   | ~SPC m d B~ | clear breakpoint            |
   | ~SPC m d C~ | clear all breakpoints       |
   | ~SPC m d c~ | continue                    |
   | ~SPC m d i~ | inspect value at point      |
   | ~SPC m d n~ | next                        |
   | ~SPC m d o~ | step out                    |
   | ~SPC m d q~ | quit                        |
   | ~SPC m d r~ | run                         |
   | ~SPC m d s~ | step                        |
   | ~SPC m d t~ | backtrace                   |

   *Note:* These key bindings need a transient-state, PR welcome :-)

***** Errors

   | Key Binding | Description                                        |
   |-------------+----------------------------------------------------|
   | ~SPC m e e~ | print error at point                               |
   | ~SPC m e l~ | show all errors and warnings                       |
   | ~SPC m e s~ | switch to buffer containing the stack trace parser |

***** Goto

   | Key Binding | Description          |
   |-------------+----------------------|
   | ~SPC m g g~ | go to definition     |
   | ~SPC m g i~ | go to implementation |
   | ~SPC m g t~ | go to test           |

***** Print and yank types

   |-------------+--------------------------------|
   | ~SPC m h T~ | print full type name at point  |
   | ~SPC m h t~ | print short type name at point |
   | ~SPC m y T~ | yank full type name at point   |
   | ~SPC m y t~ | yank short type name at point  |

***** Documentation, Inspect

   | Key Binding | Description                            |
   |-------------+----------------------------------------|
   | ~SPC m h h~ | show documentation for symbol at point |
   | ~SPC m h u~ | show uses for symbol at point          |
   | ~SPC m i i~ | inspect type at point                  |
   | ~SPC m i I~ | inspect type in other frame            |
   | ~SPC m i p~ | inspect project package                |

***** Server

   | Key Binding | Description                                            |
   |-------------+--------------------------------------------------------|
   | ~SPC m D f~ | reload open files                                      |
   | ~SPC m D r~ | regenerate the =.ensime= and restart the ensime server |
   | ~SPC m D s~ | start ensime server                                    |

***** Refactoring

   | Key Binding | Description                                                          |
   |-------------+----------------------------------------------------------------------|
   | ~SPC m r a~ | add type annotation                                                  |
   | ~SPC m r f~ | format source                                                        |
   | ~SPC m r d~ | get rid of an intermediate variable (=ensime-refactor-inline-local=) |
   | ~SPC m r D~ | get rid of an intermediate variable (=ensime-undo-peek=)             |
   | ~SPC m r i~ | organize imports                                                     |
   | ~SPC m r m~ | extract a range of code into a method                                |
   | ~SPC m r r~ | rename a symbol project wide                                         |
   | ~SPC m r t~ | import type at point                                                 |
   | ~SPC m r v~ | extract a range of code into a variable                              |
   | ~SPC m z~   | expand/contract region                                               |

***** Tests

   | Key Binding | Description              |
   |-------------+--------------------------|
   | ~SPC m t a~ | test command (sbt)       |
   | ~SPC m t r~ | test quick command (sbt) |
   | ~SPC m t t~ | test only (sbt)          |

***** REPL

   | Key Binding | Description                                                         |
   |-------------+---------------------------------------------------------------------|
   | ~SPC m s a~ | ask for a file to be loaded in the REPL                             |
   | ~SPC m s b~ | send buffer to the REPL                                             |
   | ~SPC m s B~ | send buffer to the REPL and focus the REPL buffer in =insert state= |
   | ~SPC m s i~ | start or switch to the REPL inferior process                        |
   | ~SPC m s r~ | send region to the REPL                                             |
   | ~SPC m s R~ | send region to the REPL and focus the REPL buffer in =insert state= |
*** LSP Java
**** Code intelligence shorcuts
 | Key binding   | Description                           |
 |---------------+---------------------------------------|
 | ~SPC m g g~   | Go to definition                      |
 | ~SPC m g r~   | Find references                       |
 | ~SPC m g R~   | Peek references using ~lsp-ui~        |
 | ~SPC m g d~   | Goto type definition                  |
 | ~SPC m g a~   | Search type in project                |
 | ~SPC m g A~   | Search type in project using ~lsp-ui~ |
 | ~SPC m h h~   | Describe thing at point               |
 | ~SPC m e l~   | List project errors/warnings          |
 | ~SPC m p u~   | Refresh user settings                 |
 | ~SPC m e a~   | Execute code action                   |
 | ~SPC m q r~   | Restart workspace                     |
 | ~SPC m r o i~ | Organize imports                      |
 | ~SPC m r r~   | Rename symbol                         |
 | ~SPC m r a i~ | Add import                            |
 | ~SPC m r a m~ | Add unimplemented methods             |
 | ~SPC m r c p~ | Create parameter                      |
 | ~SPC m r c f~ | Create field                          |
 | ~SPC m r e c~ | Extract constant                      |
 | ~SPC m r e l~ | Extract local                         |
 | ~SPC m r e m~ | Extract method                        |
 | ~SPC m c c~   | Build project                         |
 | ~SPC m a n~   | Actionable notifications              |
 | ~SPC m =~     | Format code                           |

**** Debugger shorcuts

 | Key binding   | Description                     |
 |---------------+---------------------------------|
 | ~SPC m d t t~ | Debug test method               |
 | ~SPC m d t c~ | Debug test class                |
 | ~SPC m d j~   | Debug java class(main method).  |
 |---------------+---------------------------------|
 | ~SPC m t t~   | Run test method                 |
 | ~SPC m t c~   | Run test class                  |
 |---------------+---------------------------------|
 | ~SPC m d d d~ | start debugging                 |
 | ~SPC m d d l~ | debug last configuration        |
 | ~SPC m d d r~ | debug recent configuration      |
 |---------------+---------------------------------|
 | ~SPC m d c~   | continue                        |
 | ~SPC m d i~   | step in                         |
 | ~SPC m d o~   | step out                        |
 | ~SPC m d s~   | next step                       |
 | ~SPC m d v~   | inspect value at point          |
 | ~SPC m d r~   | restart frame                   |
 |---------------+---------------------------------|
 | ~SPC m d .~   | debug transient state           |
 |---------------+---------------------------------|
 | ~SPC m d a~   | abandon current session         |
 | ~SPC m d A~   | abandon all process             |
 |---------------+---------------------------------|
 | ~SPC m d e e~ | eval                            |
 | ~SPC m d e r~ | eval region                     |
 | ~SPC m d e t~ | eval value at point             |
 |---------------+---------------------------------|
 | ~SPC m d S s~ | switch session                  |
 | ~SPC m d S t~ | switch thread                   |
 | ~SPC m d S f~ | switch frame                    |
 |---------------+---------------------------------|
 | ~SPC m d I i~ | inspect                         |
 | ~SPC m d I r~ | inspect region                  |
 | ~SPC m d I t~ | inspect value at point          |
 |---------------+---------------------------------|
 | ~SPC m d b b~ | toggle a breakpoint             |
 | ~SPC m d b c~ | change breakpoint condition     |
 | ~SPC m d b l~ | change breakpoint log condition |
 | ~SPC m d b h~ | change breakpoint hit count     |
 | ~SPC m d b a~ | add a breakpoint                |
 | ~SPC m d b d~ | delete a breakpoint             |
 | ~SPC m d b D~ | clear all breakpoints           |
 |---------------+---------------------------------|
 | ~SPC m d '_~  | Run debug REPL                  |
 |---------------+---------------------------------|
 | ~SPC m d w l~ | list local variables            |
 | ~SPC m d w o~ | goto output buffer if present   |
 | ~SPC m d w s~ | list sessions                   |
 | ~SPC m d w b~ | list breakpoints                |

*** Maven
 | Key binding     | Description                                          |
 |-----------------+------------------------------------------------------|
 | ~SPC m m c c~   | Compile                                              |
 | ~SPC m m c C~   | Clean                                                |
 | ~SPC m m c r~   | Clean and compile                                    |
 | ~SPC m m g a~   | Switch between class and test file                   |
 | ~SPC m m g A~   | Switch between class and test file in another window |
 | ~SPC m m t a~   | Run all tests                                        |
 | ~SPC m m t C-a~ | Clean and run all tests                              |
 | ~SPC m m t b~   | Run current buffer tests                             |
 | ~SPC m m t i~   | Test and install                                     |
 | ~SPC m m t t~   | Run a specific test                                  |

*** Gradle
 | Key binding   | Description              |
 |---------------+--------------------------|
 | ~SPC m l c c~ | Compile                  |
 | ~SPC m l c C~ | Clean                    |
 | ~SPC m l c r~ | Clean and compile        |
 | ~SPC m l t a~ | Run all tests            |
 | ~SPC m l t b~ | Run current buffer tests |
 | ~SPC m l t t~ | Run a specific test      |
 | ~SPC m l x~   | Execute a Gradle task    |
*** meghanada
    meghanada 默认只能识别 maven 或 gradle 工程
    要识别非工程的,需要在目录加入 .meghanada.conf 配置文件
** emacs lisp layers
*** 执行 ，e f
*** 调试  
 ，d f 设置断点
 ,  e e 进入调试
 s 步进
  Press ~i~ to go into the =subroutine= where you can press ~s~ to step in
 function or press ~o~ to go out of it.

  Press ~a~ to stop debugging.

*** semantic 格式化代码(美化)
 The [[https://github.com/syl20bnr/spacemacs/blob/develop/layers/%2Bemacs/semantic/README.org][semantic]] layer should be installed for these key bindings to become active.

 | Key Binding | Description             |
 |-------------+-------------------------|
 | ~SPC m = b~ | format current buffer   |
 | ~SPC m = f~ | format current function |
 | ~SPC m = o~ | format all on one line  |
 | ~SPC m = s~ | format current sexp     |

*** 调试
    | Key Binding | Description                                                            |
    |-------------+------------------------------------------------------------------------|
    | ~SPC m d f~ | on a =defun= symbol toggle on the instrumentalisation of the function  |
    | ~SPC m d F~ | on a =defun= symbol toggle off the instrumentalisation of the function |
    | ~SPC m d t~ | insert =(debug)= to print the stack trace and re-evaluate the function |

    In =edebug-mode= (=*Debugging*= is displayed in the minor modes segment of
    the mode line)


    In =debugger-mode= (=Debugger= is displayed in major mode segment of the
    mode line)

** git layer
*** 配置  
**** 全屏显示
     #+BEGIN_SRC emacs-lisp
       (defun dotspacemacs/user-init ()
         (setq-default git-magit-status-fullscreen t))
     #+END_SRC
**** 自动提交仓库
     #+BEGIN_SRC emacs-lisp
       (setq magit-repository-directories '("~/repos/"))
     #+END_SRC
 
**** SVN plugin
     #+BEGIN_SRC emacs-lisp
       (defun dotspacemacs/user-init ()
         (setq-default git-enable-magit-svn-plugin t))
     #+END_SRC
**** (使用自带的提交输入参数方式）Global git commit mode
     #+begin_src emacs-lisp
       (global-git-commit-mode t)
     #+end_src

*** 功能
**** 快捷键
 | Key Binding | Description                                         |                                                   |
 |-------------+-----------------------------------------------------+---------------------------------------------------|
 | ~SPC g b~   | open a =magit= blame                                | 打开历史记录                                      |
 | ~SPC g f f~ | view a file at a specific branch or commit          | 打开某个分支的文件                                |
 | ~SPC g f h~ | show file commits history                           | 显示仓库的提交历史                                |
 | ~SPC g H c~ | clear highlights                                    | 清除高亮                                          |
 | ~SPC g H h~ | highlight regions by age of commits                 | 高亮区域                                          |
 | ~SPC g H t~ | highlight regions by last updated time              | 高亮区域                                          |
 | ~SPC g i~   | initialize a new git repository                     | 初始化仓库                                        |
 | ~SPC g I~   | open=helm-gitignore=                                | 打开 helm-gitignore 模板                            |
 | ~SPC g L~   | open magit-repolist                                 | 打开仓库列表，需设置 magit-repository-directories |
 | ~SPC g s~   | open a =magit= status window                        | 打开仓库状态                                      |
 | ~SPC g S~   | stage current file                                  | 存储当前文件                                      |
 | ~SPC g m~   | magit dispatch popup                                | 弹出 magit 功能                                     |
 | ~SPC g M~   | display the last commit message of the current line | 显示当前行的提交消息                              |
 | ~SPC g t~   | launch the git time machine                         | 显示每个提交的内容                                |
 | ~SPC g U~   | unstage current file                                | 撤销存储当前文件                                  |
 |-------------+-----------------------------------------------------+---------------------------------------------------|

 Magit 状态  快捷键

  | Key Binding | Description                                                         |                          |
  |-------------+---------------------------------------------------------------------+--------------------------|
  | ~$~         | open =command output buffer=                                        | 打开                     |
  | ~c c~       | open a =commit message buffer=                                      | 打开提交缓存             |
  | ~b b~       | checkout a branch                                                   | 签出分支                 |
  | ~b c~       | create a branch                                                     | 创建分支                 |
  | ~f f~       | fetch changes                                                       | 拉取                     |
  | ~F (r) u~   | pull tracked branch and rebase                                      |                          |
  | ~gr~        | refresh                                                             | 刷新状态                 |
  | ~l l~       | open =log buffer=                                                   | 打开日志                 |
  | ~o~         | revert item at point                                                |                          |
  | ~P u~       | push to tracked branch                                              |                          |
  | ~P m~       | push to matching branch  (e.g., upstream/develop to origin/develop) |                          |
  | ~q~         | quit                                                                | 退出界面                 |
  | ~s~         | on a file or hunk in a diff: stage the file or hunk                 | 存储                     |
  | ~x~         | discard changes   复原                                              |                          |
  | ~+~         | on a hunk: increase hunk size                                       |                          |
  | ~-~         | on a hunk: decrease hunk size                                       |                          |
  | ~S~         | stage all                                                           | 存储所有                 |
  | ~TAB~       | on a file: expand/collapse diff                                     | 显示修改(与最近提交差异) |
  | ~u~         | on a staged file: unstage                                           | 取消存储                 |
  | ~U~         | unstage all staged files                                            | 取消所有存储             |
  | ~z z~       | stash changes                                                       | 隐藏改变                 |
  |             |                                                                     |                          |
 
    提交信息 ~C-c C-c~ , 取消   ~C-c C-k~
**** Interactive rebase buffer

  | Key Binding | Description    |
  |-------------+----------------|
  | ~c~ or ~p~  | pick           |
  | ~e~         | edit           |
  | ~f~         | fixup          |
  | ~j~         | go down        |
  | ~M-j~       | move line down |
  | ~k~         | go up          |
  | ~M-k~       | move line up   |
  | ~d~ or ~x~  | kill line      |
  | ~r~         | reword         |
  | ~s~         | squash         |
  | ~u~         | undo           |
  | ~y~         | insert         |
  | ~!~         | execute        |

**** 快速指导
  - 修改提交的消息 Amend(修改）a commit:
    - ~l l~ to open =log buffer=
    - ~c a~ on the commit you want to amend
    - ~​,​c~ or ~C-c C-c~ to submit the changes
  - Squash(压扁）last commit:
    - ~l l~ to open =log buffer=
    - ~r e~ on the second to last commit, it opens the =rebase buffer=
    - ~j~ to put point on last commit
    - ~s~ to squash it
    - ~​,​c~ or ~C-c C-c~ to continue to the =commit message buffer=
    - ~​,​c~ or ~C-c C-c~ again when you have finished to edit the commit message
  - Force push a squashed commit:
    - in the =status buffer= you should see the new commit unpushed and the old
      commit unpulled
    - ~P -f P~ for force a push (*beware* usually it is not recommended to rewrite
      the history of a public repository, but if you are *sure* that you are the
      only one to work on a repository it is ok - i.e. in your fork).
  - Add upstream remote (the parent repository you have forked):
    - ~M~ to open the =remote popup=
    - ~a~ to add a remote, type the name (i.e. =upstream=) and the URL
  - Pull changes from upstream (the parent repository you have forked) and push:
    - ~F -r C-u F~ and choose =upstream= or the name you gave to it
    - ~P P~ to push the commit to =origin=

**** 历史明细 Git time machine
     [[https://github.com/pidu/git-timemachine][git-timemachine]] allows to quickly browse the commits of the current buffer.

  | Key Binding | Description                                        |
  |-------------+----------------------------------------------------|
  | ~SPC g t~   | start git timemachine and initiate transient-state |
  | ~c~         | show current commit                                |
  | ~n~         | show next commit                                   |
  | ~N~         | show previous commit                               |
  | ~p~         | show previous commit                               |
  | ~q~         | leave transient-state and git timemachine          |
  | ~Y~         | copy current commit hash                           |

**** Git links to web services
  These key bindings allow to quickly construct URLs pointing to a given commit
  or lines in a file hosted on Git web services like GitHub, GitLab, Bitbucket...

  | Key Binding | Description                                                            |
  |-------------+------------------------------------------------------------------------|
  | ~SPC g l c~ | on a commit hash, browse to the current file at this commit            |
  | ~SPC g l C~ | on a commit hash, create link to the file at this commit and copy it   |
  | ~SPC g l l~ | on a region, browse to file at current lines position                  |
  | ~SPC g l L~ | on a region, create a link to the file highlighting the selected lines |

  *Notes:*
  - You can use the universal argument ~SPC u~ to select a remote repository.
  - When the link is opened, the URL is also copied in the kill ring, you can
    override this behavior by setting the variable =git-link-open-in-browser= to
    =nil=.

** github layer
*** 特点:
    拉取请求 
    git 功能 
    浏览 gist
    地址生成
    克隆仓库 
   
*** 安装
**** 配置 token
  You will need to generate a [[https://github.com/settings/tokens][personal access token]] on GitHub. This token should
  have the =gist= and =repo= permissions. Once this token is created, it needs to
  be added to your =~/.gitconfig=

  You will also need to [[https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/][generate an SSH key]] and [[https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/][add it to your GitHub account]].

  #+BEGIN_SRC sh
    git config --global github.oauth-token <token>
  #+END_SRC

**** Hub configuration
  For now, =Magithub= 需要 requires the =hub= 功能 utility to work -- before trying to use
  Magithub, follow the installation instructions at hub.github.com. To force hub
  to authenticate, you can use hub browse in a terminal (inside a GitHub repo).
*** Key Bindings(键盘绑定)
**** magit-gh-pulls
  In a =magit status= buffer (~SPC g s~):

  | Key Binding | Description                                                 |
  |-------------+-------------------------------------------------------------|
  | ~# c~       | create a pull request                                       |
  | ~# g~       |获取拉取请求列表 get a list of (or reload) all PRs in the current repository |
  | ~# f~       |获取提交次数 fetch the commits associated with the current PR at point |
  | ~# b~       | create a branch for the current PR at point                 |
  | ~# m~       | merge the PR with current branch at point                   |
  | ~# d~       | show a diff of the current pull request at point            |
  | ~# o~       | open PR at point in browser                                 |

  Note that =magit-gh-pulls= will try to fast-forward the PRs whenever it is
  possible.

**** magithub
  | Key Binding | Description                                      |
  |-------------+--------------------------------------------------|
  | ~@ H~       | 在浏览器打开仓库 opens the current repository in the browser |
  | ~@ c~       | pushes a brand-new local repository up to GitHub |
  | ~@ f~       | create a fork of an existing repository          |
  | ~@ p~       | submit pull request upstream                     |
  | ~@ i~       | create an issue                                  |

**** gist.el

  | Key Binding | Description                                   |
  |-------------+-----------------------------------------------|
  | ~SPC g g b~ | 创建公开的要点 create a public gist with the buffer content |
  | ~SPC g g B~ | create a private gist with the buffer content |
  | ~SPC g g l~ | open the gist list buffer                     |
  | ~SPC g g r~ | create a public gist with the region content  |
  | ~SPC g g R~ | create a private gist with the region content |

  In the gist list buffer:

  | Key Binding | Description                  |
  |-------------+------------------------------|
  | ~/~         | evil search                  |
  | ~+~         | add buffer to gist           |
  | ~-~         | remove file for gist         |
  | ~b~ or ~o~  | open current gist in browser |
  | ~f~         | fetch current gist           |
  | ~g~         | refresh the list             |
  | ~h~         | go left                      |
  | ~j~         | go down                      |
  | ~k~         | go up                        |
  | ~K~         | kill current gist            |
  | ~l~         | go right                     |
  | ~n~         | next search occurrence       |
  | ~N~         | next previous occurrence     |
  | ~v~         | =visual state=               |
  | ~V~         | =visual-line state=          |
  | ~y~         | print URL and copy it        |

**** Clone repositories

  | Key Binding   | Description                                              |
  |---------------+----------------------------------------------------------|
  | ~SPC g h c /~ | search for a repository to clone it                      |
  | ~SPC g h c c~ | clone and optionally fork repository                     |
  | ~SPC g h c r~ | add a remote that is an existing fork of selected remote |
  | ~SPC g h c f~ | fork remote in current user namespace                    |
  | ~SPC g h c u~ | add upstream as remote                                   |
 <!-- GFM-TOC -->
** cmake
*** 配置
    #+BEGIN_SRC emacs-lisp

    #+END_SRC

** org layers                 
*** 功能
**** 导出到 Markdown 格式
 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers '(
     (org :variables org-enable-github-support t)))
 #+END_SRC

**** Twitter Bootstrap support
 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers '(
     (org :variables
          org-enable-bootstrap-support t)))
 #+END_SRC

**** 绘制图表 Gnuplot support
 Org-mode supports the plotting of data within tables through [[http://www.gnuplot.info/][Gnuplot]] as
 demonstrated [[http://orgmode.org/worg/org-tutorials/org-plot.html][here]].

 Unfortunately, this is [[https://github.com/bruceravel/gnuplot-mode/issues/15][not terribly well supported]] on Windows,
 at this stage. To disable the configuration of gnuplot support - add
 the =gnuplot= package to your =dotspacemacs-excluded-packages= variable.

**** 简报 Reveal.js support
 To enable the export of org files as a [[http://lab.hakim.se/reveal-js/][reveal.js]] presentation - set the
 variable =org-enable-reveal-js-support= to =t=.
 This would install the [[https://github.com/yjwen/org-reveal/][org-reveal]] Emacs extension.

 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers
    '((org :variables org-enable-reveal-js-support t)))
 #+END_SRC

 Then the extension needs to be pointed to the =reveal.js= itself.
 So [[https://github.com/hakimel/reveal.js/releases][download]] =reveal.js= and point =org-reveal-root= to the path,
 as it described in the [[https://github.com/yjwen/org-reveal#set-the-location-of-revealjs][manual]].

 Alternatively, add the following line to each =.org= file you want to process:

 #+BEGIN_EXAMPLE
   #+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
 #+END_EXAMPLE

**** 日记 Org-journal support
 [[https://github.com/bastibe/org-journal][org-journal]] is a simple journal management system that:
 - 每个日记保存一个文件 Keeps a separate journal file for each day inside a directory
 - 日记总是代办事项 New daily file would always migrate entries with chosen TODO states
 - 日记加密函数 Has journal encryption functionality
 - Easily integrates with org-agenda and Emacs calendar, iCalendar,
   allows scheduling
 - Easily integrates with org-capture

 To install org-journal - set the variable =org-enable-org-journal-support= to
 =t=.

 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers '(
     (org :variables
          org-enable-org-journal-support t)))
 #+END_SRC

 By default, journal files are stored in =~/Documents/journal/=. To override
 this - set =org-journal-dir= variable in the =dotspacemacs/user-config=:

 #+BEGIN_SRC emacs-lisp
   (setq org-journal-dir "~/org/journal/")
 #+END_SRC

 To change the journal file name format - alter =org-journal-file-format=:

 #+BEGIN_SRC emacs-lisp
   (setq org-journal-file-format "%Y-%m-%d")
 #+END_SRC

 *Warning:* setting =org-journal-file-format= to include a file extension like
 =%Y-%m-%d.org= would break the calendar search functionality.

 By default, journal files are started with a first level heading (=*=) followed
 by the date in the form set by locale. To format journal files differently:
 - alter =org-journal-date-prefix= and =org-journal-date-format=.
   For example, to have new journal files created with this header:

   #+BEGIN_EXAMPLE
     #+TITLE: Tuesday, September 06 2016
   #+END_EXAMPLE

 - define the following in =dotspacemacs/user-config=:

   #+BEGIN_SRC emacs-lisp
     (setq org-journal-date-prefix "#+TITLE: ")
     (setq org-journal-date-format "%A, %B %d %Y")
   #+END_SRC

 The default entry is a second level heading (=** =) followed by a timestamp. If
 you start your journal files with a Title as shown above you may want to adjust
 entries to start at the first level heading and you may want to change or omit
 the timestamp.

 #+BEGIN_SRC emacs-lisp
   (setq org-journal-time-prefix "* ")
   (setq org-journal-time-format "")
 #+END_SRC

 Any of the org-journal settings can be configured in =dotspacemacs/user-config=
 or defined alongside the layer itself.

 For example:

 #+CAPTION: Configure org-journal with the layer

 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers '(
     (org :variables
         org-enable-org-journal-support t
         org-journal-dir "~/org/journal/"
         org-journal-file-format "%Y-%m-%d"
         org-journal-date-prefix "#+TITLE: "
         org-journal-date-format "%A, %B %d %Y"
         org-journal-time-prefix "* "
         org-journal-time-format "")
   )
 #+END_SRC

**** Hugo support
 To install the Org exporter [[https://ox-hugo.scripter.co][ox-hugo]] that generates [[https://gohugo.io][Hugo]] -compatible Markdown
 /plus/ TOML/YAML front-matter, set the variable =org-enable-hugo-support= to
 =t=.

 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers '(
     (org :variables
          org-enable-hugo-support t)))
 #+END_SRC

**** Trello support
 To install Trello support set the variable =org-enable-trello-support= to =t=.

 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers '(
     (org :variables
          org-enable-trello-support t)))
 #+END_SRC

**** Different bullets
 You can tweak the bullets displayed in the org buffer in the function
 =dotspacemacs/user-config= of your dotfile by setting the variable
 =org-bullets-bullet-list=. By default the list is set to =("◉" "○" "✸" "✿")=.

 #+BEGIN_SRC emacs-lisp
   (setq org-bullets-bullet-list '("■" "◆" "▲" "▶"))
 #+END_SRC

 You can disable the fancy bullets entirely by adding =org-bullets= to =dotspacemacs-excluded-packages=.

 #+BEGIN_SRC emacs-lisp
   (dotspacemacs-excluded-packages '(org-bullets))
 #+END_SRC

**** Project support
 Set the layer variable =org-projectile-file= to the filename where you want to
 store project-specific TODOs. If this is an absolute path, all todos will be
 stored in the same file (organized by project), whereas if it is just a single
 filename, todos will be stored in each project root.

 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers
     '((org :variables org-projectile-file "TODOs.org")))
 #+END_SRC

 The TODO files are not added to the agenda automatically. You can do this with
 the following snippet. Note that this may have unintended consequences until
 [[https://github.com/IvanMalison/org-projectile/issues/10][this bug]] is fixed.

 #+BEGIN_SRC emacs-lisp
   (with-eval-after-load 'org-agenda
     (require 'org-projectile)
     (mapcar '(lambda (file)
                    (when (file-exists-p file)
                      (push file org-agenda-files)))
             (org-projectile-todo-files)))
 #+END_SRC

**** 脑图 Org-brain support
 For Emacs 25 or later, support for [[https://kungsgeten.github.io/org-brain.html][org-brain]] is included. See the [[https://github.com/Kungsgeten/org-brain][org-brain
 package documentation]] for more information.

**** Mode line support
 To temporarily enable mode line display of org clock, press ~SPC t m c~.

 To permanently enable mode line display of org clock, add this snippet to your
 =dotspacemacs/user-config= function:

 #+BEGIN_SRC elisp
   (setq spaceline-org-clock-p t)
 #+END_SRC

*** 键盘绑定
**** 待办 
 | ~SPC a o #~   | 显示过期的代办                                                            |
 | ~SPC a o /~   | 查找 在 org 代办中                                                          |
 | ~SPC a o a~   | 显示代办 list                                                             |
 | ~SPC a o c~   | 抓取到代办中 org capture                                                  |
 | ~SPC a o e~   | 保存代办视图 org store agenda views                                       |
 | ~SPC a o f i~ | org feed goto inbox                                                       |
 | ~SPC a o f u~ | org feed update all                                                       |
 | ~SPC a o C c~ | org cancel clock                                                          |
 | ~SPC a o C g~ | org goto last clocked-in clock (go to specific recent clock with ~SPC u~) |
 | ~SPC a o C i~ | org clock in                                                              |
 | ~SPC a o C I~ | org clock in last                                                         |
 | ~SPC a o C j~ | org jump to current clock                                                 |
 | ~SPC a o C o~ | org clock out                                                             |
 | ~SPC a o C r~ | org resolve clocks                                                        |
 | ~SPC a o l~   | org store link                                                            |
 | ~SPC a o m~   | tags 视图 org tags view                                                      |
 | ~SPC a o o~   | org agenda                                                                |
 | ~SPC a o s~   | org search view                                                           |
 | ~SPC a o t~   | 代办列表 list                                                         |
 | ~SPC C c~     | org-capture                                                               |

**** 开关
 | Key binding | Description                                   |
 |-------------+-----------------------------------------------|
 | ~SPC m T c~ | org-toggle-checkbox                           |
 | ~SPC m T e~ | org-toggle-pretty-entities                    |
 | ~SPC m T i~ | org-toggle-inline-images                      |
 | ~SPC m T l~ | org-toggle-link-display                       |
 | ~SPC m T t~ | org-show-todo-tree                            |
 | ~SPC m T T~ | org-todo                                      |
 | ~SPC m T V~ | toggle =space-doc-mode= a read-only view mode |
 | ~SPC m T x~ | org-preview-latex-fragment                    |

**** Org with evil-org-mode
 Please see the [[https://github.com/Somelauw/evil-org-mode/blob/master/doc/keythemes.org][evil-org documentation]] for additional instructions on customizing
 =evil-org-mode=.

 | Key binding   | Description                              |
 |---------------+------------------------------------------|
 | ~gj~ / ~gk~   | 同级导航 Next/previous element (heading) |
 | ~gh~ / ~gl~   | 上级导航 Parent/child element (heading)   |
 | ~gH~          | 最顶层 Root heading                         |
 | ~ae~          | Element text object                      |
 | ~ar~          | Subtree text object                      |
 | ~M-j~ / ~M-k~ | Move heading                             |
 | ~M-h~ / ~M-l~ | Promote or demote heading                |
 | ~M-J~ / ~M-K~ | Move subtree                             |
 | ~M-H~ / ~M-L~ | Promote or demote subtree                |
 | ~>>~ / ~<<~   | Promote or demote heading                |

 If the layer variable =org-want-todo-bindings= is true, the following bindings
 are also available.

 | Key bindings | Description                         |
 |--------------+-------------------------------------|
 | ~t~          | Cycle TODO state of current heading |
 | ~T~          | Insert new TODO heading             |
 | ~M-t~        | Insert new TODO sub-heading         |

**** 表格操作 SPC m t

 | Key binding   | Description                                                                |
 |---------------+----------------------------------------------------------------------------|
 | ~SPC m t a~   | Align the table at point by aligning all vertical bars                     |
 | ~SPC m t b~   | Blank the current table field or active region                             |
 | ~SPC m t c~   | Convert from =org-mode= table to table.el and back                         |
 | ~SPC m t d c~ | Delete a column from the table                                             |
 | ~SPC m t d r~ | Delete the current row or horizontal line from the table                   |
 | ~SPC m t e~   | Replace the table field value at the cursor by the result of a calculation |
 | ~SPC m t E~   | Export table to a file, with configurable format                           |
 | ~SPC m t h~   | Go to the previous field in the table                                      |
 | ~SPC m t H~   | Move column to the left                                                    |
 | ~SPC m t i c~ | Insert a new column into the table                                         |
 | ~SPC m t i h~ | Insert a horizontal-line below the current line into the table             |
 | ~SPC m t i H~ | Insert a hline and move to the row below that line                         |
 | ~SPC m t i r~ | Insert a new row above the current line into the table                     |
 | ~SPC m t I~   | Import a file as a table                                                   |
 | ~SPC m t j~   | Go to the next row (same column) in the current table                      |
 | ~SPC m t J~   | Move table row down                                                        |
 | ~SPC m t K~   | Move table row up                                                          |
 | ~SPC m t l~   | Go to the next field in the current table, creating new lines as needed    |
 | ~SPC m t L~   | Move column to the right                                                   |
 | ~SPC m t n~   | Query for a size and insert a table skeleton                               |
 | ~SPC m t N~   | Use the table.el package to insert a new table                             |
 | ~SPC m t p~   | Plot the table using org-plot/gnuplot                                      |
 | ~SPC m t r~   | Recalculate the current table line by applying all stored formulas         |
 | ~SPC m t s~   | Sort table lines according to the column at point                          |
 | ~SPC m t t f~ | Toggle the formula debugger in tables                                      |
 | ~SPC m t t o~ | Toggle the display of Row/Column numbers in tables                         |
 | ~SPC m t w~   | Wrap several fields in a column like a paragraph                           |

**** Trees
 | Key binding   | Description                     |
 |---------------+---------------------------------|
 | ~gj~ / ~gk~   | Next/previous element (heading) |
 | ~gh~ / ~gl~   | Parent/child element (heading)  |
 | ~gH~          | Root heading                    |
 | ~ae~          | Element text object             |
 | ~ar~          | Subtree text object             |
 | ~M-j~ / ~M-k~ | Move heading                    |
 | ~M-h~ / ~M-l~ | Promote or demote heading       |
 | ~M-J~ / ~M-K~ | Move subtree                    |
 | ~M-H~ / ~M-L~ | Promote or demote subtree       |
 | ~>>~ / ~<<~   | Promote or demote heading       |
 | ~TAB~         | org-cycle                       |
 | ~SPC m s a~   | Toggle archive tag for subtree  |
 | ~SPC m s A~   | Archive subtree                 |
 | ~SPC m s b~   | org-tree-to-indirect-buffer     |
 | ~SPC m s l~   | org-demote-subtree              |
 | ~SPC m s h~   | org-promote-subtree             |
 | ~SPC m s k~   | org-move-subtree-up             |
 | ~SPC m s j~   | org-move-subtree-down           |
 | ~SPC m s n~   | org-narrow-to-subtree           |
 | ~SPC m s N~   | widen narrowed subtree          |
 | ~SPC m s r~   | org-refile                      |
 | ~SPC m s s~   | show sparse tree                |
 | ~SPC m s S~   | sort trees                      |

**** Element insertion

 | Key binding   | Description                      |
 |---------------+----------------------------------|
 | ~SPC m i d~   | org-insert-drawer                |
 | ~SPC m i D s~ | Take screenshot                  |
 | ~SPC m i D y~ | Yank image url                   |
 | ~SPC m i e~   | org-set-effort                   |
 | ~SPC m i f~   | org-insert-footnote              |
 | ~SPC m i H~   | org-insert-heading-after-current |
 | ~SPC m i h~   | org-insert-heading               |
 | ~SPC m i K~   | spacemacs/insert-keybinding-org  |
 | ~SPC m i l~   | org-insert-link                  |
 | ~SPC m i n~   | org-add-note                     |
 | ~SPC m i p~   | org-set-property                 |
 | ~SPC m i s~   | org-insert-subheading            |
 | ~SPC m i t~   | org-set-tags                     |

**** Links

 | Key binding | Description       |
 |-------------+-------------------|
 | ~SPC m x o~ | org-open-at-point |

**** Babel / Source Blocks

 | Key binding | Description                              |
 |-------------+------------------------------------------|
 | ~SPC m b .~ | Enter Babel Transient State              |
 | ~SPC m b a~ | org-babel-sha1-hash                      |
 | ~SPC m b b~ | org-babel-execute-buffer                 |
 | ~SPC m b c~ | org-babel-check-src-block                |
 | ~SPC m b d~ | org-babel-demarcate-block                |
 | ~SPC m b e~ | org-babel-execute-maybe                  |
 | ~SPC m b f~ | org-babel-tangle-file                    |
 | ~SPC m b g~ | org-babel-goto-named-src-block           |
 | ~SPC m b i~ | org-babel-lob-ingest                     |
 | ~SPC m b I~ | org-babel-view-src-block-info            |
 | ~SPC m b j~ | org-babel-insert-header-arg              |
 | ~SPC m b l~ | org-babel-load-in-session                |
 | ~SPC m b n~ | org-babel-next-src-block                 |
 | ~SPC m b o~ | org-babel-open-src-block-result          |
 | ~SPC m b p~ | org-babel-previous-src-block             |
 | ~SPC m b r~ | org-babel-goto-named-result              |
 | ~SPC m b s~ | org-babel-execute-subtree                |
 | ~SPC m b t~ | org-babel-tangle                         |
 | ~SPC m b u~ | org-babel-goto-src-block-head            |
 | ~SPC m b v~ | org-babel-expand-src-block               |
 | ~SPC m b x~ | org-babel-do-key-sequence-in-edit-buffer |
 | ~SPC m b z~ | org-babel-switch-to-session              |
 | ~SPC m b Z~ | org-babel-switch-to-session-with-code    |

***** Org Babel Transient State
 Use ~SPC m b .~ to enter a transient state for quick source block navigation and
 execution. During that state, the following bindings are active:

 | Key binding | Description                   |
 |-------------+-------------------------------|
 | ~'~         | edit source block             |
 | ~e~         | execute source block          |
 | ~g~         | jump to named source block    |
 | ~j~         | jump to next source block     |
 | ~k~         | jump to previous source block |
 | ~z~         | recenter buffer in window     |
 | ~q~         | leave transient state         |

**** Emphasis

 | Key binding | Description                |
 |-------------+----------------------------|
 | ~SPC m x b~ | make region bold           |
 | ~SPC m x c~ | make region code           |
 | ~SPC m x i~ | make region italic         |
 | ~SPC m x r~ | clear region emphasis      |
 | ~SPC m x s~ | make region strike-through |
 | ~SPC m x u~ | make region underline      |
 | ~SPC m x v~ | make region verbose        |

**** Navigating in calendar

 | Key binding | Description        |
 |-------------+--------------------|
 | ~M-l~       | One day forward    |
 | ~M-h~       | One day backward   |
 | ~M-j~       | One week forward   |
 | ~M-k~       | One week backward  |
 | ~M-L~       | One month forward  |
 | ~M-H~       | One month backward |
 | ~M-J~       | One year forward   |
 | ~M-K~       | One year backward  |

**** Capture buffers and src blocks
 =org-capture-mode= and =org-src-mode= both support the confirm and abort
 conventions.

 | Key binding                                  | Description                            |
 |----------------------------------------------+----------------------------------------|
 | ~SPC m <dotspacemacs-major-mode-leader-key>~ | confirm in =org-capture-mode=          |
 | ~SPC m '​~                                    | confirm in =org-src-mode=              |
 | ~SPC m c~                                    | confirm                                |
 | ~SPC m a~                                    | abort                                  |
 | ~SPC m k~                                    | abort                                  |
 | ~SPC m r~                                    | org-capture-refile in org-capture-mode |
 #+TBLFM: 

**** Org agenda
***** Key bindings
 The evilified org agenda supports the following bindings:

 | Key binding          | Description                       |
 |----------------------+-----------------------------------|
 | ~M-SPC~ or ~s-M-SPC~ | org-agenda transient state        |
 | ~SPC m a~            | org-agenda                        |
 | ~SPC m C c~          | org-agenda-clock-cancel           |
 | ~SPC m C i~          | org-agenda-clock-in               |
 | ~SPC m C o~          | org-agenda-clock-out              |
 | ~SPC m C p~          | org-pomodoro (if package is used) |
 | ~SPC m d d~          | org-agenda-deadline               |
 | ~SPC m d s~          | org-agenda-schedule               |
 | ~SPC m i e~          | org-agenda-set-effort             |
 | ~SPC m i p~          | org-agenda-set-property           |
 | ~SPC m i t~          | org-agenda-set-tags               |
 | ~SPC m s r~          | org-agenda-refile                 |
 | ~M-j~                | next item                         |
 | ~M-k~                | previous item                     |
 | ~M-h~                | earlier view                      |
 | ~M-l~                | later view                        |
 | ~gr~                 | refresh                           |
 | ~gd~                 | toggle grid                       |
 | ~C-v~                | change view                       |
 | ~RET~                | org-agenda-goto                   |
 | ~M-RET~              | org-agenda-show-and-scroll-up     |

***** Org agenda transient state
 Use ~M-SPC~ or ~s-M-SPC~ in an org agenda buffer to activate its transient state.
 The transient state aims to list the most useful org agenda commands and
 visually organize them by category. The commands associated with each binding
 are listed bellow.

 | Key binding | Description         | Command                           |
 |-------------+---------------------+-----------------------------------|
 | Entry       |                     |                                   |
 |-------------+---------------------+-----------------------------------|
 | ~ht~        | set status          | org-agenda-todo                   |
 | ~hk~        | kill                | org-agenda-kill                   |
 | ~hR~        | refile              | org-agenda-refile                 |
 | ~hA~        | archive             | org-agenda-archive-default        |
 | ~h:~        | set tags            | org-agenda-set-tags               |
 | ~hp~        | set priority        | org-agenda-priority               |
 |-------------+---------------------+-----------------------------------|
 | Visit entry |                     |                                   |
 |-------------+---------------------+-----------------------------------|
 | ~SPC~       | in other window     | org-agenda-show-and-scroll-up     |
 | ~TAB~       | & go to location    | org-agenda-goto                   |
 | ~RET~       | & del other windows | org-agenda-switch-to              |
 | ~o~         | link                | link-hint-open-link               |
 |-------------+---------------------+-----------------------------------|
 | Filter      |                     |                                   |
 |-------------+---------------------+-----------------------------------|
 | ~ft~        | by tag              | org-agenda-filter-by-tag          |
 | ~fr~        | refine by tag       | org-agenda-filter-by-tag-refine   |
 | ~fc~        | by category         | org-agenda-filter-by-category     |
 | ~fh~        | by top headline     | org-agenda-filter-by-top-headline |
 | ~fx~        | by regexp           | org-agenda-filter-by-regexp       |
 | ~fd~        | delete all filters  | org-agenda-filter-remove-all      |
 |-------------+---------------------+-----------------------------------|
 | Date        |                     |                                   |
 |-------------+---------------------+-----------------------------------|
 | ~ds~        | schedule            | org-agenda-schedule               |
 | ~dS~        | un-schedule         | org-agenda-schedule               |
 | ~dd~        | set deadline        | org-agenda-deadline               |
 | ~dD~        | remove deadline     | org-agenda-deadline               |
 | ~dt~        | timestamp           | org-agenda-date-prompt            |
 | ~+~         | do later            | org-agenda-do-date-later          |
 | ~-~         | do earlier          | org-agenda-do-date-earlier        |
 |-------------+---------------------+-----------------------------------|
 | Toggle      |                     |                                   |
 |-------------+---------------------+-----------------------------------|
 | ~tf~        | follow              | org-agenda-follow-mode            |
 | ~tl~        | log                 | org-agenda-log-mode               |
 | ~ta~        | archive             | org-agenda-archives-mode          |
 | ~tr~        | clock report        | org-agenda-clockreport-mode       |
 | ~td~        | diaries             | org-agenda-toggle-diary           |
 |-------------+---------------------+-----------------------------------|
 | View        |                     |                                   |
 |-------------+---------------------+-----------------------------------|
 | ~vd~        | day                 | org-agenda-day-view               |
 | ~vw~        | week                | org-agenda-week-view              |
 | ~vt~        | fortnight           | org-agenda-fortnight-view         |
 | ~vm~        | month               | org-agenda-month-view             |
 | ~vy~        | year                | org-agenda-year-view              |
 | ~vn~        | next span           | org-agenda-later                  |
 | ~vp~        | prev span           | org-agenda-earlier                |
 | ~vr~        | reset               | org-agenda-reset-view             |
 |-------------+---------------------+-----------------------------------|
 | Clock       |                     |                                   |
 |-------------+---------------------+-----------------------------------|
 | ~cI~        | in                  | org-agenda-clock-in               |
 | ~cO~        | out                 | org-agenda-clock-out              |
 | ~cq~        | cancel              | org-agenda-clock-cancel           |
 | ~cj~        | jump                | org-agenda-clock-goto             |
 |-------------+---------------------+-----------------------------------|
 | Other       |                     |                                   |
 |-------------+---------------------+-----------------------------------|
 | ~gr~        | reload              | org-agenda-redo                   |
 | ~.~         | go to today         | org-agenda-goto-today             |
 | ~gd~        | go to date          | org-agenda-goto-date              |

**** 番茄时钟 Pomodoro
 | Key binding | Description       |
 |-------------+-------------------|
 | ~SPC m C p~ | starts a pomodoro |

**** Presentation
 org-present must be activated explicitly by typing: ~SPC SPC org-present~

 | Key binding | Description    |
 |-------------+----------------|
 | ~h~         | previous slide |
 | ~l~         | next slide     |
 | ~q~         | quit           |

**** Helm-org-rifle

 | Key binding | Description                                |
 |-------------+--------------------------------------------|
 | ~SPC a o r~ | Search org files for keywords and headings |

**** Org-projectile

 | Key binding       | Description                                             |
 |-------------------+---------------------------------------------------------|
 | ~SPC a o p~       | Capture a TODO for the current project                  |
 | ~SPC u SPC a o p~ | Capture a TODO for any given project (choose from list) |
 | ~SPC p o~         | Go to the TODOs for the current project                 |

**** Org-journal

 | Key binding   | Description            |
 |---------------+------------------------|
 | ~SPC a o j j~ | New journal entry      |
 | ~SPC a o j s~ | Search journal entries |

 Journal entries are highlighted in the calendar. The following key bindings are
 available for =calendar-mode= for navigating and manipulating the journal.

 | Key binding | Description                           |
 |-------------+---------------------------------------|
 | ~SPC m r~   | Read journal entry                    |
 | ~SPC m i~   | Insert journal entry for date         |
 | ~SPC m n~   | Next journal entry                    |
 | ~SPC m p~   | Previous journal entry                |
 | ~SPC m s~   | Search all journal entries            |
 | ~SPC m w~   | Search calendar week journal entries  |
 | ~SPC m m~   | Search calendar month journal entries |
 | ~SPC m y~   | Search calendar year journal entries  |

 While viewing a journal entry in =org-journal-mode= the following key bindings
 are available.

 | Key binding | Description            |
 |-------------+------------------------|
 | ~SPC m j~   | New journal entry      |
 | ~SPC m p~   | Previous journal entry |
 | ~SPC m n~   | Next journal entry     |

**** Org-brain
***** Application bindings

 | Key binding | Description                  |
 |-------------+------------------------------|
 | ~SPC a o b~ | Visualize an org-brain entry |

***** Visualization bindings

 | Key binding | Description                           |
 |-------------+---------------------------------------|
 | ~j / TAB~   | Goto next link                        |
 | ~k / S-TAB~ | Goto previous link                    |
 | ~c~         | Add child                             |
 | ~p~         | Add parent                            |
 | ~l~         | Add resource link                     |
 | ~C-y~       | Paste resource link                   |
 | ~a~         | Add resource [[http://orgmode.org/manual/Attachments.html][attachment]]               |
 | ~o~         | Open and edit the visualized entry    |
 | ~f~         | Find/visit another entry to visualize |
 | ~r~         | Rename this, or another, entry        |
 |             |                                       |
** gtags
*** 安装
**** GNU Global (gtags)
     To use gtags, you first have to install [[https://www.gnu.org/software/global/download.html][GNU Global]].

  You can install =global= from the software repository of your OS; however, many
  OS distributions are out of date, and you will probably be missing support for
  =pygments= and =exuberant ctags=, and thus support for many languages. We
  recommend installing from source. If not for example to install on Ubuntu:

  #+begin_src sh
    sudo apt-get install global
  #+end_src

***** Install on *nix from source
****** Install recommended dependencies
       To take full advantage of global you should install 2 extra packages in
       addition to global: pygments and ctags (exuberant). You can do this using
       your normal OS package manager, e.g., on Ubuntu
       
  #+BEGIN_SRC sh
    sudo apt-get install exuberant-ctags python-pygments
  #+END_SRC


****** Install with recommended features
       Download the latest tar.gz archive, then run these commands:
       
  #+BEGIN_SRC sh
    tar xvf global-6.5.3.tar.gz
    cd global-6.5.3
    ./configure --with-exuberant-ctags=/usr/bin/ctags
    make
    sudo make install
  #+END_SRC

****** Configure your environment to use pygments and ctags
  To be able to use =pygments= and =ctags=, you need to copy the sample
  =gtags.conf= either to =/etc/gtags.conf= or =$HOME/.globalrc=. For example:

  #+begin_src sh
    cp gtags.conf ~/.globalrc
  #+end_src

  Additionally you should define GTAGSLABEL in your shell startup file e.g.
  with sh/ksh:

  #+begin_src sh
    echo export GTAGSLABEL=pygments >> .profile
  #+end_src

***** Conflict between =ctags= and emacs's =etags= binary
  If you installed =emacs= from source after =ctags=, your original =ctags= binary
  is probably replaced by emacs's =etags=. To get around this you will need to
  configure =emacs= as following before installing:

  #+begin_src sh
    ./configure --program-transform-name='s/^ctags$/ctags.emacs/'
  #+end_src

  To check if you have the correct version of =ctags= execute:

  #+begin_src sh
    ctags --version | grep Exuberant
  #+end_src

  If yo do not get any output then it means you have the wrong =ctags= and must
  install it again.

**** Emacs Configuration
  To use this configuration layer, add it to your =~/.spacemacs=. You
  will need to add =gtags= to the existing =dotspacemacs-configuration-layers=.

  #+begin_src emacs-lisp
    (setq dotspacemacs-configuration-layers
          '( ;; ...
            gtags
             ;; ...
            ))
  #+end_src

***** Disabling by default
  If =ggtags-mode= is too intrusive you can disable it by default, by setting the
  layer variable =gtags-enable-by-default= to =nil=.

  #+BEGIN_SRC emacs-lisp
    (setq-default dotspacemacs-configuration-layers
      '((gtags :variables gtags-enable-by-default t)))
  #+END_SRC

  This variable can also be set as a file-local or directory-local variable for
  additional control per project.

*** 使用
  - 首先创建 gtags 数据库文件
    运行 =helm-gtags-create-tags= ~SPC m g c~.
    If the language is not directly supported by GNU Global, you
    can choose =ctags= or =pygments= as a backend to generate tag database.
    如果 =global= 不支持 此语言，那么可以换工具, 或者在终端执行

  - From inside terminal, runs gtags at your project root in terminal:
  #+BEGIN_SRC sh
    cd /path/to/project/root
    gtags
  #+END_SRC

    If the language is not directly supported by =gtags=, and you have not set the
    GTAGSLABEL environment variable, use this command instead:
    如果不支持某语言，用插件来增强
  #+BEGIN_SRC sh
    gtags --gtagslabel=pygments
  #+END_SRC

***** Language Support
****** Built-in languages
  If you do not have =ctags= or =pygments= enabled gtags will only produce
  tags for the following languages:

  - asm
  - c/c++
  - java
  - php
  - yacc

****** Exuberant ctags languages
  If you have enabled =exuberant ctags= and use that as the backend (i.e.,
  =GTAGSLABEL=ctags= or =--gtagslabel=ctags=) the following additional languages
  will have tags created for them:

****** Universal ctags languages
       如果是最新的，还会增加以下语言
  If instead you installed you the newer/beta =universal ctags= and use that
  as the backend (i.e., GTAGSLABEL=ctags or --gtagslabel=ctags) the following
  additional languages will have tags created for them:
****** Pygments languages (plus symbol and reference tags)
  In order to look up symbol references for any language not in the built in
  parser you must use the pygments backend. When this backend is used global
  actually uses both ctags and pygments to find the definitions and uses of
  functions and variables as well as "other symbols".

  If you enabled pygments (the best choice) and use that as the backend (i.e.,
  =GTAGSLABEL=pygments= or =--gtagslabel=pygments=) the following additional
  languages will have tags created for them:

*** 键盘绑定
  | ~SPC m g C~ | create a tag database 第一步，创建标记文件                                   |
  | ~SPC m g f~ | jump to a file in tag database    跳到包含那个 tag 的文件                     |
  | ~SPC m g g~ | jump to a location based on context       这个更精确，调到函数定义           |
  | ~SPC m g G~ | jump to a location based on context (open another window) 另个窗口           |
  | ~SPC m g d~ | find definitions                      跟上面没区别                           |
  | ~SPC m g i~ | present tags in current function only 这个给你选一下 tag 链表,表示可能它会认错 |
  | ~SPC m g l~ | jump to definitions in file           如果这个 tag 是本文件定义的，这个可以用  |
  | ~SPC m g n~ | jump to next location in context stack                                       |
  | ~SPC m g p~ | jump to previous location in context stack                                   |
  | ~SPC m g r~ | find references                         有几个人用了这函数                   |
  | ~SPC m g R~ | resume previous helm-gtags session       看看 tags 文件中有多少 tag            |
  | ~SPC m g s~ | select any tag in a project retrieved by gtags 看看 tags 文件中有多少 tag      |
  | ~SPC m g S~ | show stack of visited locations                                              |
  | ~SPC m g y~ | find symbols   状态栏显示符号                                                |
  | ~SPC m g u~ | manually update tag database 手动更新 tag 数据库                               |
| 〜SPC n  - 〜 | 减少指示点下的数量并启动暂态 |
参数（即〜10 SPC n +〜将点数加 10）
** javascript layer
*** 注释
    | ~SPC m r d b~ | 文件注释      |
    | ~SPC m r d f~ | 函数注释      |
    | ~SPC m r d t~ | tag 注释       |
    | ~SPC m r d h~ | 显示 tag 的用法 |
*** 代码导航
     | ~SPC m C-g~   | 返回　brings you back to last place you were when you pressed M-..                          |
     | ~SPC m g g~   | 跳到定义处 jump to the definition of the thing under the cursor                                |
     | ~SPC m g G~   | 跳到你要的定义处 jump to definition for the given name                                            |
     | ~SPC m h d~   | 帮助文档 find docs of the thing under the cursor. Press again to open the associated URL (if any) |
     | ~SPC m h t~   | 显示光标处的类型 find the type of the thing under the cursor                                      |
     | ~SPC m r r V~ | 重命名变量 rename variable under the cursor using tern                                        |
*** 调试
    : 开一个服务对象，把代码发给浏览器解释器，解释器求值后，发给服务    

    - 空白页 run-skewer   
    - 注入自己的页面 点击右上角三角 Greasemonkey(多试两次) 
    
    | ~SPC m e e~ | 求最后表达式                                                            |
    | ~SPC m s b~ | 执行 buffer                                                              |
    | ~SPC m s f~ | 发送函数给解释器                                                        |
    | ~SPC m s r~ | send current region to the skewer REPL                                  |
    | ~SPC m s R~ | send current region to the skewer REPL and switch to it in insert state |
    | ~SPC m s s~ | 切换到 skewer-repl buffer                                                |
*** 工具配置
**** 后端解释程序配置
     (javascript :variables javascript-backend 'tern)
     如果想自定义后端，可以在项目的根目录文件 =.dir-locals.el= 下定义本地变量
     ;;; 定义本地变量，选择项目的后端 
     ((js2-mode (javascript-backend . lsp)))
**** 代码格式化工具
     添加 web-beautify 层
     (javascript :variables javascript-fmt-tool 'web-beautify)

     也可以自定义项目自身的格式化工具
      ;;;定义格式化工具 
      ((js2-mode (javascript-fmt-tool . prettier)))
**** 后端工具配置
***** tern 
      安装 $ npm install -g tern
      并且 =~/.spacemacs= 加入配置 tern
    
      如果想每个对话都使用当前服务, 需如下配置
      (tern :variables tern-disable-port-files nil)
***** 安装语言服务协议 npm i -g typescript javascript-typescript-langserver
***** 配置 Project configuration
      A .tern-project file is a JSON file in a format like this:
  #+BEGIN_SRC json

  {
    "libs": [
      "browser",
      "jquery"
    ],
    "loadEagerly": [
      "importantfile.js"
    ],
    "plugins": {
      "requirejs": {
        "baseURL": "./",
        "paths": {}
      }
    }
  }
  #+END_SRC

  The libs property refers to the JSON type descriptions that should be loaded into the environment for this project.
   See the defs/ directory for examples. The strings given here will be suffixed with .json, and searched for first in the project’s own dir, and then in the defs/ directory of the Tern distribution.
  libs 表示要载入的预定义插件

  包含 node, jquery, webpack, requirejs, angular, 
  By default, local files are loaded into the Tern server when queries are run on them in the editor. loadEagerly allows you to force some files to always be loaded, it may be an array of filenames or glob patterns (i.e. foo/bar/*.js). The dontLoad option can be used to prevent Tern from loading certain files. It also takes an array of file names or glob patterns.

  The plugins field may hold object used to load and configure Tern plugins. The names of the properties refer to files that implement plugins, either in the project dir or under plugin/ in the Tern directory. Their values are configuration objects that will be passed to the plugins. You can leave them at {} when you don’t need to pass any options.

  You can specify an ecmaVersion field to configure the version of ECMAScript that Tern parses. The default is 6, and leaving it at that should be safe even for ECMAScript 5 code, but you can set it to 5 as well.

  To configure the amount of work Tern is prepared to do to load a single dependency, the dependencyBudget option can be added to a project file. It indicates the maximum size of the files loaded in response to a single dependency (through plugins that load dependencies, such as the node and RequireJS plugins), counted in expressions. The default value is 20 000. Files loaded as dependencies of dependencies count towards the budget of the original dependency.
** php larer
   需要初始化工程 
   cd /root/of/project
   touch .ac-php-conf.json
   
  然后执行 Inside of spacemacs run:
   = ac-php-remake-tags-all =

  | 查关键词  | php-search-documentation |
  | 浏览手册  | php-browse-manual        |
  | 标记函数  | mark-defun               |
  | 跳到定义  | ~SPC m g g~              |
  | jump back | ~C-t~                    |

  phpcbf  代码格式化工具
  phpunit php 单元测试工具
** debug layer
 | ~SPC m d d~ | open cmd buffer |
 | ~bb~        | set break            |
 | ~bc~        | clear break          |
 | ~bd~        | delete break         |
 | ~bs~        | disable break        |
 | ~be~        | enable break         |
 | ~c~         | continue             |
 | ~i~         | step into            |
 | ~J~         | jump to current line |
 | ~o~         | step out             |
 | ~q~         | quit debug           |
 | ~r~         | restart              |
 | ~s~         | step over            |
 | ~S~         | goto cmd buffer      |
 | ~v~         | eval variable        |
** sql layer
 #+BEGIN_SRC emacs-lisp
   (setq-default dotspacemacs-configuration-layers '(
     (sql :variables
          sql-capitalize-keywords t
          sql-capitalize-keywords-blacklist '("name" "varchar"))))
 #+END_SRC
*** 键盘绑定
  | 显示*SQL*buffer| ~SPC m b b~ |
  | 显示数据库中的表 | ~SPC m l a~ |
  | 显示表信息       | ~SPC m l t~ |
  | 发送 buffer 执行   | ~SPC m s b~ |
  | 发送选区执行     | ~SPC m s r~ |

** html layer
*** 键盘绑定
**** Web 文件
     | 实时预览     | ~SPC m i~   |
     | 到对应标签   | ~SPC m g b~ |
     | 到子标签     | ~SPC m g c~ |
     | 导航到父标签 | ~SPC m g p~ |
**** CSS/SCSS
     | quickly navigate CSS rules | ~SPC m g h~ |
*** 缩略元素 C-j 扩展
    - HTML abbreviations
      - Basic tags
        a                       <a href=""></a>
        a.x                    <a class="x" href=""></a>
        a#q.x               <a id="q" class="x" href=""></a>
        a#q.x.y.z          <a id="q" class="x y z" href=""></a>
        #q                     <div id="q"> </div>
        .x                       <div class="x"> </div>
        #q.x                   <div id="q" class="x"> </div>
        #q.x.y.z              <div id="q" class="x y z"> </div>
      - Empty tags
        a/                       <a href=""/>
        a/.x                     <a class="x" href=""/>
        a/#q.x                   <a id="q" class="x" href=""/>
        a/#q.x.y.z               <a id="q" class="x y z" href=""/>
        Self-closing tags
        input[type=text]         <input type="text" name="" value=""/>
        img                      <img src="" alt=""/>
        img>metadata/*2          <img src="" alt=""> <metadata/> <metadata/> </img>
      - Siblings
          a+b                      <a href=""></a> <b></b>
          a+b+c                    <a href=""></a> <b></b> <c></c>
          a.x+b                    <a class="x" href=""></a> <b></b>
          a#q.x+b                  <a id="q" class="x" href=""></a> <b></b>
          a#q.x.y.z+b              <a id="q" class="x y z" href=""></a> <b></b>
          a#q.x.y.z+b#p.l.m.n      <a id="q" class="x y z" href=""></a> <b id="p" class="l m n"></b>
      - Tag expansion
          table+                   <table> <tr> <td> </td> </tr> </table>
          dl+                      <dl> <dt></dt> <dd></dd> </dl>
          ul+                      <ul> <li></li> </ul>
          ul++ol+                  <ul> <li></li> </ul> <ol> <li></li> </ol>
          ul#q.x.y[m=l]            <ul id="q" class="x y" m="l"> <li></li> </ul>
      - Parent > child
         a>b                      <a href=""><b></b></a>
         a>b>c                    <a href=""><b><c></c></b></a>
         a.x>b                    <a class="x" href=""><b></b></a>
         a#q.x>b                  <a id="q" class="x" href=""><b></b></a>
         a#q.x.y.z>b              <a id="q" class="x y z" href=""><b></b></a>
         a#q.x.y.z>b#p.l.m.n      <a id="q" class="x y z" href=""><b id="p" class="l m n"></b></a>
         #q>.x                    <div id="q"> <div class="x"> </div> </div>
         a>b+c                    <a href=""> <b></b> <c></c> </a>
         a>b+c>d                  <a href=""> <b></b> <c><d></d></c> </a>
      - Climb-up
         a>b^c                    <a href=""><b></b></a><c></c>
         a>b>c^d                  <a href=""> <b><c></c></b> <d></d> </a>
         a>b>c^^d                 <a href=""><b><c></c></b></a> <d></d>
      - Multiplication
           a*1                      <a href=""></a>
           a*2                      <a href=""></a> <a href=""></a>
           a/*2                     <a href=""/> <a href=""/>
           a*2+b*2                  <a href=""></a> <a href=""></a> <b></b> <b></b>
           a*2>b*2                  <a href=""> <b></b> <b></b> </a> <a href=""> <b></b> <b></b> </a>
           a>b*2                    <a href=""> <b></b> <b></b> </a>
           a#q.x>b#q.x*2            <a id="q" class="x" href=""> <b id="q" class="x"></b> <b id="q" class="x"></b> </a>
           a#q.x>b/#q.x*2           <a id="q" class="x" href=""> <b id="q" class="x"/> <b id="q" class="x"/> </a>
      - Item numbering
           ul>li.item$*3            <ul> <li class="item1"></li> <li class="item2"></li> <li class="item3"></li> </ul>
           ul>li.item$$$*3          <ul> <li class="item001"></li> <li class="item002"></li> <li class="item003"></li> </ul>
           ul>li.item$@-*3          <ul> <li class="item3"></li> <li class="item2"></li> <li class="item1"></li> </ul>
           ul>li.item$@3*3          <ul> <li class="item3"></li> <li class="item4"></li> <li class="item5"></li> </ul>
           ul>li.item$@-3*3         <ul> <li class="item5"></li> <li class="item4"></li> <li class="item3"></li> </ul>
           a$b$@-/*5                <a1b5/> <a2b4/> <a3b3/> <a4b2/> <a5b1/>
           a.$*2>b.$$@-*3           <a class=\"1\" href=""> <b class=\"03\"></b> <b class=\"02\"></b> <b class=\"01\"></b> </a> <a class=\"2\" href=""> <b class=\"03\"></b> <b class=\"02\"></b> <b class=\"01\"></b> </a>
      - Properties
           b[x]                     <b x=""></b>
           b[x=]                    <b x=""></b>
           b[x=""]                  <b x=""></b>
           b[x=y]                   <b x="y"></b>
           b[x="y"]                 <b x="y"></b>
           b[x="()"]                <b x="()"></b>
           b[x m]                   <b x="" m=""></b>
           b[x= m=""]               <b x="" m=""></b>
           b[x=y m=l]               <b x="y" m="l"></b>
           b/[x=y m=l]              <b x="y" m="l"/>
           b#foo[x=y m=l]           <b id="foo" x="y" m="l"></b>
           b.foo[x=y m=l]           <b class="foo" x="y" m="l"></b>
           b#foo.bar.mu[x=y m=l]    <b id="foo" class="bar mu" x="y" m="l"></b>
           b/#foo.bar.mu[x=y m=l]   <b id="foo" class="bar mu" x="y" m="l"/>
           b[x=y]+b                 <b x="y"></b> <b></b>
           b[x=y]+b[x=y]            <b x="y"></b> <b x="y"></b>
           b[x=y]>b                 <b x="y"><b></b></b>
           b[x=y]>b[x=y]            <b x="y"><b x="y"></b></b>
           b[x=y]>b[x=y]+c[x=y]     <b x="y"> <b x="y"></b> <c x="y"></c> </b>
      - Parentheses
         (a)                      <a href=""></a>
         (a)+(b)                  <a href=""></a> <b></b>
         a>(b)                    <a href=""><b></b></a>
         (a>b)>c                  <a href=""><b></b></a>
         (a>b)+c                  <a href=""><b></b></a> <c></c>
         z+(a>b)+c+k              <z></z> <a href=""><b></b></a> <c></c> <k></k>
         (x)*2                    <x></x> <x></x>
         ((x)*2)                  <x></x> <x></x>
         ((x))*2                  <x></x> <x></x>
         (x>b)*2                  <x><b></b></x> <x><b></b></x>
         (x+b)*2                  <x></x> <b></b> <x></x> <b></b>
      - Text
          a{Click me}              <a href="">Click me</a>
          a>{Click me}*2           <a href=""> Click me Click me </a>
          x{click}+b{here}         <x>click</x> <b>here</b>
          span>{click}+b{here}     <span> click <b>here</b> </span>
          p>{Click}+span{here}+{ to continue} <p> Click <span>here</span> to continue </p>
          p{Click}+span{here}+{ to continue} <p> Click </p> <span>here</span> to continue
      - Filter: HTML with comments
          a.b|c                    <!-- .b --> <a class="b" href=""></a> <!-- /.b -->
          #a>.b|c                  <!-- #a --> <div id="a"> <!-- .b --> <div class="b"> </div> <!-- /.b --> </div> <!-- /#a -->
    - CSS abbreviations
      - Basic Usage
        - p1-2!+m10e+bd1#2s        padding: 1px 2px !important; margin: 10em; border: 1px #222 solid;
      - Keywords
         m                        margin: ;
         bg+                      background: #fff url() 0 0 no-repeat;
         c                        color: #000;
** python layer 
*** 选择后端 
 To choose a default backend set the layer variable =python-backend=:

 #+BEGIN_SRC elisp
   (python :variables python-backend 'anaconda)
   #+END_SRC

    Backend can be chosen on a per project basis using directory local variables
    (files named =.dir-locals.el= at the root of a project), an example to use the
    =lsp= backend:
   可以在 .dir-locals.el 文件中单独配置后端

     ,#+BEGIN_SRC elisp
     ;;; Directory Local Variables
     ;;; For more information see (info "(emacs) Directory Variables")

     ((python-mode (python-backend . lsp)))
 #+END_SRC

 *Note:* you can easily add a directory local variable with ~SPC f v d~.

*** Management of Python versions and virtual environments
**** Manage virtual environments with pyvenv
  A virtual environment provides isolation of your Python package versions. For a
  general overview see [[http://docs.python-guide.org/en/latest/dev/virtualenvs/][this site]]. [[http://virtualenvwrapper.readthedocs.io/en/latest/index.html][Virtualenvwrapper]] which is also explained in the
  previous link, is a program which manages your virtual environments in a central
  location set by the =WORKON_HOME= environment variable.

  Spacemacs integration of virtual environments and virtualenvwrapper is provided
  by the [[https://github.com/jorgenschaefer/pyvenv][pyvenv]] package. It provides the following keybindings:

  | Key Binding | Description                                     |
  |-------------+-------------------------------------------------|
  | ~SPC m V a~ | activate a virtual environment in any directory |
  | ~SPC m V d~ | deactivate active virtual environment           |
  | ~SPC m V w~ | work on virtual environment in =WORKON_HOME=    |

**** Manage multiple Python versions with pyenv
  If you need multiple Python versions (e.g. Python 2 and Python 3) then take a
  look at [[https://github.com/yyuu/pyenv][pyenv]]. It enables the installation and managment of multiple
  Python versions.
  [[https://www.brianthicks.com/post/2015/04/15/automate-your-python-environment-with-pyenv/][This blogpost]] gives a good overview on how to use the tool. Spacemacs
  integration is provided by [[https://github.com/proofit404/pyenv-mode][pyenv mode]] which has the following keybindings.

  | Key Binding | Description                          |
  |-------------+--------------------------------------|
  | ~SPC m v s~ | set a pyenv environment with [[https://github.com/pyenv/pyenv][pyenv]]   |
  | ~SPC m v u~ | unset a pyenv environment with [[https://github.com/pyenv/pyenv][pyenv]] |

  Pyenv can also manage virtual environments for each of the Python versions it
  has installed. Those will be listed alongside your Python versions.

***** Automatic activation of local pyenv version
  A project-specific pyenv version may be written to a file called
  =.python-version= using the [[https://github.com/yyuu/pyenv/blob/master/COMMANDS.md#user-content-pyenv-local][pyenv local]] command.

  Spacemacs can search in parent directories for this file, and automatically set
  the pyenv version. The behavior can be set with the variable
  =python-auto-set-local-pyenv-version= to:
  - =on-visit= (default) set the version when you visit a python buffer,
  - =on-project-switch= set the version when you switch projects,
  - =nil= to disable.

  The same is also possible on pyvenv with a file called =.venv=. The behavior
  can be set with the variable =python-auto-set-local-pyvenv-virtualenv== to:
  - =on-visit= (default) set the virtualenv when you visit a python buffer,
  - =on-project-switch= set the virtualenv when you switch projects,
  - =nil= to disable.

*** Key Bindings
**** Inferior REPL process 在交互模式下, 需 SPC m s i
  Start a Python or iPython inferior REPL process with ~SPC m s i~.
  If =ipython= is available in system executable search paths, =ipython=
  will be used to launch python shell; otherwise, default =python=
  interpreter will be used.  You may change your system executable
  search path by activating a virtual environment.

  Send code to inferior process commands:

  | Key Binding | Description                                     |
  |-------------+-------------------------------------------------|
  | ~SPC m s b~ | send buffer and keep code buffer focused        |
  | ~SPC m s B~ | send buffer and switch to REPL in insert mode   |
  | ~SPC m s f~ | send function and keep code buffer focused 发送光标处函数 |
  | ~SPC m s F~ | send function and switch to REPL in insert mode |
  | ~SPC m s i~ | start inferior REPL process                     |
  | ~SPC m s r~ | send region and keep code buffer focused        |
  | ~SPC m s R~ | send region and switch to REPL in insert mode   |
  | ~CTRL+j~    | next item in REPL history                       |
  | ~CTRL+k~    | previous item in REPL history                   |
**** Running Python Script in shell
  To run a Python script like you would in the shell press ~SPC m c c~
  to start the Python script in comint mode. This is useful when working with
  multiple Python files since the REPL does not reload changes made in other
  modules.

  | Key Binding | Description                                                               |
  |-------------+---------------------------------------------------------------------------|
  | ~SPC m c c~ | Execute current file in a comint shell                                    |
  | ~SPC m c C~ | Execute current file in a comint shell and switch to it in =insert state= |

  *Note:* With the universal argument ~SPC u~ you can enter a new
  compilation command.
 用 spc u spc m c c 可以输入执行脚本的命令, 可以在后面加参数
**** Testing (没装 nose)
  Test commands start with ~m t~. To use the secondary test runner call the
  function with a prefix argument, for example ~SPC u SPC m t a~.
  | No Debug    | Description                                              |
  |-------------+----------------------------------------------------------|
  | ~SPC m t a~ | launch all tests of the project                          |
  | ~SPC m t b~ | launch all tests of the current buffer (same as module)  |
  | ~SPC m t m~ | launch all tests of the current module                   |
  | ~SPC m t s~ | launch all tests of the current suite (only with =nose=) |
  | ~SPC m t t~ | launch the current test (function)                       |

  | Debug       | Description                                                            |
  |-------------+------------------------------------------------------------------------|
  | ~SPC m t A~ | launch all tests of the project in debug mode                          |
  | ~SPC m t B~ | launch all tests of the current buffer (module) in debug mode          |
  | ~SPC m t M~ | launch all tests of the current module in debug mode                   |
  | ~SPC m t S~ | launch all tests of the current suite in debug mode (only with =nose=) |
  | ~SPC m t T~ | launch the current test (function) in debug mode                       |

**** Refactoring

  | Key Binding | Description                          |
  |-------------+--------------------------------------|
  | ~SPC m r i~ | remove unused imports with [[https://github.com/myint/autoflake][autoflake]] |
  | ~SPC m r I~ | sort imports with [[https://pypi.python.org/pypi/isort][isort]]              |

**** Live coding
  Live coding is provided by the [[https://github.com/donkirkby/live-py-plugin][live-py-plugin.]]

  | Key Binding | Description         |
  |-------------+---------------------|
  | ~SPC m l~   | Toggle live-py-mode |

**** Hy REPL process
  Start a Hy inferior repel process with ~SPC m s i~. If =hy= is
  available in system executable search paths, =hy= will be used to
  launch the shell. You may change your system executable search path
  by activating a virtual enviornment.

  Send code to hy REPL commands:

  | Key Binding | Description                                               |
  |-------------+-----------------------------------------------------------|
  | ~SPC m s b~ | send buffer and keep code buffer focused                  |
  | ~SPC m s B~ | switch to REPL                                            |
  | ~SPC m s e~ | send sexp in front of the cursor to the REPL              |
  | ~SPC m s f~ | send function to REPL and stay in buffer                  |
  | ~SPC m s F~ | send function to REPL and switch to repl buffer           |
  | ~SPC m s i~ | start inferior hy repl                                    |
  | ~SPC m s r~ | send current region to the REPL and stay in buffer        |
  | ~SPC m s R~ | send current region to the REPL and switch to repl buffer |

**** Other Python commands

  | Key Binding | Description                                                                  |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC m =~   | Reformat the buffer according to PEP8 using  [[https://github.com/google/yapf][YAPF]]                            |
  | ~SPC m d b~ | toggle a breakpoint using =wdb=, =ipdb=, =pudb= or =pdb=                     |
  | ~SPC m g g~ | go to definition using =anaconda-mode-find-definitions= (~C-o~ to jump back) |
  | ~SPC m g a~ | go to assignment using =anaconda-mode-find-assignments= (~C-o~ to jump back) |
  | ~SPC m g b~ | jump back                                                                    |
  | ~SPC m g u~ | navigate between usages with =anaconda-mode-find-references=                 |
  | ~SPC m h d~ | look for documentation using =helm-pydoc=                                    |
  | ~SPC m h h~ | quick documentation using anaconda                                           |
  | ~SPC m h H~ | open documentation in =firefox= using [[https://github.com/tsgates/pylookup][pylookup]]                               |
  | ~SPC m v s~ | set a pyenv environment with [[https://github.com/pyenv/pyenv][pyenv]]                                           |
  | ~SPC m v u~ | unset a pyenv environment with [[https://github.com/pyenv/pyenv][pyenv]]                                         |
  | ~SPC m V w~ | work on virtual environment in =WORKON_HOME=                                 |
  | ~SPC m V a~ | activate a virtual environment in any directory                              |
  | ~SPC m V d~ | deactivate active virtual environment                                        |
