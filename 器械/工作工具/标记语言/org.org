#+TITLE: org 使用简介
#+DESCRIPTION: org 文档是一种写法简单,但能组织文档结构的方法，适用于单页重上而下的哦。
#+S: org
#+DATE: <2019-06-03 16:49:36>
#+CATEGORIES: 软件使用
#+TAGS: org 

* org 
** 简介  
org 是一种文本，但 org 跟 HTML 一样，是一种结构化的文本，通过宿主(emacs)的渲染，可以方便的导航，阅读文本(里面还能插入图片和超链接)。

org 是用大纲的形式来组织文档的。大纲相当于  *ＨTML* 中的标题，一级标题，两级标题，标题下面可以放子标题，或者插入其他内容，这样方便我们导航全文啦，不像 TXT 文本，找个东西要上下翻页。
  
#+begin_quote
org 功能能满足 HTML 的大部分功能，然而在写法上却要简单的多，使用 *emacs* 环境可以很方便的编写 org 文本 。
#+end_quote

#+HTML: <!-- more -->
 
** 文件结构 
*** 标题 
标题是 org 里面最重要的东西，因为它能组织文档。
           
#+begin_src org                                                      
  ,* 顶级标题           
  ,** 第二级                         
  ,*** 第三级               
      一些文字
  ,*** 第三级
      一些文字
#+end_src
   
在 =emacs= 中， 在标题上按住@@html:<kbd>@@ <tab> @@html:</kbd>@@ ，就能展开或者闭合 =标题下面= 的内容了 
*** 列表
**** 无序列表
以  ~-~,'+' ,或 '*' 开头
**** 有序列表
     以 ~1.~, ~1)~ 开头,或 自定义起始序号 ~[@20]~
*** 抽屉   
    一块折叠内容，可以放置不需要关注的补充说明 
 
    #+begin_src org
      :DRAWERNAME:
      This is inside the drawer.
      :END:
    #+end_src

*** 结构块
    以 ~#+ BEGIN~  开头 ~#+ END~ 结尾的块 是结构块，可以满足不同语义，比如注释，代码显示，引用 等功能。

*** 脚注
一个跳转链接，一般跳转到文章底部的参考来源说明处  [fn:1] 
*** 字体格式化
#+begin_src org
  ,*粗体*
  /斜体/
  +删除线+
  _下划线_
  下标：H_2 O
  上标：E=mc^2
  等宽字：  =git=  或者 ～git～
#+end_src
*** 水平分隔线
五条减号线 ~-----~
-----
** 表
*** 创建表格非常简单
#+begin_src org
  | Name  | Phone | Age |
  |-------+-------+-----|
  | Peter |  1234 |  17 |
  | Anna  |  4321 |  25 |
#+end_src
*** 从规格文本生成表格
~org-table-create-or-convert-from-region~ 
#+begin_src org
  a ,  b, c
  a ,  b, c
#+end_src
*** 电子表格  
相当于 *微软 Excel* 电子表格的功能，能够插入公式来计算表格。
**** 字段定义 
字段的引用方式有两种:  
1. 字母和数字的组合，如 "B3" (第三行的第二个字段)
2. org 的形式，@ROW$COLUMN，如‘@-1$-3’ (上一行的左面第三个字段)

**** 范围定义
表示一段范围用两个点表示，如
- ‘$1..$3’	当前行的 1 到 3 个字段
- ‘$<<<..$>>’	从第三列开始，一直到倒数第二列
- ‘@2$1..@4$3’	 数组的[2,1] 到[4,3] ( 这两个字段之间有 9 个字段 ) (same as ‘A2..C4’)

**** 常量定义
#+begin_src org
,#+CONSTANTS: c=299792458. pi=3.14 eps=2.4e-6
#+end_src

**** Calc 形式的公式语法
#+begin_src org
‘$1+$2’	Sum of first and second field
‘$1+$2;%.2f’	Same, format result to two decimals
‘exp($2)+exp($1)’	Math functions can be used
‘$0;%.1f’	Reformat current cell to 1 decimal
‘($3-32)*5/9’	Degrees F → C conversion
‘$c/$1/$cm’	Hz → cm conversion, using ‘constants.el’
‘tan($1);Dp3s1’	Compute in degrees, precision 3, display SCI 1
#+end_src

**** 对时间的计算
使用 *t*，*T* ,或 *U* 标记,'T' 精确到秒,'U' 精确到分，精确到小时

#+begin_src org
|  Task 1 |   Task 2 |    Total |
|---------+----------+----------|
|    2:12 |     1:47 | 03:59:00 |
|    2:12 |     1:47 |    03:59 |
| 3:02:20 | -2:07:00 |     0.92 |
#+TBLFM: @2$3=$1+$2;T::@3$3=$1+$2;U::@4$3=$1+$2;t
#+end_src

**** 开始计算
- 计算整列的和 ~org-table-sum~
- 使用计算公式 ~org-table-eval-formula~

计算公式写法:
#+begin_src org
  ,#+TBLFM: $2=$1^2::$3=$1^3::$4=$1^4::$5=sqrt($1)::$6=sqrt(sqrt(($1)))
#+end_src
** 超链接
#+begin_src org
  描述性链接
  [[LINK][DESCRIPTION]]
  纯链接 
  [[LINK]]
#+end_src
    
文件内部链接,名字不像超链接,跟某级标题同名的链接 
#+begin_src org 
  [[ TitleA ]]
  [[TitleB][DESCRIPTION]]
#+end_src
也可以链接到表
#+begin_src org
  ,#+NAME: My Target
  | a  | table      |
  |----+------------|
  | of | four cells |
#+end_src
    
Radio Targets: 相当于 ~HTML~ 中的锚点，内部跳转用的。
#+begin_src org
  <<<目标>>>
#+end_src
    

链接格式 
#+begin_src org
  [[file:~/code/main.c::255]]
  [[file:~/xx.org::My Target]]
  [[file:~/xx.org::*My Target]]
  [[file:~/xx.org::#my-custom-id]]
  [[file:~/xx.org::/regexp/]]
#+end_src
** TODO Items (代办事项)
在 org 中，凡是标题条目含有 ~TODO~ , ~DONE~ 等字样，那么就可以按照代办条目进行处理，我们处理大任务时，通常分解成几个小任务

如下:
#+begin_src org
   ,** TODO 大任务 
   ,*** TODO 任务 1
   ,*** DONE 任务 2
   CLOSED: [2020-09-14 一 09:40]
#+end_src

#+begin_quote
这就是 org 文件强大的地方，比如你用 org 做好几个笔记，维护的时候不知到维护的节点在哪里，就可以设置 *Todo* 条目来标记下一步的维护点
#+end_quote
*** 增强 TODO 的功能
默认 Todo 条目只有两个属性，TODO 和 DONE，可以添加更多的属性。
#+begin_src lisp
(setq org-todo-keywords
      '((sequence "TODO" "FEEDBACK" "VERIFY" "|" "DONE" "DELEGATED")))
#+end_src
** TAGS [标签 ]
有些标题，或章节，讲的内容是差不多的，那么我们可以把它们归为同一个标签，方便管理

在标题节点上，用两个":" 号包含的东西就是标签
#+begin_quote
 ** TODO 擦玻璃                                                       :工作:
#+end_quote

创建标签 org-set-tags-command

*** 文章统一标签
#+begin_src org 
  ,#+TAGS: org 
#+end_src
  
标签归类,有层次了 
#+begin_src org
  ,#+TAGS: [ Control : Context Task ]
  ,#+TAGS: [ Persp : Vision Goal AOF Project ]
#+end_src

** 日期和时间 
 
org 的时间，既可以表示某个时间，也可以表示某个时间段，还能表示某间隔时间

- 某个时间点 <2020-09-14 一 09:00>
- 某个时间段 <2019-06-04 二 08:30-09:30>
- 间断时间 <2007-05-16 Wed 12:30 +1w> 每周三
- 时间计算 <2007-05-16 Wed 12:30 -1d> 前一天

- 创建时间戳 org-time-stamp
- 非活动的时间戳，该时间戳不会导致议程条目 org-time-stamp-inactive
- 插入当前日期 org-date-from-calendar
*** 时间计划
含有 SCHEDULED 或 DEADLINE 属性的时间戳 一般给 Todo 用的，表示议程的计划开始时间和结束时间。

#+begin_src org
      DEADLINE: <2004-02-29 Sun>
      SCHEDULED: <2004-12-25 六 11:00>
#+end_src
*** 计时器
计时器用来给 Todo  条目计时

- 开始计时, ~org-clock-in~ 
- 停止计时, ~org-clock-out~ 
- 在上一个停止处继续计时 , ~org-clock-in-last~

  计时统计放在下面格式的抽屉中
  #+begin_src org
  :LOGBOOK:
    CLOCK: [2020-09-14 一 05:44]--[2020-09-14 一 05:49] =>  0:05
    CLOCK: [2020-09-13 日 14:16]--[2020-09-13 日 14:26] =>  0:10
    :END:
  #+end_src

*** 空闲时间(Resolving idle time)
如果你正给一个 Todo 计时，但你在这段时间做了其他的事情，那么这段计时就不精确了，空闲时间命令可以解决这个问题
    
  - 空闲时间命令:　org-resolve-clocks  
  - k 手动设置当前 Todo 时长，并重新开始当前 Todo
  - K(大写)  手动设置当前 Todo 时长，并退出计时器
  - s/S 这是从花费的时长中减去输入的时长
    
*** 计时报表
org 能统计 Todo 任务花费的时间，输出一些表 
    
  - 输出报表, ~org-clock-report~
  - 更新光标处的报表, ~org-dblock-update~
*** Timer (定时器)
纯粹用来定一下时间

- 正计时器 org-timer-start
- 倒计时器 org-timer-set-timer

** Refiling and Archiving
   移动/归档 Todo 条目
** Agenda Views  日程视图
我们可以用 *Agenda Views*  来处理 Todo 条目，切换 Todo 的状态，设置计时器等。

org-agenda-files 可以用来设置进入 *Agenda Views* 界面的文件列表 

一些操作:
 - 进入 Agenda Views 视图 , ~org-agenda-list~ 
 - 把当前文件添加到 Agenda Files , ~org-agenda-file-to-front~
 - 移除当前文件, ~org-remove-file~ 
 - 遍历 Agenda Files , ~org-cycle-agenda-files~
** Exporting 导出
org 文件可以方便的导出为其他格式的文件，如 HTML，Latex,Markdown 等
** Publishing
进行一些设置可以发布到 web 服务器
* 参考资料
[fn:1] [[https://orgmode.org/manual/Creating-Footnotes.html#Creating-Footnotes][Creating Footnotes]]

 
