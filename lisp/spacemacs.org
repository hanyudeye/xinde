#+TITLE: spacemacs 简介
#+DESCRIPTION: spacemacs 简介
#+DATE: <2019-11-03 19:27:56>
#+HUGO_TAGS: spacemacs
#+HUGO_CATEGORIES: 软件使用
#+HUGO_DRAFT: false

一套完美的 *emacs* 配置，省去了自己配置的麻烦 
#more

** 概念
*** 编辑样式 
    提供三种编辑样式， *Vim* ， *Emacs* , *Hybrid* (vim 和 emacs 的混合样式)，可以配置自己偏爱的风格。
*** leader key(前导键)
    呼出命令的按键 ，*emacs* 自带的是 *Meta-x* ，现在一般改成了 *SPC* 键了。
*** 数字参数
    原来输入数字参数的按键 @@html:<kbd>@@ C-u @@html:</kbd>@@  用@@html:<kbd>@@ SPC u @@html:</kbd>@@  代替了。
*** Toggles( 开关 )
    开关一般以@@html:<kbd>@@ SPC t @@html:</kbd>@@  或@@html:<kbd>@@ SPC T @@html:</kbd>@@ 开头
** 环境变量和 PATH
   *spacemacs* 有自己的环境变量 *dotspacemacs/user-env*  
   
** 键绑定 
   一般会设置成 *前导键* 式的绑定样式
   #+begin_src lisp
   (spacemacs/declare-prefix "o" "custom")
   (spacemacs/set-leader-keys "oc" 'my-custom-command)
   #+end_src
  
** 界面 
*** 主题 
    可以安装别的主题
    
    设置默认主题组
      #+begin_src lisp
      (setq-default dotspacemacs-themes '(spacemacs-light leuven zenburn))
      #+end_src
*** 字体
*** Frame
**** Title  
     边框的标题，可以修改标题的内容
**** Transparency 
     设置界面的透明度
** 布局和工作空间
   对打开的 *文件 buffer* 进行归类管理 ，一般是一个项目文件夹 
*** 布局 
    一般是某个工程，可以进行布局管理 
** 导航
*** 光标   
    光标移动用 *vim* 样式的快捷键就好了，如果选择 *Vim* 编辑样式的话。
*** 快速跳转 avy    
*** 快速跳转到链接 ace-link
*** 窗口管理
    对于窗口，可以进行分割，可以跳到某个编号的窗口，对窗口进行移动位置
*** Buffers 管理
*** 文件管理
*** Frame 管理
*** Emacs 文件
*** 书签文件
*** 寄存器
   @@html:<kbd>@@ SPC r @@html:</kbd>@@ 
** 搜索    
** 编辑 
*** 粘贴 
    粘贴 *kill ring* 可以用@@html:<kbd>@@ C-j @@html:</kbd>@@ 与@@html:<kbd>@@ C-k @@html:</kbd>@@ 上下遍历 
*** 文本操作 
    以@@html:<kbd>@@ SPC x @@html:</kbd>@@ 开头
*** 文本输入
    插入特殊的文本，以@@html:<kbd>@@ SPC i @@html:</kbd>@@  开头
*** 缩放显示区域 
    narrow
*** 替换 
**** 选中替换 iedit 
     @@html:<kbd>@@ SPC s e @@html:</kbd>@@
*** 正则表达式
   @@html:<kbd>@@ SPC x r @@html:</kbd>@@  开头

*** 字符复制上面行 CTL-y   下面行 CTL-e  
** 服务
*** 保证服务不关闭
    #+BEGIN_SRC emacs-lisp
      (setq-default dotspacemacs-persistent-server t)
    #+END_SRC
*** 退出 emacs
   @@html:<kbd>@@ SPC q q @@html:</kbd>@@ 
*** 禁止服务
    #+BEGIN_SRC emacs-lisp
      (setq-default dotspacemacs-enable-server nil)
    #+END_SRC
** 调试
*** 加载有错误
    emacs --debug-init
*** 更新包后有错，要重新编译安装包
    spacemacs/recompile-elpa
*** 打开调试开关 
    toggle-debug-on-error
*** 常规单步调试
- Start emacs with ~emacs -q~, this will load a vanilla
  emacs without any non-system packages loaded.
- There open a scratch buffer with ~C-x b *scratch* RET~
- Add initialization code for your package there

  #+BEGIN_SRC elisp
    ;; Load the package
    (require 'package)

    ;; Mention all packages you wish to have loaded
    (setq package-load-list
          '((package1 t)
            (package2 t)
            (package3 t)))

    ;; Do package specific configuration if required
    ;; (package-local-init)

    ;; Intialize your package list
    (package-initialize)
  #+END_SRC

- Now press ~M-x eval-buffer~ to evaluate the code.
- Reproduce your issue. Note down step by step instructions.
- With this information open an upstream issue following
  their issue templates. If they have non its a good idea
  to start with the infos required in the spacemacs issue
  template and add missing information when required from
  the package maintainers.

