#+TITLE: spacemacs 层的用法
#+DESCRIPTION: 层的用法
#+KEYWORDS: spacemacs,layer
#+CATEGORIES: 软件使用
#+DATE: <2019-06-03 14:36:36>

* 包 (package)
** 绘图模式 artist-mode
   Shift+中键 选择画什么图形
   Shift+ 右键 删除一个区域
   
  | 操作       | 无 shift                                                                                    | shift                                                                             |
  | pen        | 单击，在鼠标点填充一个“填充符号”，默认为”.”；按下左键，拖动，抬起，绘制填充符号组成的线 | 单击，在鼠标点填充一个“o”；按下左键，拖动，抬起，绘制一条从初始点到最终点的直线 |
  | Line       | 任意方向的线                                                                                | 直线                                                                              |
  | Rectangle  | 矩形                                                                                        | 正方形 1                                                                          |
  | Poly-line  | 任意方向的多边形                                                                            | 每条线都是直线的多边形                                                            |
  | Ellipses   | 椭圆                                                                                        | 圆 2                                                                              |
  | Text       | 文本                                                                                        | 覆盖式文本                                                                        |
  | Spray-can  | 喷雾器 3                                                                                    | 设置喷雾器的大小                                                                  |
  | Erase      | 橡皮，擦掉一个字符                                                                          | 擦掉矩形内字符                                                                    |
  | Vaporize   | 擦除一行                                                                                    | 擦除所有相连的行                                                                  |
  | Cut        | 剪切矩形                                                                                    | 剪切正方形                                                                        |
  | copy       | 复制矩形                                                                                    | 复制正方形                                                                        |
  | paste      | 粘贴                                                                                        | 粘贴                                                                              |
  | Flood-fill | 填充工具，填充                                                                              | 填充                                                                              |
** hackernews
** skewer [实时 Web 开发]
   在 Web 浏览器中提供与 JavaScript，CSS 和 HTML 的实时交互。表达式是从 emacs 的
   ~编辑缓冲区~ ~实时~ 发送给浏览器进行求值
   
   查看所有当前连接的客户端的列表 list-skewer-clients
   如果 ~浏览器~ 与 ~skewer~ 的连接丢失，可以在 浏览器控制台  用 ~skewer()~ 重新连接
*** CSS 
    Load the declaration at the point.
    Load the entire rule around the point.
    Load the current buffer as a stylesheet.
*** HTML
    Load the HTML tag immediately around the point   
*** 提供 REPL 交互 
    repl 的控制台输出 是 ~skewer.log()~
*** bower (亭子) [ 动态加载没有包含的库 ]
    使用 skewer-bower-load，但是这个 bower infrastructure 不好，不推介使用
*** 名字由来 skewer
    Emacs is skewering the browser from server-side

** org-brain 脑图 [ 不太好操作 ，废弃了 ]
*** 概述 
    维基和思维导图的组合，其中每个维基页/思维导图节点都是 org-mode 驻留在您的文件中
  ~org-brain-path~, 可以自己设置。
  
    脑图浏览模式  org-brain-visualize =SPC a o b= , 能把这些节点链接起来
    刷新   org-brain-update-id-locations

    节点之间有四种不同类型的关系
    - Parents
    - Children
    - Siblings (兄弟)
    - Friends( 朋友 )
 
    固定节点 ， index , 节点资源(链接和附件)
 
*** 概览
  PINNED：索引

               + -Python 游戏开发 -  +  - 游戏设计
               + - 编程书籍|
   编程 -  +  -  Emacs |
         |   |
         + ----------------- + ----------------- +
                           |
                           ▽
                    游戏编程←→电脑游戏

*** 快捷键
**** 使用
 | ~SPC a o B v~ | 可视化进入脑图 |
 | ~SPC a o B a~ | Go to the org-brain agenda   |
**** 在 org  文件中编写
 | ~SPC m B a c~ | Add child    |
 | ~SPC m B a f~ | Add friend   |
 | ~SPC m B a p~ | Add parent   |
 | ~SPC m B g c~ | Go to child  |
 | ~SPC m B g f~ | Go to friend |
 | ~SPC m B g p~ | Go to parent |
 | ~SPC m B R~   | Refile entry |
 | ~SPC m B x~   | Delete entry |
 | ~SPC m B v~   | 创建一个节点 |


**** 在可是化环境中编写 (Visualization) 
 | ~j / TAB~   | Goto next link                     |
 | ~k / S-TAB~ | Goto previous link                 |
 | ~C-y~       | 粘贴资源链接                       |
 | ~a~         | Add resource [[http://orgmode.org/manual/Attachments.html][attachment]]            |
 | ~c~         | Add child                          |
 | ~f~         | 查找/访问另一个条目以显示          |
 | ~l~         | 添加资源链接                       |
 | ~p~         | Add parent                         |
 | ~o~         | Open and edit the visualized entry |
 | ~r~         | 重命名                             |
** evil-mc(多光标) ~g r~
  给选定的区域创建匹配的光标 ~evil-mc-make-all-cursors~ , ~g r m~
  移除所有光标 ~evil-mc-undo-all-cursors~ , ~g r q~
  对于当前选定的区域，移到下一个匹配处 ~evil-mc-skip-and-goto-next-match~, ~g r n~
   对于当前选定的区域，创建下一个光标  ~evil-mc-make-and-goto-next-match~  , ~g r j~
   暂停光标, ~evil-mc-pause-cursors~, ~g r s~
   恢复光标 ~evil-mc-resume-cursors~ , ~g r r~
** tern
   智能的 Javascript 工具
*** 配置文件    
    工程配置文件 .tern-project 按目录树向上遍历，没有就采用默认配置
    主配置文件 .tern-config
    
    选项 
    --port <number> : 指定监听端口
    --host <host>; h 指定监听主机（默认 127.0.0.1)
*** JSON 协议
    请求方式是 ~POST~ 的 ~JSON~ 。
    
json 文档结构包含可选的  query, files, and timeout
*** 功能
    type 查询某事物的类型。
    file，end（必填），start（可选）

    completions 向服务器询问给定点的一组完成情况集合
    接受的字段是： file，end（必填） 指定要完成的位置
    types（可选，默认 false） 是否在结果数据中包含完成的类型
    docs，urls，origins（可选，默认 false）
    

    documentation 获取给定表达式的文档字符串和 URL（如果有）。
    使用 file，end（必需）和 start（可选）字段来指定我们感兴趣的表达式。
    

    file 指向定义文件的位置 
    end 字段是此文件的偏移量
*** 编程接口
    基本服务功能 (不含 HTTP 或读配置文件) 的实现在 ~lib/tern.js~
   
    自带的插件有 
    CommonJS module plugin: 
    Node.js 插件 : node
    Node.js 解析插件
    RequireJS plugin
    每种插件有自己的配置方式
*** 服务器插件
    为服务器添加额外的功能
    #+begin_src json
      {
          "libs": [
              "browser",
              "jquery"
          ],
          "loadEagerly": [
              "importantfile.js"
          ],
          "plugins": {
              "requirejs": {
                  "baseURL": "./",
                  "paths": {}
              },"node":{

              }
          }
      }
    #+end_src
    
loadEagerly: 指定的文件永远加载
plugins 用于包含插件(可在里面配置插件的具体属性)

* layer
** spacemacs-project  
   配置文件 .projectile 
   排除相对目录/文件 - /path/to/somefile 
  
   排除文件 -.dot
   
   例子    
   # .agignore
   folder
   file.txt
   *.js
** html-mode
   web-mode  编辑  css 和 html
   编辑 Sass/Scss 和 Less
*** 编译 Less
    C-c C-c         less-css-compile
    C-M-q           prog-indent-sexp

    emmet-mode 自动生成 html css
    evil-matchit 在 Tags 中导航 用 %
    slim 和 pug 模板 用 slim-mode 和 pug-mode 编辑
    急着看，用 impatient-mode
** lsp java
*** LSP Mode commands
    lsp-execute-code-action - Execute code action.
    lsp-rename - Rename symbol at point
    lsp-describe-thing-at-point - Display help for the thing at point.
    lsp-goto-type-definition - Go to type definition
    lsp-goto-implementation - Go to implementation
    lsp-restart-workspace - Restart project
    lsp-format-buffer - Format current buffer
    lsp-symbol-highlight - Highlight all relevant references to the symbol under point.
    lsp-workspace-folders-add - Add workspace folder
    lsp-workspace-folders-remove - Remove workspace folder
    lsp-workspace-folders-switch - Switch workspace folder
*** LSP Java commands
    lsp-java-organize-imports - Organize imports
    lsp-java-build-project - Perform partial or full build for the projects
    lsp-java-update-project-configuration - Update project configuration
    lsp-java-actionable-notifications - Resolve actionable notifications
    lsp-java-update-user-settings - Update user settings (Check the options in the table bellow.)
    lsp-java-update-server - Update server instalation.

    lsp-java-extract-to-constant - Extract constant refactoring
    lsp-java-add-unimplemented-methods - Extract constant refactoring
    lsp-java-create-parameter - Create parameter refactoring
    lsp-java-create-field - Create field refactoring
    lsp-java-create-local - Create local refactoring
    lsp-java-extract-method - Extract method refactoring
    lsp-java-add-import - Add missing import
    lsp-java-treemacs-register activates lsp-java/treemacs integration.
    lsp-java-treemacs-unregister deactivates lsp-java/treemacs integration.
    lsp-java-update-project-uris refresh the project URIs.
    Classpath browsing
  
    Spring Initializr
    lsp-java provides a frontend for Spring Initializr which simplifies the creation
    of Spring Boot projects directly from Emacs via lsp-java-spring-initializr.
    Create Spring boot project

    Supported settings
    lsp-java-server-install-dir - Install directory for eclipsejdtls-server
    lsp-java-java-path - Path of the java executable
    lsp-java-workspace-dir - LSP java workspace directory
    lsp-java-workspace-cache-dir - LSP java workspace cache directory
    lsp-java-vmargs - Specifies extra VM arguments used to launch the Java Language Server
    lsp-java-incomplete-classpath - Specifies the severity of the message when the classpath is incomplete for a Java file
    lsp-java-update-build-configuration - Specifies how modifications on build files update the Java classpath/configuration
    lsp-java-import-exclusions - Configure glob patterns for excluding folders
    lsp-java-favorite-static-members - Defines a list of static members or types with static members
    lsp-java-import-order - Defines the sorting order of import statements
    lsp-java-trace-server - Traces the communication between Emacs and the Java language server
    lsp-java-enable-file-watch - Defines whether the client will monitor the files for changes
    lsp-java-format-enabled - Specifies whether or not formatting is enabled on the language server
    lsp-java-format-settings-url - Specifies the file path to the formatter xml url
    lsp-java-format-settings-profile - Specifies the formatter profile name
    lsp-java-format-comments-enabled - Preference key used to include the comments during the formatting
    lsp-java-save-action-organize-imports - Organize imports on save
    lsp-java-bundles - List of bundles that will be loaded in the JDT server
    lsp-java-import-gradle-enabled - Enable/disable the Gradle importer
    lsp-java-import-maven-enabled - Enable/disable the Maven importer
    lsp-java-auto-build - Enable/disable the 'auto build'
    lsp-java-progress-report - [Experimental] Enable/disable progress reports from background processes on the server
    lsp-java-completion-guess-arguments - When set to true, method arguments are guessed when a method is selected from as list of code assist proposals.
    Additional packages
    lsp-ui : Flycheck, documentation and code actions support.
    company-lsp : LSP company backend.
    treemacs : Project viewer.
    FAQ
    LSP Java is showing to many debug messages, how to stop that? Add the following configuration.
    (setq lsp-inhibit-message t)
    lsp-ui does not display all of the actions on the current point(e. g "Extract constant")? LSP UI by default sends current line bounds for action region which breaks forces JDT server to return only "Extract method action."
    (setq lsp-ui-sideline-update-mode 'point)
    LSP Java does not provide completion, go to definition for some of the files?
    When particular file is not part of imported project Eclipse JDT Language Server could not calculate the current classpath.
*** 快捷键
    重启服务   lsp-restart-workspace
**** Code intelligence shorcuts
     | Key binding   | Description                           |
     |---------------+---------------------------------------|
     | ~SPC m g g~   | Go to definition                      |
     | ~SPC m g r~   | 查引用                   |
     | ~SPC m g R~   | Peek references using ~lsp-ui~        |
     | ~SPC m g d~   | Goto type definition                  |
     | ~SPC m g a~   | Search type in project                |
     | ~SPC m g A~   | Search type in project using ~lsp-ui~ |
     | ~SPC m h h~   | Describe thing at point               |
     | ~SPC m e l~   | List project errors/warnings          |
     | ~SPC m p u~   | Refresh user settings                 |
     | ~SPC m e a~   | Execute code action                   |
     | ~SPC m q r~   | Restart workspace                     |
     | ~SPC m r o i~ | Organize imports                      |
     | ~SPC m r r~   | Rename symbol                         |
     | ~SPC m r a i~ | Add import                            |
     | ~SPC m r a m~ | Add unimplemented methods             |
     | ~SPC m r c p~ | Create parameter                      |
     | ~SPC m r c f~ | Create field                          |
     | ~SPC m r e c~ | Extract constant                      |
     | ~SPC m r e l~ | Extract local                         |
     | ~SPC m r e m~ | Extract method                        |
     | ~SPC m c c~   | Build project                         |
     | ~SPC m a n~   | Actionable notifications              |
     | ~SPC m =~     | Format code                           |
**** Debugger shorcuts

     | Key binding   | Description                     |
     |---------------+---------------------------------|
     | ~SPC m d t t~ | Debug test method               |
     | ~SPC m d t c~ | Debug test class                |
     | ~SPC m d j~   | Debug java class(main method).  |
     |---------------+---------------------------------|
     | ~SPC m t t~   | Run test method                 |
     | ~SPC m t c~   | Run test class                  |
     |---------------+---------------------------------|
     | ~SPC m d d d~ | start debugging                 |
     | ~SPC m d d l~ | debug last configuration        |
     | ~SPC m d d r~ | debug recent configuration      |
     |---------------+---------------------------------|
     | ~SPC m d c~   | continue                        |
     | ~SPC m d i~   | step in                         |
     | ~SPC m d o~   | step out                        |
     | ~SPC m d s~   | next step                       |
     | ~SPC m d v~   | inspect value at point          |
     | ~SPC m d r~   | restart frame                   |
     |---------------+---------------------------------|
     | ~SPC m d .~   | debug transient state           |
     |---------------+---------------------------------|
     | ~SPC m d a~   | abandon current session         |
     | ~SPC m d A~   | abandon all process             |
     |---------------+---------------------------------|
     | ~SPC m d e e~ | eval                            |
     | ~SPC m d e r~ | eval region                     |
     | ~SPC m d e t~ | eval value at point             |
     |---------------+---------------------------------|
     | ~SPC m d S s~ | switch session                  |
     | ~SPC m d S t~ | switch thread                   |
     | ~SPC m d S f~ | switch frame                    |
     |---------------+---------------------------------|
     | ~SPC m d I i~ | inspect                         |
     | ~SPC m d I r~ | inspect region                  |
     | ~SPC m d I t~ | inspect value at point          |
     |---------------+---------------------------------|
     | ~SPC m d b b~ | toggle a breakpoint             |
     | ~SPC m d b c~ | change breakpoint condition     |
     | ~SPC m d b l~ | change breakpoint log condition |
     | ~SPC m d b h~ | change breakpoint hit count     |
     | ~SPC m d b a~ | add a breakpoint                |
     | ~SPC m d b d~ | delete a breakpoint             |
     | ~SPC m d b D~ | clear all breakpoints           |
     |---------------+---------------------------------|
     | ~SPC m d '_~  | Run debug REPL                  |
     |---------------+---------------------------------|
     | ~SPC m d w l~ | list local variables            |
     | ~SPC m d w o~ | goto output buffer if present   |
     | ~SPC m d w s~ | list sessions                   |
     | ~SPC m d w b~ | list breakpoints                |

** Speed Reading 幻灯片 单行浏览
   | ~SPC a R~ | Start Spray   |
   | ~SPC~     | Pause Spray   |
   | ~h~       | Backward word |
   | ~l~       | Forward word  |
   | ~f~       | Faster speed  |
   | ~s~       | Slower speed  |
   | ~q~       | Quit Spray    |
** cscope  代码浏览
   Before using any helm-cscope commands, remember to create a Cscope index file.
   Do it by running the command =cscope-index-files= for C and C++ projects, or the
   command =cscope/run-pycscope= for Python projects, bound to ~SPC m g i~.

   使用前先建立索引文件 

   | ~SPC m g =~ | Find assignments to a symbol                  |
   | ~SPC m g c~ | find which functions are called by a function |
   | ~SPC m g C~ | find where a function is called               |
   | ~SPC m g d~ | find global definition of a symbol            |
   | ~SPC m g e~ | search regular expression                     |
   | ~SPC m g f~ | find a file                                   |
   | ~SPC m g F~ | find which files include a file        |
   | ~SPC m g i~ | create Cscope index                           |
   | ~SPC m g r~ | find references of a symbol                   |
   | ~SPC m g x~ | search text                                   |

** 英汉转换 [[file:~/.emacs.d/private/companyenglish/][layers]]
   打开英语提示 (toggle-company-english-helper)
** php larer
   需要初始化工程 
   cd /root/of/project
   touch .ac-php-conf.json
   
   然后执行命令   ac-php-remake-tags-all
   
   若有项目中含有这么两个文件，那么会自动创建 .ac-php-conf.json 文件
   1. =.projectile=
   2. =vendor/autoload.php=


   | 查关键词  | php-search-documentation |
   | 浏览手册  | php-browse-manual        |
   | 标记函数  | mark-defun               |
   | 跳到定义  | ~SPC m g g~              |
   | jump back | ~C-t~                    |
** debug layer
   java -agentlib:jdwp=transport=dt_socket,server=y,address=<port> <class>
   | ~SPC m d d~ | open cmd buffer      |
   | ~bb~        | set break            |
   | ~bc~        | clear break          |
   | ~bd~        | delete break         |
   | ~bs~        | disable break        |
   | ~be~        | enable break         |
   | ~c~         | continue             |
   | ~i~         | step into            |
   | ~J~         | jump to current line |
   | ~o~         | step out             |
   | ~q~         | quit debug           |
   | ~r~         | restart              |
   | ~s~         | step over            |
   | ~S~         | goto cmd buffer      |
   | ~v~         | eval variable        |
** sql layer
   #+BEGIN_SRC emacs-lisp
     (setq-default dotspacemacs-configuration-layers '(
                                                       (sql :variables
                                                            sql-capitalize-keywords t
                                                            sql-capitalize-keywords-blacklist '("name" "varchar"))))
   #+END_SRC
*** 键盘绑定
    | 显示*SQL*buffer| ~SPC m b b~ |
    | 显示数据库中的表 | ~SPC m l a~ |
    | 显示表信息       | ~SPC m l t~ |
    | 发送 buffer 执行   | ~SPC m s b~ |
    | 发送选区执行     | ~SPC m s r~ |

** html layer
*** 键盘绑定  
**** Web 文件
     | 实时预览     | ~SPC m i~   |
     | 到对应标签   | ~SPC m g b~ |
     | 到子标签     | ~SPC m g c~ |
     | 导航到父标签 | ~SPC m g p~ |
**** CSS/SCSS
     | quickly navigate CSS rules | ~SPC m g h~ |
**** [[file:~/book/program/cheatsheet-a5.pdf][emmet-mode]] 
*** 缩略元素 C-j 扩展
    - HTML abbreviations
      - Basic tags
        a                       <a href=""></a>
        a.x                    <a class="x" href=""></a>
        a#q.x               <a id="q" class="x" href=""></a>
        a#q.x.y.z          <a id="q" class="x y z" href=""></a>
        #q                     <div id="q"> </div>
        .x                       <div class="x"> </div>
        #q.x                   <div id="q" class="x"> </div>
        #q.x.y.z              <div id="q" class="x y z"> </div>
      - Empty tags
        a/                       <a href=""/>
        a/.x                     <a class="x" href=""/>
        a/#q.x                   <a id="q" class="x" href=""/>
        a/#q.x.y.z               <a id="q" class="x y z" href=""/>
        Self-closing tags
        input[type=text]         <input type="text" name="" value=""/>
        img                      <img src="" alt=""/>
        img>metadata/*2          <img src="" alt=""> <metadata/> <metadata/> </img>
      - Siblings
        a+b                      <a href=""></a> <b></b>
        a+b+c                    <a href=""></a> <b></b> <c></c>
        a.x+b                    <a class="x" href=""></a> <b></b>
        a#q.x+b                  <a id="q" class="x" href=""></a> <b></b>
        a#q.x.y.z+b              <a id="q" class="x y z" href=""></a> <b></b>
        a#q.x.y.z+b#p.l.m.n      <a id="q" class="x y z" href=""></a> <b id="p" class="l m n"></b>
      - Tag expansion
        table+                   <table> <tr> <td> </td> </tr> </table>
        dl+                      <dl> <dt></dt> <dd></dd> </dl>
        ul+                      <ul> <li></li> </ul>
        ul++ol+                  <ul> <li></li> </ul> <ol> <li></li> </ol>
        ul#q.x.y[m=l]            <ul id="q" class="x y" m="l"> <li></li> </ul>
      - Parent > child
        a>b                      <a href=""><b></b></a>
        a>b>c                    <a href=""><b><c></c></b></a>
        a.x>b                    <a class="x" href=""><b></b></a>
        a#q.x>b                  <a id="q" class="x" href=""><b></b></a>
        a#q.x.y.z>b              <a id="q" class="x y z" href=""><b></b></a>
        a#q.x.y.z>b#p.l.m.n      <a id="q" class="x y z" href=""><b id="p" class="l m n"></b></a>
        #q>.x                    <div id="q"> <div class="x"> </div> </div>
        a>b+c                    <a href=""> <b></b> <c></c> </a>
        a>b+c>d                  <a href=""> <b></b> <c><d></d></c> </a>
      - Climb-up
        a>b^c                    <a href=""><b></b></a><c></c>
        a>b>c^d                  <a href=""> <b><c></c></b> <d></d> </a>
        a>b>c^^d                 <a href=""><b><c></c></b></a> <d></d>
      - Multiplication
        a*1                      <a href=""></a>
        a*2                      <a href=""></a> <a href=""></a>
        a/*2                     <a href=""/> <a href=""/>
        a*2+b*2                  <a href=""></a> <a href=""></a> <b></b> <b></b>
        a*2>b*2                  <a href=""> <b></b> <b></b> </a> <a href=""> <b></b> <b></b> </a>
        a>b*2                    <a href=""> <b></b> <b></b> </a>
        a#q.x>b#q.x*2            <a id="q" class="x" href=""> <b id="q" class="x"></b> <b id="q" class="x"></b> </a>
        a#q.x>b/#q.x*2           <a id="q" class="x" href=""> <b id="q" class="x"/> <b id="q" class="x"/> </a>
      - Item numbering
        ul>li.item$*3            <ul> <li class="item1"></li> <li class="item2"></li> <li class="item3"></li> </ul>
        ul>li.item$$$*3          <ul> <li class="item001"></li> <li class="item002"></li> <li class="item003"></li> </ul>
        ul>li.item$@-*3          <ul> <li class="item3"></li> <li class="item2"></li> <li class="item1"></li> </ul>
        ul>li.item$@3*3          <ul> <li class="item3"></li> <li class="item4"></li> <li class="item5"></li> </ul>
        ul>li.item$@-3*3         <ul> <li class="item5"></li> <li class="item4"></li> <li class="item3"></li> </ul>
        a$b$@-/*5                <a1b5/> <a2b4/> <a3b3/> <a4b2/> <a5b1/>
        a.$*2>b.$$@-*3           <a class=\"1\" href=""> <b class=\"03\"></b> <b class=\"02\"></b> <b class=\"01\"></b> </a> <a class=\"2\" href=""> <b class=\"03\"></b> <b class=\"02\"></b> <b class=\"01\"></b> </a>
      - Properties
        b[x]                     <b x=""></b>
        b[x=]                    <b x=""></b>
        b[x=""]                  <b x=""></b>
        b[x=y]                   <b x="y"></b>
        b[x="y"]                 <b x="y"></b>
        b[x="()"]                <b x="()"></b>
        b[x m]                   <b x="" m=""></b>
        b[x= m=""]               <b x="" m=""></b>
        b[x=y m=l]               <b x="y" m="l"></b>
        b/[x=y m=l]              <b x="y" m="l"/>
        b#foo[x=y m=l]           <b id="foo" x="y" m="l"></b>
        b.foo[x=y m=l]           <b class="foo" x="y" m="l"></b>
        b#foo.bar.mu[x=y m=l]    <b id="foo" class="bar mu" x="y" m="l"></b>
        b/#foo.bar.mu[x=y m=l]   <b id="foo" class="bar mu" x="y" m="l"/>
        b[x=y]+b                 <b x="y"></b> <b></b>
        b[x=y]+b[x=y]            <b x="y"></b> <b x="y"></b>
        b[x=y]>b                 <b x="y"><b></b></b>
        b[x=y]>b[x=y]            <b x="y"><b x="y"></b></b>
        b[x=y]>b[x=y]+c[x=y]     <b x="y"> <b x="y"></b> <c x="y"></c> </b>
      - Parentheses
        (a)                      <a href=""></a>
        (a)+(b)                  <a href=""></a> <b></b>
        a>(b)                    <a href=""><b></b></a>
        (a>b)>c                  <a href=""><b></b></a>
        (a>b)+c                  <a href=""><b></b></a> <c></c>
        z+(a>b)+c+k              <z></z> <a href=""><b></b></a> <c></c> <k></k>
        (x)*2                    <x></x> <x></x>
        ((x)*2)                  <x></x> <x></x>
        ((x))*2                  <x></x> <x></x>
        (x>b)*2                  <x><b></b></x> <x><b></b></x>
        (x+b)*2                  <x></x> <b></b> <x></x> <b></b>
      - Text
        a{Click me}              <a href="">Click me</a>
        a>{Click me}*2           <a href=""> Click me Click me </a>
        x{click}+b{here}         <x>click</x> <b>here</b>
        span>{click}+b{here}     <span> click <b>here</b> </span>
        p>{Click}+span{here}+{ to continue} <p> Click <span>here</span> to continue </p>
        p{Click}+span{here}+{ to continue} <p> Click </p> <span>here</span> to continue
      - Filter: HTML with comments
        a.b|c                    <!-- .b --> <a class="b" href=""></a> <!-- /.b -->
        #a>.b|c                  <!-- #a --> <div id="a"> <!-- .b --> <div class="b"> </div> <!-- /.b --> </div> <!-- /#a -->
    - CSS abbreviations
      - Basic Usage
        - p1-2!+m10e+bd1#2s        padding: 1px 2px !important; margin: 10em; border: 1px #222 solid;
      - Keywords
        m                        margin: ;
        bg+                      background: #fff url() 0 0 no-repeat;
        c                        color: #000;
** Yasnippet 
   | 创建片段    | yas-new-snippet                                                                    |
   | ~M-/~       | 展开片段                                                                           |
   | ~SPC i s~   | 列出片段                                                                           |
  
   #+begin_verse
  执行命令,用 `` 包含的代码能够执行 #+DATE: `(format-time-string "%Y-%m-%d %H:%M:%S" (current-time))`
   #+end_verse

** bibtex
   | ~SPC m T x~ | org-preview-latex-fragment                    |
   | ~SPC m j~ / ~g j~ / ~C-j~ | Next entry                                 |
   | ~SPC m k~ / ~g k~ / ~C-k~ | Previous entry                             |
   | ~SPC m p~                 | Open PDF                                   |
   | ~SPC m n~                 | Open notes                                 |
   | ~SPC m b~                 | Open browser                               |
   | ~SPC m i~                 | Insert new entry                           |
   | ~SPC m s~                 | Sort entry                                 |
   | ~SPC m h~                 | Various actions on entry                   |
   | ~SPC m l a~               | Lookup and add arXiv paper (don’t get PDF) |
   | ~SPC m l A~               | Lookup and add arXiv paper (download PDF)  |
   | ~SPC m l d~               | Lookup and add paper by DOI                |
   | ~SPC m l i~               | Lookup and add book by ISBN                |
   | ~SPC m l p~               | Lookup and add paper by PMID               |

   In addition, =org-mode=, =latex-mode= and =markdown-mode= all have the following
   key binding added:

   | Key binding   | Description                                |
   |---------------+--------------------------------------------|
   | ~SPC m i c~   | Insert citation                            |
** latex
   | ~SPC m -~     | recenter output buffer                     |
   | ~SPC m ​,​~     | TeX command on master file                 |
   | ~SPC m .~     | mark LaTeX environment                     |
   | ~SPC m *~     | mark LaTeX section                         |
   | ~SPC m %~     | comment or uncomment a paragraph           |
   | ~SPC m ;~     | comment or uncomment a region              |
   | ~SPC m a~     | run all commands (compile and open viewer) |
   | ~SPC m b~     | build                                      |
   | ~SPC m c~     | close LaTeX environment                    |
   | ~SPC m e~     | insert LaTeX environment                   |
   | ~SPC m i i~   | insert =\item=                             |
   | ~SPC m k~     | kill TeX job                               |
   | ~SPC m l~     | recenter output buffer                     |
   | ~SPC m m~     | insert LaTeX macro                         |
   | ~SPC m s~     | insert LaTeX section                       |
   | ~SPC m v~     | view output                                |
   | ~SPC m h d~   | TeX documentation, can be very slow        |
   | ~SPC m f e~   | fill LaTeX environment                     |
   | ~SPC m f p~   | fill LaTeX paragraph                       |
   | ~SPC m f r~   | fill LaTeX region                          |
   | ~SPC m f s~   | fill LaTeX section                         |
   | ~SPC m p r~   | preview region                             |
   | ~SPC m p b~   | preview buffer                             |
   | ~SPC m p d~   | preview document                           |
   | ~SPC m p e~   | preview environment                        |
   | ~SPC m p s~   | preview section                            |
   | ~SPC m p p~   | preview at point                           |
   | ~SPC m p f~   | cache preamble for preview                 |
   | ~SPC m p c~   | clear previews                             |
   | ~SPC m v~     | view                                       |
   | ~SPC m x b~   | make font bold                             |
   | ~SPC m x B~   | make font medium weight                    |
   | ~SPC m x c~   | make font monospaced (for code)            |
   | ~SPC m x e~   | make font emphasised                       |
   | ~SPC m x i~   | make font italic                           |
   | ~SPC m x o~   | make font oblique                          |
   | ~SPC m x r~   | remove font properties                     |
   | ~SPC m x f a~ | use calligraphic font                      |
   | ~SPC m x f c~ | use small-caps font                        |
   | ~SPC m x f f~ | use sans serif font                        |
   | ~SPC m x f n~ | use normal font                            |
   | ~SPC m x f r~ | use serif font                             |
   | ~SPC m x f u~ | use upright font                           |

   Folding
   Available only when =latex-enable-folding= is non nil.

   | Key binding | Description          |
   |-------------+----------------------|
   | ~SPC m z =~ | fold TeX math        |
   | ~SPC m z b~ | fold TeX buffer      |
   | ~SPC m z e~ | fold TeX environment |
   | ~SPC m z m~ | fold TeX macro       |
   | ~SPC m z r~ | fold TeX region      |

   RefTeX

   | Key binding   | Description                           |
   |---------------+---------------------------------------|
   | ~SPC m r c~   | reftex-citation                       |
   | ~SPC m r g~   | reftex-grep-document                  |
   | ~SPC m r i~   | reftex-index-selection-or-word        |
   | ~SPC m r I~   | reftex-display-index                  |
   | ~SPC m r TAB~ | reftex-index                          |
   | ~SPC m r l~   | reftex-label                          |
   | ~SPC m r p~   | reftex-index-phrase-selection-or-word |
   | ~SPC m r P~   | reftex-index-visit-phrases-buffer     |
   | ~SPC m r r~   | reftex-reference                      |
   | ~SPC m r s~   | reftex-search-document                |
   | ~SPC m r t~   | reftex-toc                            |
   | ~SPC m r T~   | reftex-toc-recenter                   |
   | ~SPC m r v~   | reftex-view-crossref                  |
** google translate
   | 翻译     | google-translate-at-point-reverse  @@html:<kbd>@@ SPC x g t @@html:</kbd>@@ |
   | 反向翻译 | google-translate-query-translate-reverse                                    |
   | 支持列表 | google-translate-supported-languages                                        |
   

   定义输出方向 
   google-translate-output-destination
   - nil  弹出缓冲区
   - echo-area
   - popup  弹出窗口
   - kill-ring 

** w3m 浏览器
   | 打开网址      | SPC a w o |
   | 打开文件      | SPC a w f |
   | 搜索          | SPC a w s |
   | 书签 | SPC a w b |

** epub
   | ~g V~     | 查看源码          |
   | ~SPC w c~ | center the buffer |

** c-c++
   反汇编 disaster
   代码格式化 clang-format
   反射 smeantic-refactor
   代码导航 cscope
   自动补全 auto-completion
   调试器 realgud 

   | ~SPC m g a~ | open matching file                   |
   | ~SPC m g A~ | open matching file in another window |
   | ~SPC m D~   | 反汇编                               |
   | ~SPC m r .~ | srefactor: refactor thing at point.  |

*** 通用编译 compile
*** 导航 
    | ~SPC m g &~ | find references (address) |
    | ~SPC m g R~ | find references (read)    |
    | ~SPC m g W~ | find references (write)   |
    | ~SPC m g c~ | find callers              |
    | ~SPC m g C~ | find callees              |
    | ~SPC m g v~ | vars                      |
    | ~SPC m g f~ | find file at point (ffap) |
    | ~SPC m g F~ | ffap other window         |

**** goto/hierarchy
     | ~SPC m g h b~ | 基类                        |
     | ~SPC m g h d~ | derived class(es) [ccls]    |
     | ~SPC m g h c~ | call hierarchy              |
     | ~SPC m g h C~ | call hierarchy (inv)        |
     | ~SPC m g h i~ | inheritance hierarchy       |
     | ~SPC m g h I~ | inheritance hierarchy (inv) |

**** goto/member

     | ~SPC m g m h~ | member hierarchy        |
     | ~SPC m g m t~ | member types [ccls]     |
     | ~SPC m g m f~ | member functions [ccls] |
     | ~SPC m g m v~ | member variables [ccls] |

*** 调试[ debugger ]
    |---------------+---------------------------------|
    | ~SPC m d d d~ | start debugging                 |
    | ~SPC m d d l~ | debug last configuration        |
    | ~SPC m d d r~ | debug recent configuration      |
    |---------------+---------------------------------|
    | ~SPC m d c~   | continue                        |
    | ~SPC m d i~   | step in                         |
    | ~SPC m d o~   | step out                        |
    | ~SPC m d s~   | next step                       |
    | ~SPC m d v~   | inspect value at point          |
    | ~SPC m d r~   | restart frame                   |
    |---------------+---------------------------------|
    | ~SPC m d .~   | debug transient state           |
    |---------------+---------------------------------|
    | ~SPC m d a~   | abandon current session         |
    | ~SPC m d A~   | abandon all process             |
    |---------------+---------------------------------|
    | ~SPC m d e e~ | eval                            |
    | ~SPC m d e r~ | eval region                     |
    | ~SPC m d e t~ | eval value at point             |
    |---------------+---------------------------------|
    | ~SPC m d S s~ | switch session                  |
    | ~SPC m d S t~ | switch thread                   |
    | ~SPC m d S f~ | switch frame                    |
    |---------------+---------------------------------|
    | ~SPC m d I i~ | inspect                         |
    | ~SPC m d I r~ | inspect region                  |
    | ~SPC m d I t~ | inspect value at point          |
    |---------------+---------------------------------|
    | ~SPC m d b b~ | toggle a breakpoint             |
    | ~SPC m d b c~ | change breakpoint condition     |
    | ~SPC m d b l~ | change breakpoint log condition |
    | ~SPC m d b h~ | change breakpoint hit count     |
    | ~SPC m d b a~ | add a breakpoint                |
    | ~SPC m d b d~ | delete a breakpoint             |
    | ~SPC m d b D~ | clear all breakpoints           |
    |---------------+---------------------------------|
    | ~SPC m d '_~  | Run debug REPL                  |
    |---------------+---------------------------------|
    | ~SPC m d w l~ | list local variables            |
    | ~SPC m d w o~ | goto output buffer if present   |
    | ~SPC m d w s~ | list sessions                   |
    | ~SPC m d w b~ | list breakpoints                |
** semantic 
   #+begin_verse
   底部显示定义
   顶部显示函数
   支持 refactor
   #+end_verse

   | ~SPC m r~ | srefactor: refactor thing at point. |
** debug 
   使用 realgud 包调试多种语言
   特定于语言的调试器由相应的层添加。 如果你想
   添加其他调试器，将它们添加到= debug-additional-debuggers =变量中。

   #+BEGIN_SRC emacs-lisp
     (setq-default dotspacemacs-configuration-layers
                   '((debug :variables debug-additional-debuggers '("remake"))))
   #+END_SRC


   | ~SPC m d d~ | open cmd buffer      |
   | ~bb~        | set break            |
   | ~bc~        | clear break          |
   | ~bd~        | delete break         |
   | ~bs~        | disable break        |
   | ~be~        | enable break         |
   | ~c~         | continue             |
   | ~i~         | step into            |
   | ~J~         | jump to current line |
   | ~o~         | step out             |
   | ~q~         | quit debug           |
   | ~r~         | restart              |
   | ~s~         | step over            |
   | ~S~         | goto cmd buffer      |
   | ~v~         | eval variable        |
** 调试服务 [ dap,Debug Adapter Protocol ] 
   默认功能
   编辑调试魔板 , ~SPC m d d e~
   开始调试 ~SPC m d d d~
   调试最后的配置 ~SPC m d d l~

   用法
   定义调试模板 dap-debug-edit-template
   进行调试  dap-debug 
   | ~SPC m d c~   | continue                           |
   | ~SPC m d i~   | step in                            |
   | ~SPC m d o~   | step out                           |
   | ~SPC m d s~   | next step                          |
   | ~SPC m d v~   | 求值 point 下 的值                 |
   | ~SPC m d r~   | restart frame                      |
   |---------------+------------------------------------|
   | ~SPC m d .~   | 调试瞬态                           |
   |---------------+------------------------------------|
   | ~SPC m d a~   | 放弃当前会话                       |
   | ~SPC m d A~   | 放弃所有过程                       |
   |---------------+------------------------------------|
   | ~SPC m d e e~ | eval                               |
   | ~SPC m d e r~ | eval region                        |
   | ~SPC m d e t~ | eval value at point                |
   |---------------+------------------------------------|
   | ~SPC m d S s~ | switch session                     |
   | ~SPC m d S t~ | switch thread                      |
   | ~SPC m d S f~ | switch frame                       |
   |---------------+------------------------------------|
   | ~SPC m d I i~ | inspect                            |
   | ~SPC m d I r~ | inspect region                     |
   | ~SPC m d I t~ | inspect value at point             |
   |---------------+------------------------------------|
   | ~SPC m d b b~ | toggle a breakpoint                |
   | ~SPC m d b c~ | change breakpoint condition        |
   | ~SPC m d b l~ | change breakpoint log condition    |
   | ~SPC m d b h~ | change breakpoint hit count        |
   | ~SPC m d b a~ | add a breakpoint                   |
   | ~SPC m d b d~ | delete a breakpoint                |
   | ~SPC m d b D~ | clear all breakpoints              |
   |---------------+------------------------------------|
   | ~SPC m d '_~  | 运行 REPL 交互式  调试             |
   |---------------+------------------------------------|
   | ~SPC m d w l~ | 列出局部变量                       |
   | ~SPC m d w o~ | goto output buffer 如果有此 buffer |
   | ~SPC m d w s~ | list sessions                      |
   | ~SPC m d w b~ | 列出断点                           |

** 调试管理器 [ realgud ] [ 每个语言不同调试器 ]
   自动调试 set annotate 1
** emoji 
** helm (收集,导航)
   
   调整 helm 缓冲区尺寸
   #+BEGIN_SRC emacs-lisp
     (setq-default dotspacemacs-configuration-layers '(
                                                       (helm :variables helm-enable-auto-resize t)))
   #+END_SRC

   #+begin_verse
   查找,@@html:<kbd>@@ SPC / @@html:</kbd>@@ 
   直接在搜索到的内容里改结果，就不用转到文件了 。 ~C-c C-e~
   到父一层目录查找，范围更广了 ~C-l~
   启动瞬态 ~M-SPC~
   #+end_verse
      
   书签管理 
   | ~C-d~ |删除|
   | ~C-e~ | 编辑                   |
   | ~C-f~ | 是否显示文件名位置                     |
   | ~C-o~ | open the selected bookmark in another window |

   helm-swoop,显示实时的搜索缓冲区, ~SPC s s~,觉得也没啥用
       
   对于通用参数，用法是,先选择函数，然后按 ~C-u~,最后按 ~RET~ 
   实例 : ~SPC SPC org-reload C-u RET~
       
   多个文件替换，只要 ~C-c C-e~,然后进入 ~iedit state~ 模式(~SPC s e~)
       
   回到 helm-buffer ,快捷键是 ~SPC r l~
** java
   为了在 emacs 中开发 Java,spacemacs 定义了此层。
   
   后端代码检查可以配置四个工具
   我选的语言服务器是 jdtls，卡
   

   现在不用 jdtls ，太卡，
   用[[https://github.com/mopemope/meghanada-server][meghanada 了，省资源 ]]

** lsp
   选择要启动的语言服务器 ~C-u M-x lsp~
   会创建好多的环境 buffer 

   
   安装 java 服务,配置好代理服务器
   
   在本地够建,进入 /tmp/lsp-java-install 目录,运行   java -classpath /tmp/lsp-java-install/.mvn/wrapper/maven-wrapper.jar -Dmaven.home=/tmp -Dmaven.multiModuleProjectDirectory=/tmp/lsp-java-install org.apache.maven.wrapper.MavenWrapperMain -Djdt.js.server.root=/home/wuming/.emacs.d/eclipse.jdt.ls/server/ -Djunit.runner.root=/home/wuming/.emacs.d/eclipse.jdt.ls/server/test-runner -Djunit.runner.fileName=junit-platform-console-standalone.jar -Djava.debug.root=/home/wuming/.emacs.d/eclipse.jdt.ls/server/bundles package
   必须要有 target 目录，且有 两个文件，可以到 soft/tar 下面拷贝 


   补充参考    java -classpath /tmp/lsp-java-install/.mvn/wrapper/maven-wrapper.jar -Dmaven.home=/tmp -Dmaven.multiModuleProjectDirectory=/tmp/lsp-java-install org.apache.maven.wrapper.MavenWrapperMain -Djdt.js.server.root=/home/wuming/.emacs.d/eclipse.jdt.ls/server/ -Djunit.runner.root=/home/wuming/.emacs.d/eclipse.jdt.ls/server/test-runner -Djunit.runner.fileName=junit-platform-console-standalone.jar -Djava.debug.root=/home/wuming/.emacs.d/eclipse.jdt.ls/server/bundles clean package -Djdt.download.url=http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz


   命令
   lsp-describe-session - 显示会话文件夹和运行的服务器。
   lsp-describe-thing-at-point - 显示关于该事物的帮助。
   lsp-execute-code-action - 执行代码操作
   lsp-format-buffer - 格式化当前缓冲区
   lsp-organize-imports - 组织图书馆进口
   lsp-goto-implementation - 去实施
   lsp-goto-type-definition - 转到类型定义
   lsp-rename - 重命名符号
   lsp-restart-workspace - 重启项目
   lsp-symbol-highlight - 突出显示点下符号的所有相关参考。
   lsp-workspace-folders-add - 添加工作区文件夹
   lsp-workspace-folders-remove - 删除工作区文件夹
   lsp-workspace-folders-switch - 切换工作区文件夹
   imenu 或 helm-imenu- 显示文档结构。
   completion-at-point- 使用内置的 emacs completion-at-point 框架显示完成。
   lsp-find-definition - 在点下找到符号的定义。
   lsp-find-references - 在点下查找符号的参考。
   lsp-lens-show - 在当前文件中显示镜头
   lsp-lens-hide - 隐藏当前文件中的镜头
   lsp-lens-mode （实验性） - 打开/关闭当前文件中的镜头。

   设置
   lsp-print-io- 如果为非 nil，则打印与语言服务器之间的所有消息*lsp-log*。
   lsp-print-performance - 如果非零，则打印性能信息。到*lsp-log*。
   lsp-inhibit-message- 如果非零，则禁止消息回显 inhibit-message。
   lsp-report-if-no-buffer - 如果非零，即使文件未打开，也会报告错误。
   lsp-keep-workspace-alive - 如果非 nil，则在关闭最后一个工作区缓冲区时保持工作区处于活动状
   lsp-enable-snippet - 启用/禁用代码段完成支持。
   lsp-auto-guess-root - 使用抛射物/项目自动猜测项目根目录。
   lsp-restart - 定义必须如何处理服务器退出事件。
   lsp-session-file - 使用抛射物/项目自动猜测项目根目录。
   lsp-auto-configure- 自动配置 lsp-mode。设置为 t 时 lsp-mode 将自动配置 lsp-ui 和 company-lsp。
   lsp-document-sync-method - 如何将文档与语言服务器同步。
   lsp-auto-execute-action - 自动执行单个操作。
   lsp-eldoc-render-all- 定义是否显示所有返回的 document/onHover。如果 lsp-markup-display-all 设置为 nil，eldoc 则仅显示符号信息。
   lsp-enable-completion-at-point- 启用 completion-at-point 集成。
   lsp-enable-xref - 启用外部参照集成。
   lsp-prefer-flymake- 如果你喜欢 flycheck 并且 lsp-ui-flycheck 可以使用，(setq lsp-prefer-flymake nil)。如果设置为:none 两者都不会启用。
   lsp-enable-indentation - 使用语言服务器提供的文件格式化功能缩进区域。
   lsp-enable-on-type-formatting- 启用 textDocument/onTypeFormatting 集成。
   lsp-before-save-edits- 如果为非 nil，lsp-mode 将在保存文档之前应用语言服务器建议的编辑。
   lsp-imenu-show-container-name - 在 imenu 条目中显示符号的容器名称。
   lsp-imenu-container-name-separator - 分隔符字符串，用于在显示 imenu 条目时将容器名称与符号分开。
   lsp-imenu-sort-methods - 如何对 imenu 项目进行排序。该值是一个列表 kind，name 或 position。优先级由元素的索引确定。
   lsp-response-timeout - 超时前等待语言服务器响应的秒数。
   lsp-enable-file-watchers - 如果服务器已请求，则非 nil lsp-mode 将监视工作区中的文件。
** python
   后端 anaconda ,lsp-python 
   自动完成
   代码导航 
   文档查找，用 pylookup
   测试 test-run
   打开虚拟环境 pyenv
   自动删除未使用的库  autoflake
   对导入库排序 isort 
   修复导入 importmagic
   pip 包管理器
   
   配置项目后端 .dir-locals.el
   #+begin_src lisp
     ((python-mode (python-backend . lsp)))
   #+end_src

   配置局部变量  ~SPC f v d~

   anaconda 对于依赖报错 
   #+BEGIN_EXAMPLE
     Blocking call to accept-process-output with quit inhibited!!
   #+END_EXAMPLE

   需要手动安装以下依赖
   #+BEGIN_SRC sh
     pip install --upgrade "jedi>=0.9.0" "json-rpc>=1.8.1" "service_factory>=0.1.5"
   #+END_SRC

   如果无法运行 anaconda 服务器 ，需要配置 PYTHONPATH 环境变量 

   语法检查，安装 
   #+BEGIN_SRC sh
     pip install flake8
   #+END_SRC

   测试，安装 pytest
   #+BEGIN_SRC emacs-lisp
     (setq-default dotspacemacs-configuration-layers
                   '((python :variables python-test-runner 'pytest)))
   #+END_SRC

   格式化工具
   #+BEGIN_SRC emacs-lisp
     (setq-default dotspacemacs-configuration-layers '(
                                                       (python :variables python-formatter 'yapf)))
   #+END_SRC

   测试时自动保存缓冲区
   #+BEGIN_SRC emacs-lisp
     (setq-default dotspacemacs-configuration-layers '(
                                                       (python :variables python-save-before-test nil)))
   #+END_SRC

   要使用 pylookup,帮助文档,能跳到官网
   先更新数据库 ~SPC SPC pylookup-update~.

   自动排序
   #+BEGIN_SRC elisp
     (setq-default dotspacemacs-configuration-layers
                   '((python :variables python-sort-imports-on-save t)))
   #+END_SRC

   实现 importmagic 功能需要安装 
   #+BEGIN_SRC sh
     pip install importmagic epc
   #+END_SRC

   管理虚拟环境,隔离包版本,使用的是 pyvenv 工具
   先要安装工具 virtualenvwrapper,然后配置环境变量 =WORKON_HOME= ,指定虚拟环境的目录

   #+begin_src txt
virtualenvwrapper，相较于使用 virtualenv， 好处就是把所有环境都放在同一目录下管理，以便更好的管理及切换。
环境变量 WORKON_HOME，值为你想保存 env 文件的路径

创建虚拟环境 mkvirtualenv test
可以安装包了　pip

查看可用虚拟环境 lsvirtualenv  或　workon
   #+end_src

   #+begin_src bash
     # 外部用法
     $ pip install virtualenvwrapper
     $ export WORKON_HOME=~/Envs
     $ mkdir -p $WORKON_HOME
     # $ source /usr/local/bin/virtualenvwrapper.sh
     $ source ~/.pyenv/shims/virtualenvwrapper.sh
     $ mkvirtualenv env1
   #+end_src
   | ~SPC m v a~ | 激活任何目录中的虚拟环境          |
   | ~SPC m v d~ | 停用激活的虚拟环境                |
   | ~SPC m v w~ | 在 ~WORKON_HOME~   中处理虚拟环境 |



   用 pyenv 管理多个版本的 Python,使用的是 pyenv ，！！！注意只有一字之差
   设置 pyenv 环境, ~SPC m v s~ 
   取消设置 pyenv 环境, ~SPC m v u~ 


   自动激活本地 pyenv 版本, [[https://github.com/yyuu/pyenv/blob/master/COMMANDS.md#user-content-pyenv-local][pyenv local]]命令会把版本写入本地文件 =.python-version=

   交互模式
   启动交互模式, ~SPC m s i~ 

   运行 python 脚本,在多个文件同时工作时有用,因为交互模式不重载更改的模块  ~SPC m c c~
   在 comint shell 中执行当前文件, ~SPC m c c~ 
   在 comint shell 中执行当前文件并切换到 =insert state= , ~SPC m c C~ 
   如果输入参数，可以先用 ~SPC u~ 按键

   测试,这里要了解下的。????
   启动项目的所有测试, ~SPC m t a~
   启动当前测试, ~SPC m t t~

   重构,反射
   修复缺少的导入语句 ~SPC m r f~
   删除未使用的导入, ~SPC m r i~
   排序导入, ~SPC m r I~

   Pip 包管理
   列出所有在当前虚拟环境中 安装的包, ~SPC m P~
   d,删除标记
   r,刷新列表
   i,提示安装
   U,更新所有标记
   u,更新标记
   x,执行

   跳转
   跳回,  ~C-o~ 
** git
   - magit auto-complete
   - Magit SVN plugin [ 在 ~Magit~ buffer 中按住 ~!~ 键就能提交了 ]
   - global git commit
   - git
   - git-flow
   - org integration

     用法:  
     打开状态缓冲区 ,显示状态改变的文件 ~SPC g s~
     打开命令缓冲区，直接执行命令 ~SPC g m~
    
     在状态缓冲区可以执行的命令
     | ~/~       | 快捷查找                                        |
     | ~$~       | 打开命令执行历史 buffer                         |
     | ~c c~     | 发布提交消息缓冲 open a =commit message buffer= |
     | ~b b~     | checkout a branch                               |
     | ~b c~     | create a branch                                 |
     | ~f f~     | fetch changes                                   |
     | ~F (r) u~ | 拉取 /变基 pull tracked branch and rebase       |
     | ~gr~      | 刷新 refresh                                    |
     | ~l l~     | 打开日志缓存 open =log buffer=                  |
     | ~o~       | 数据恢复到某个节点                              |
     | ~P u~     | 发布 push to tracked branch                     |
     | ~s~       | 暂存,在 diff 中，还能暂存特定行                 |
     | ~x~       | 丢弃更改                                        |
     | ~S~       | 暂存全部                                        |
     | ~TAB~     | 查看文件改动 (diff)                             |
     | ~u~       | 取消暂存                                        |
     | ~U~       | 取消所有的暂存                                  |
     | ~v or V~  | select multiple lines                           |
     | ~z z~     | 隐藏改动                                        |

     写提交消息的 buff 中，按 ~M-n~ ,~M-p~  可以上下遍历历史提交信息

    
   git time machine(时间机器能够显示文件每次提交的内容 ),打开按键 ~SPC g t~
   | ~SPC g t~ | start git timemachine and initiate transient-state |
   | ~c~       | show current commit                                |
   | ~n~       | show next commit                                   |
   | ~N~       | show previous commit                               |
   | ~p~       | show previous commit                               |
   | ~q~       | leave transient-state and git timemachine          |
   | ~Y~       | copy current commit hash                           |

** github
** javascript
   使用 js2-mode 对 js 语言支持
   特性  
   - 多个后端支持：Tern 和 LSP
   - 智能代码折叠
   - 重构：使用[[https://github.com/magnars/js2-refactor.el][js2-refactor]]完成。
   - 自动完成和文档
   - 通过[[https://github.com/skeeto/skewer-mode][skewer-mode]]和[[https://github.com/pandeiro/livid-mode][livid-mode]]提供 REPL
   - 使用 web-beautify 格式化

   启用 导入帮助程序(~ImportJS~) 
   #+begin_src sh
     $ npm install -g import-js
   #+end_src
  
   flycheck 错误检查
   #+BEGIN_SRC sh
     $ npm install -g eslint
     # or
     $ npm install -g jshint
   #+END_SRC

   如果安装在非标准目录中，请添加该目录
   #+BEGIN_SRC elisp
     (add-to-list 'exec-path "/path/to/node/bins" t)
   #+END_SRC

   美化 
   添加  ~web-beautify~ ，或 ~prettier~ 层，参考层文档

   import-js，导入模块，并导航代码
   #+BEGIN_SRC elisp
     (javascript :variables javascript-import-tool 'import-js)
   #+END_SRC
   | ~SPC m i i~ | 导入光标下变量对应的模块                 |
   | ~SPC m i f~ | 导入任何缺少的模块并删除任何未使用的模块 |
   | ~SPC m g i~ | 转到光标下变量对应的模块                 |

   选择后端 
   #+BEGIN_SRC elisp
     (javascript :variables javascript-backend 'tern)
   #+END_SRC

   或者本地变量 =.dir-locals.el=
   #+BEGIN_SRC elisp
     ((js2-mode (javascript-backend . lsp)))
   #+END_SRC

   选择格式化程序
   #+BEGIN_SRC elisp
     (javascript :variables javascript-fmt-tool 'web-beautify)
   #+END_SRC

   或者本地变量 =.dir-locals.el=
   #+BEGIN_SRC elisp
     ((js2-mode (javascript-fmt-tool . prettier)))
   #+END_SRC

   调试器（dap 集成）
   安装 =M-x dap-firefox-setup= 

   调整缩进，设置变量
   #+BEGIN_SRC emacs-lisp
     (setq-default js2-basic-offset 2)
   #+END_SRC
   或者
   #+BEGIN_SRC emacs-lisp
     (javascript :variables js2-basic-offset 2)
   #+END_SRC

   同样 缩进 JSON 文件的方式,或在 层中设置
   #+BEGIN_SRC emacs-lisp
     (setq-default js-indent-level 2)
   #+END_SRC

   浏览器端 REPL 交互 ,需要开启 httpd 服务
   空白页交互 run-skewer
   页面交互,需要安装 Greasemonkey 脚本
   #+BEGIN_SRC elisp
  (setq-default dotspacemacs-configuration-layers
    '((javascript :variables javascript-repl `skewer)))
#+END_SRC


   
   服务器端 REPL 交互 
   #+BEGIN_SRC elisp
  (setq-default dotspacemacs-configuration-layers
    '((javascript :variables javascript-repl `nodejs)))
#+END_SRC



   node ,配置 自动把 node_modules/.bin 添加到  =exec_path=
   #+BEGIN_SRC elisp
     (setq-default dotspacemacs-configuration-layers
                   '((javascript :variables node-add-modules-path t)))
   #+END_SRC

   js2 模式
   ~SPC m w~ ,切换 js2 模式警告和错误
   ~%~,块间跳转
   
js2 mode 补全 ~node~ 变量
   #+BEGIN_SRC elisp
  (setq-default dotspacemacs-configuration-layers
    '((javascript :variables js2-include-node-externs t)))
#+END_SRC



   | ~SPC m z c~ | 隐藏元素          |
   | ~SPC m z o~ | 显示元素          |
   | ~SPC m z r~ | 显示所有元素      |
   | ~SPC m z e~ | 隐藏/显示元素开关 |
   | ~SPC m z F~ | 隐藏函数开关      |
   | ~SPC m z C~ | 隐藏注释开关      |

   重构（js2-refactor）
   | ~SPC m k~     | 删除到行的末尾，但不跨越语义边界                                       |
   | ~SPC m r 3 i~ | 将三元运算符转换为 if 语句                                             |
   | ~SPC m r a g~ | 如果缺少，则创建一个= / * global * / = annotation，并添加 var 以指向它 |
   | ~SPC m r a o~ | 用对象文字命名参数   替换函数调用的参数                                |
   | ~SPC m r b a~ | 将最后一个子节点移出当前函数，if-statement，for-loop 或 while-loop     |
   | ~SPC m r c a~ | 将多行数组转换为一行                                                   |
   | ~SPC m r c o~ | 将多行对象文字转换为一行                                               |
   | ~SPC m r c u~ | 将多行函数转换为一行（期望分号作为语句分隔符）                         |
   | ~SPC m r e a~ | 将一行数组转换为多行                                                   |
   | ~SPC m r e f~ | 将标记的表达式提取到新的命名函数中                                     |
   | ~SPC m r e m~ | 将标记的表达式提取到对象文字中的新方法中                               |

   文档（js-doc）
   | ~SPC m r d b~ | 为当前文件插入 JSDoc 注释 |
   | ~SPC m r d f~ | 为函数 插入 JSDoc 注释    |
   | ~SPC m r d t~ | 给注释插入 tag|
   | ~SPC m r d h~ | 显示可用的 jsdoc tag 列表 |

   REPL（skewer-mode）

   | ~SPC m e e~ | 求值选中部分表达式               |
   | ~SPC m e E~ | 求值选区并插入结果               |
   | ~SPC m s b~ | 求值 buff                        |
   | ~SPC m s B~ | 求值选区 并 切换到 REPL buffer   |
   | ~SPC m s r~ | 将当前选区发送到 REPL            |
   | ~SPC m s s~ | 切换到 REPL                      |

** tern
   增加了对 JavaScript 代码分析的引擎 [ tern 引擎 ]

   安装
   #+BEGIN_SRC sh
     $ npm install -g tern
   #+END_SRC

   在多个不同的编辑会话中重用服务器
   默认不创建项目  =.tern-port= 文件
   #+BEGIN_SRC emacs-lisp
     (tern :variables tern-disable-port-files nil)
   #+END_SRC

   ~M-.~ ,上个命令

   | ~SPC m C-g~   | 带你回到你按 ~M-.~  的最后一个位置                       |
   | ~SPC m g g~   | 跳转到光标下的东西的定义处                               |
   | ~SPC m g G~   | 跳转到给定名称的定义(gtag)                               |
   | ~SPC m h d~   | 找到光标下的东西的文档, 再按一次打开关联的 URL（如果有） |
   | ~SPC m h t~   | 找到光标下的东西的类型                                   |
   | ~SPC m r r V~ | 使用 tern 重命名光标下的变量                             |
** import-js  [导入模块，并导航代码]
   安装  
   #+BEGIN_SRC sh
     $ npm install -g import-js
   #+END_SRC
   如果这不起作用,可以用下面方式 
   #+BEGIN_SRC sh
     $ sudo npm install --unsafe-perm -g import-js
   #+END_SRC

   启用，在 javascript 配置 
   #+BEGIN_SRC elisp
     (javascript :variables javascript-import-tool 'import-js)
   #+END_SRC
   然后，层 ~react~  和 ~typescript~ 也有此特性

   | ~SPC m i i~ | 导入光标下变量对应的模块                 |
   | ~SPC m i f~ | 导入任何缺少的模块并删除任何未使用的模块 |
   | ~SPC m i g~ | 转到光标下的变量模块                     |

** org
*** 特点 
   整合子弹头 org-bullets 
   整合番茄时钟  org-pomodaro 
   演示模式 org-present
   插入图像 org-download
   管理工程下的代办 org-projectile
   插入 org 格式的剪贴板中的 URL (org-cliplink) 
   
   : 任何 org 相关代码 不能在  =dotspacemacs/user-config= 之前加载，会冲突
   确定 org 加载后，对 org 进行配置 
   #+BEGIN_SRC emacs-lisp
     (with-eval-after-load 'org
       ;; here goes your Org config :)
       ;; ....
       )
   #+END_SRC

   要不来会出现异常，如下
   #+begin_verse
   If this is not done you will encounter a lot of unbind key exceptions while working with org.
   More details can be found [[https://github.com/syl20bnr/spacemacs/issues/8106][here]].
   #+end_verse

*** github 
    导出到 github
  #+BEGIN_SRC emacs-lisp
  (setq-default dotspacemacs-configuration-layers '(
    (org :variables org-enable-github-support t)))
#+END_SRC

*** Twitter Bootstrap support
    启用导出到 Twitter Bootstrap 格式的 HTML   
    #+BEGIN_SRC emacs-lisp
      (setq-default dotspacemacs-configuration-layers '(
                                                        (org :variables
                                                             org-enable-bootstrap-support t)))
    #+END_SRC

*** Gnuplot 
    通过[[http://www.gnuplot.info/][Gnuplot]]绘制表格内的数据, windows 有问题，要排除  =dotspacemacs-excluded-packages=
*** Reveal.js
    导出 Reveal.js

    #+BEGIN_SRC emacs-lisp
      (setq-default dotspacemacs-configuration-layers
                    '((org :variables org-enable-reveal-js-support t)))
#+END_SRC

    [[https://github.com/hakimel/reveal.js/releases][download]] =reveal.js= 并且 把 =org-reveal-root= 指向 =reveal.js=  路径
    文档 the [[https://github.com/yjwen/org-reveal#set-the-location-of-revealjs][manual]].

    或者，将以下行添加到要处理的每个 =.org= 文件中：
  #+BEGIN_EXAMPLE
    #+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
  #+END_EXAMPLE
*** Org-journal [ 简单的日记管理系统 ]
    - 在目录中每天创建一个单独的日志文件
    - 新的日志文件将始终迁移具有所选 TODO 状态的条目
    - 具有日志加密功能
    - 轻松集成 org-agenda 和 Emacs 日历，iCalendar

    #+BEGIN_SRC emacs-lisp
      (setq-default dotspacemacs-configuration-layers '(
                                                        (org :variables
                                                             org-enable-org-journal-support t)))
    #+END_SRC
    
    默认存储在 =~/Documents/journal/= 文件夹, 在 user-config 中覆盖
    #+BEGIN_SRC emacs-lisp
      (setq org-journal-dir "~/org/journal/")
    #+END_SRC

    要更改日志文件名格式 
    #+BEGIN_SRC emacs-lisp
      (setq org-journal-file-format "%Y-%m-%d")
    #+END_SRC
    *警告* : 不能包含扩展名，会破坏日历搜索功能

    配置日志的格式 
  #+BEGIN_EXAMPLE
  #+TITLE: Tuesday, September 06 2016
  #+END_EXAMPLE
 配置日期 
  #+BEGIN_SRC emacs-lisp
    (setq org-journal-date-prefix "#+TITLE: ")
    (setq org-journal-date-format "%A, %B %d %Y")
  #+END_SRC
  
配置时间格式
#+BEGIN_SRC emacs-lisp
  (setq org-journal-time-prefix "* ")
  (setq org-journal-time-format "")
#+END_SRC

或在 layer 中配置也可以
  
#+BEGIN_SRC emacs-lisp
  (setq-default dotspacemacs-configuration-layers '(
    (org :variables
        org-enable-org-journal-support t
        org-journal-dir "~/org/journal/"
        org-journal-file-format "%Y-%m-%d"
        org-journal-date-prefix "#+TITLE: "
        org-journal-date-format "%A, %B %d %Y"
        org-journal-time-prefix "* "
        org-journal-time-format "")
  )
#+END_SRC
*** Hugo (巨大，无限) 
    是一种兼容 ~Markdown~ , ~TOML/YAML~ 的前端格式
#+BEGIN_SRC emacs-lisp
  (setq-default dotspacemacs-configuration-layers '(
    (org :variables
         org-enable-hugo-support t)))
#+END_SRC
*** Trello [ 也是一种文档展现形式吧 ]
#+BEGIN_SRC emacs-lisp
  (setq-default dotspacemacs-configuration-layers '(
    (org :variables
         org-enable-trello-support t)))
#+END_SRC
*** bullets
    配置子弹
    #+BEGIN_SRC emacs-lisp
      (setq org-bullets-bullet-list '("■" "◆" "▲" "▶"))
    #+END_SRC
    禁用子弹
    #+BEGIN_SRC emacs-lisp
      (dotspacemacs-excluded-packages '(org-bullets))
    #+END_SRC
*** Project [ 项目支持 ]
    指定项目特定 TODOs,如果是绝对路径，那么所有项目的 TODOs 都在那个文件里，只有
    文件名的话,就存储在项目的根目录

    #+BEGIN_SRC emacs-lisp
      (setq-default dotspacemacs-configuration-layers
                    '((org :variables org-projectile-file "TODOs.org")))
    #+END_SRC

   TODO 文件不会自动加载到 agenda 中的，可以这样配置 
   #+BEGIN_SRC emacs-lisp
     (with-eval-after-load 'org-agenda
       (require 'org-projectile)
       (mapcar '(lambda (file)
                  (when (file-exists-p file)
                    (push file org-agenda-files)))
               (org-projectile-todo-files)))
   #+END_SRC
*** Org-brain support
*** Mode line 
    临时显示  org clock , 请按 ~SPC t m c~   
    永久显示 
    #+BEGIN_SRC elisp
      (setq spaceline-org-clock-p t)
    #+END_SRC
*** Sticky header[ 粘性标题支持 ]
    #+BEGIN_SRC emacs-lisp
      (setq-default dotspacemacs-configuration-layers '(
                                                        (org :variables
                                                             org-enable-sticky-header t)))
    #+END_SRC
*** Epub 
    输出 epub 格式 
    #+BEGIN_SRC emacs-lisp
      (setq-default dotspacemacs--configuration-layers
                    '((org :variables
                           org-enable-epub-support t)))
    #+END_SRC
*** 快捷键
**** start org
     | ~SPC a o #~   | 显示 agenda 中没有开启 TODO 的列表                                 |
     | ~SPC a o /~   | 在 agenda files 中搜索                                             |
     | ~SPC a o a~   | agenda list                                                        |
     | ~SPC a o c~   | 打开 capture ,供你写文字(可以配置模板)                             |
     | ~SPC a o e~   | org store agenda views                                             |
     | ~SPC a o f i~ | org feed 转到 inbox                                                |
     | ~SPC a o f u~ | org feed 更新全部                                                  |
     | ~SPC a o C c~ | 取消时钟                                                           |
     | ~SPC a o C g~ | 最后的 clocked-in clock (go to specific recent clock with ~SPC u~) |
     | ~SPC a o C i~ | clock in                                                           |
     | ~SPC a o C I~ | clock in last                                                      |
     | ~SPC a o C j~ | 到 current clock                                                   |
     | ~SPC a o C o~ | clock out                                                          |
     | ~SPC a o C r~ | resolve clocks                                                     |
     | ~SPC a o l~   | 保存 link                                                          |
     | ~SPC a o m~   | 列出 tags                                                          |
     | ~SPC a o o~   | agenda 命令列表                                                    |
     | ~SPC a o s~   | 也是搜索，就是上面的显示文件名                                     |
     | ~SPC a o t~   | 显示 todo list                                                     |
**** 开关
     | ~SPC m T c~ | org-toggle-checkbox                           |
     | ~SPC m T e~ | org-toggle-pretty-entities                    |
     | ~SPC m T i~ | org-toggle-inline-images                      |
     | ~SPC m T l~ | org-toggle-link-display                       |
     | ~SPC m T t~ | org-show-todo-tree                            |
     | ~SPC m T T~ | org-todo                                      |
     | ~SPC m T V~ | toggle =space-doc-mode= a read-only view mode |
     | ~SPC m T x~ | org-preview-latex-fragment                    |
**** org-mode
     | ~SPC m *~     | org-ctrl-c-star                               |
     | ~SPC m RET~   | org-ctrl-c-ret                                |
     | ~SPC m -~     | org-ctrl-c-minus                              |
     | ~SPC m '​~     | org-edit-special                              |
     | ~SPC m a~     | org-agenda                                    |
     | ~SPC m A~     | org-attach                                    |
     | ~SPC m c~     | org-capture                                   |
     | ~SPC m C c~   | org-clock-cancel                              |
     | ~SPC m C d~   | Temporarily show clock times for current file |
     | ~SPC m C e~   | org-evaluate-time-range                       |
     | ~SPC m C g~   | org-clock-goto                                |
     | ~SPC m C i~   | org-clock-in                                  |
     | ~SPC m C I~   | org-clock-in-last                             |
     | ~SPC m C j~   | Jump to the current clock                     |
     | ~SPC m C o~   | org-clock-out                                 |
     | ~SPC m C R~   | Insert clock report                           |
     | ~SPC m C r~   | org-resolve-clocks                            |
     | ~SPC m d d~   | org-deadline                                  |
     | ~SPC m d s~   | org-schedule                                  |
     | ~SPC m d t~   | org-time-stamp                                |
     | ~SPC m d T~   | org-time-stamp-inactive                       |
     | ~SPC m e e~   | org-export-dispatch                           |
     | ~SPC m e m~   | send current buffer as HTML email message     |
     | ~SPC m f i~   | org-feed-goto-inbox                           |
     | ~SPC m f u~   | org-feed-update-all                           |
     | ~SPC m l~     | org-open-at-point                             |
     | ~SPC m L~     | org-shiftright                                |
     | ~SPC m H~     | org-shiftleft                                 |
     | ~SPC m K~     | org-shiftup                                   |
     | ~SPC m J~     | org-shiftdown                                 |
     | ~SPC m C-S-l~ | org-shiftcontrolright                         |
     | ~SPC m C-S-h~ | org-shiftcontrolleft                          |
     | ~SPC m C-S-j~ | org-shiftcontroldown                          |
     | ~SPC m C-S-k~ | org-shiftcontrolup                            |
     | ~SPC s j~     | spacemacs/jump-in-buffer (jump to a heading)  |
**** evil-org-mode
     | ~gj~ / ~gk~   | 元素间导航        |
     | ~gh~ / ~gl~   | 父 /子 间导航     |
     | ~gH~          | 根节点,第一级标题 |
     | ~M-j~ / ~M-k~ | 元素移动          |
     | ~M-J~ / ~M-K~ | 元素树移动        |
     | ~M-h~ / ~M-l~ | 元素自身升降级    |
     | ~M-H~ / ~M-L~ | 元素树升降级      |
**** 表
     | ~SPC m t c~   | 把表转换为 table.el              |
     | ~SPC m t d c~ | 删除列                           |
     | ~SPC m t d r~ | 删除行                           |
     | ~SPC m t e~   | 插入计算结果                     |
     | ~SPC m t E~   | 导出表格(格式自己配)             |
     | ~SPC m t i c~ | 插入列                           |
     | ~SPC m t i h~ | 插入水平线                       |
     | ~SPC m t i r~ | 插入行                           |
     | ~SPC m t I~   | 将文件导入表格                   |
     | ~SPC m t n~   | 新建表格                         |
     | ~SPC m t N~   | 新建 table.el 格式表格           |
     | ~SPC m t p~   | 使用 org-plot / gnuplot 绘制表格 |
     | ~SPC m t r~   | 应用公式计算当前行               |
     | ~SPC m t s~   | 表格排序                         |
     | ~SPC m t t f~ | 公式调试器开关                   |
     | ~SPC m t t o~ | 行/列号的显示开关                |
     | ~SPC m t w~   | 长行截断到两行                   |
**** 元素插入
     | ~SPC m i d~   | org-insert-drawer                                |
     | ~SPC m i D s~ | 插入屏幕截图                                     |
     | ~SPC m i D y~ | 插入网络图片(图片保存在一级标题命名的文件夹下)   |
     | ~SPC m i e~   | org-set-effort                     effort        |
     | ~SPC m i f~   | org-insert-footnote              脚注            |
     | ~SPC m i h~   | org-insert-heading             标题              |
     | ~SPC m i H~   | org-insert-heading-after-current                 |
     | ~SPC m i i~   | org-insert-item 列表项                           |
     | ~SPC m i K~   | spacemacs/insert-keybinding-org         键盘按键 |
     | ~SPC m i l~   | org-insert-link        链接                      |
     | ~SPC m i L~   | 网络链接，会自动附上有标题的链接                 |
     | ~SPC m i n~   | org-add-note  插入一段 note                         |
     | ~SPC m i p~   | org-set-property    插入属性                         |
     | ~SPC m i s~   | org-insert-subheading 插入子标题                      |
     | ~SPC m i t~   | org-set-tags                  插入 tag              |
     |               |                                                  |
**** link
     打开链接 | ~SPC m x o~ | org-open-at-point |
**** Babel / Source Blocks
     | ~SPC m b .~ | 进入 Transient 状态|
     | ~SPC m b a~ | 产生一个 has 码 org-babel-sha1-hash         |
     | ~SPC m b b~ | 执行块 org-babel-execute-buffer            |
     | ~SPC m b c~ | 检查 org-babel-check-src-block              |
     | ~SPC m b d~ | 分成两段代码块 org-babel-demarcate-block      |
     | ~SPC m b e~ | 执行 org-babel-execute-maybe               |
     | ~SPC m b f~ | org-babel-tangle-file                    |
     | ~SPC m b g~ | 跳到命名代码块 org-babel-goto-named-src-block   |
     | ~SPC m b i~ | org-babel-lob-ingest                     |
     | ~SPC m b I~ | 代码块信息 org-babel-view-src-block-info      |
     | ~SPC m b j~ | 插入头部参数 org-babel-insert-header-arg        |
     | ~SPC m b l~ | org-babel-load-in-session                |
     | ~SPC m b n~ | 下一个代码块 org-babel-next-src-block         |
     | ~SPC m b o~ | 打开求值结果 buffer  org-babel-open-src-block-result |
     | ~SPC m b p~ | 上一个代码块 org-babel-previous-src-block            |
     | ~SPC m b r~ | 跳到命名结果块 org-babel-goto-named-result      |
     | ~SPC m b s~ | org-babel-execute-subtree                |
     | ~SPC m b t~ | org-babel-tangle                         |
     | ~SPC m b u~ |跳到代码块头部 org-babel-goto-src-block-head     |
     | ~SPC m b v~ |在另一个 buffer 展开代码块  org-babel-expand-src-block |
     | ~SPC m b x~ | org-babel-do-key-sequence-in-edit-buffer |
     | ~SPC m b z~ | org-babel-switch-to-session              |
     | ~SPC m b Z~ | org-babel-switch-to-session-with-code    |
**** 加强
     | ~SPC m x b~ | 粗体     |
     | ~SPC m x c~ | 代码     |
     | ~SPC m x i~ | 斜体     |
     | ~SPC m x r~ | 清除特性 |
     | ~SPC m x s~ | 删除线   |
     | ~SPC m x u~ | 下划线   |
     | ~SPC m x v~ | 等宽     |
     |             |          |
**** 在日历中导航
     | ~M-l~ | 明天 |
     | ~M-h~ | 昨天 |
     | ~M-j~ | 下周 |
     | ~M-k~ | 上周 |
     | ~M-L~ | 下月 |
     | ~M-H~ | 上月 |
     | ~M-J~ | 下年 |
     | ~M-K~ | 上年 |
     |       |      |
**** Presentation [简报,放大镜]
     激活  ~SPC SPC org-present~
**** Org-projectile
     | ~SPC a o p~       | Capture a TODO for the current project                  |
     | ~SPC u SPC a o p~ | Capture a TODO for any given project (choose from list) |
     | ~SPC p o~         | Go to the TODOs for the current project                 |
** emacs-lisp
*** 调试 (有问题)
    #+BEGIN_SRC elisp
      (defun helloworld (name)
        (let ((n (subroutine name)))
          (message (format "Hello world, %s!" name))))

      (defun subroutine (s)
        (concat "my dear " s))

      (helloworld "Spacemacs")
    #+END_SRC

    步骤
    1. 此在文件里 按 ~, '~
    1. 把光标放在源码块， 按 ~, e f~. 每个表达式都要执行一遍 (函数的定义有了)
    2. 如果想调试某个表达式，把光标放在 ~defun~ 关键字处，按 ~, d f~, 它会放置一个 ~断点~ (断点有了)
    3. 然后在调用的地方 ， =(helloworld "Spacemacs")= 右括号尾部, 按 ~, e e~ ,求值表达式 (调试的代码有了)

*** 结构安全编辑
    保持 ~s-expressions~ 平衡
    开关 ~SPC m T s~
     
    自动开启
    #+BEGIN_SRC emacs-lisp
      (spacemacs/toggle-evil-safe-lisp-structural-editing-on-register-hook-emacs-lisp-mode)
    #+END_SRC

    or to enable it for all supported modes:

    #+BEGIN_SRC emacs-lisp
      (spacemacs/toggle-evil-safe-lisp-structural-editing-on-register-hooks)
    #+END_SRC

    模式行会显示此标记  =🆂=
*** 键绑定
    | ~SPC m g g~                | 转到定义                                             |
    | ~SPC m g G~                | 两一个窗口打开定义                                   |
    | ~SPC m h h~                | 函数简短描述                                         |
    | ~SPC m c c~                | 字节编译当前文件                                     |
    | ~SPC m c l~                | 弹出 compile-log buffer                              |
    | ~SPC m e $~ or ~SPC m e l~ | 跳到行尾并求值,( 这个好 )                            |
    | ~SPC m e b~                | evaluate current buffer                              |
    | ~SPC m e C~                | evaluate current =defun= or =setq=                   |
    | ~SPC m e e~                | 求值光标前的表达式                                   |
    | ~SPC m e f~                | 求值当前函数 (好)                                    |
    | ~SPC m e r~                | evaluate current region  (这个很好)                  |
    | ~SPC m ​,​~                  | toggle =lisp state=  (不会用)                        |
    | ~SPC m t b~                | run tests of current buffer  (不会用)                |
    | ~SPC m t q~                | run =ert=                (不会用)                    |
    | ~SPC m d m~                | open [[https://github.com/joddie/macrostep][macrostep]] transient-state(对宏有用，可以折叠宏) |
    | ~SPC m :~                  | toggle nameless minor mode(关闭命名空间)             |
    | ~SPC k :~                  | 执行 lisp 命令                                       |
    | ~SPC k (~                  | 插入同级表达式(上一行)                               |
    | ~SPC k )~                  | 插入同级表达式(下一行)                               |
    | ~SPC k $~                  | 到此表达式尾部括号                                   |
    | ~SPC k 0~                  | 到此表达式开头 ( % 更好)                             |
    | ~SPC k ds~                 | 删除光标下的符号 (还行)                              |
    | ~SPC k dw~                 | 删除 word                                            |
    | ~SPC k w~                  | wrap expression with parenthesis                     |
    | ~SPC k W~                  | unwrap expression                                    |
    | ~SPC k y~                  | copy expression (还行)                               |
*** 用 overseer 测试
    | ~SPC m t a~ | overseer test |
    | ~SPC m t A~ | test debug    |
    | ~SPC m t t~ | run test      |
    | ~SPC m t b~ | test buffer   |
    | ~SPC m t f~ | test file     |
    | ~SPC m t g~ | test tags     |
    | ~SPC m t p~ | test prompt   |
    | ~SPC m t q~ | test quiet    |
    | ~SPC m t h~ | test help     |
*** 开启 smartparens 可以求值配对函数
| ~SPC m e c~ | evaluate sexp around point   |
| ~SPC m e s~ | evaluate symbol around point |
*** 代码格式化
    | ~SPC m = b~ | format current buffer   |
    | ~SPC m = f~ | format current function |
    | ~SPC m = o~ | format all on one line  |
    | ~SPC m = s~ | format current sexp     |
*** 调试
    | ~SPC m d f~ | on a =defun= symbol toggle on the instrumentalisation of the function  |
    | ~SPC m d F~ | on a =defun= symbol toggle off the instrumentalisation of the function |
    | ~SPC m d t~ | insert =(debug)= to print the stack trace and re-evaluate the function |




